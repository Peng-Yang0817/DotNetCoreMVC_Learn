using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace NoteDotNetCoreUseReverseEngineering.Models.TQLDB.Tables;

public partial class TQLDBTablesContext : DbContext
{
    public TQLDBTablesContext()
    {
    }

    public TQLDBTablesContext(DbContextOptions<TQLDBTablesContext> options)
        : base(options)
    {
    }

    public virtual DbSet<A1032> A1032s { get; set; }

    public virtual DbSet<A1033> A1033s { get; set; }

    public virtual DbSet<A1034> A1034s { get; set; }

    public virtual DbSet<A1035> A1035s { get; set; }

    public virtual DbSet<A103B> A103Bs { get; set; }

    public virtual DbSet<A103Save> A103Saves { get; set; }

    public virtual DbSet<A1041> A1041s { get; set; }

    public virtual DbSet<A1042> A1042s { get; set; }

    public virtual DbSet<A1043> A1043s { get; set; }

    public virtual DbSet<A1044> A1044s { get; set; }

    public virtual DbSet<A1045> A1045s { get; set; }

    public virtual DbSet<A104B> A104Bs { get; set; }

    public virtual DbSet<A104Save> A104Saves { get; set; }

    public virtual DbSet<A105Pw> A105Pws { get; set; }

    public virtual DbSet<Auth001> Auth001s { get; set; }

    public virtual DbSet<Auth001Back> Auth001Backs { get; set; }

    public virtual DbSet<Auth001Backup> Auth001Backups { get; set; }

    public virtual DbSet<Auth001SysCtrl002SchoolCtrl001State006> Auth001SysCtrl002SchoolCtrl001State006s { get; set; }

    public virtual DbSet<Auth002> Auth002s { get; set; }

    public virtual DbSet<Auth003> Auth003s { get; set; }

    public virtual DbSet<B1041> B1041s { get; set; }

    public virtual DbSet<B1042> B1042s { get; set; }

    public virtual DbSet<B1043> B1043s { get; set; }

    public virtual DbSet<B1044> B1044s { get; set; }

    public virtual DbSet<B1045> B1045s { get; set; }

    public virtual DbSet<Board001> Board001s { get; set; }

    public virtual DbSet<Board002> Board002s { get; set; }

    public virtual DbSet<Board003> Board003s { get; set; }

    public virtual DbSet<BoardCategory> BoardCategories { get; set; }

    public virtual DbSet<BoardFile> BoardFiles { get; set; }

    public virtual DbSet<BoardPublish> BoardPublishes { get; set; }

    public virtual DbSet<CheckedTransform> CheckedTransforms { get; set; }

    public virtual DbSet<CheckruleYnCn> CheckruleYnCns { get; set; }

    public virtual DbSet<Check任職兩年且全職進修> Check任職兩年且全職進修s { get; set; }

    public virtual DbSet<Check任職狀態> Check任職狀態s { get; set; }

    public virtual DbSet<Check作者順序> Check作者順序s { get; set; }

    public virtual DbSet<Check使用執照取得情形> Check使用執照取得情形s { get; set; }

    public virtual DbSet<Check修別> Check修別s { get; set; }

    public virtual DbSet<Check借調否> Check借調否s { get; set; }

    public virtual DbSet<Check借調目的來源> Check借調目的來源s { get; set; }

    public virtual DbSet<Check兼任教師是否具本全職工作者> Check兼任教師是否具本全職工作者s { get; set; }

    public virtual DbSet<Check出租借情況> Check出租借情況s { get; set; }

    public virtual DbSet<Check升等狀態> Check升等狀態s { get; set; }

    public virtual DbSet<Check升等等級> Check升等等級s { get; set; }

    public virtual DbSet<Check升等類型> Check升等類型s { get; set; }

    public virtual DbSet<Check合約有無經法院公證> Check合約有無經法院公證s { get; set; }

    public virtual DbSet<Check學制代碼> Check學制代碼s { get; set; }

    public virtual DbSet<Check學期> Check學期s { get; set; }

    public virtual DbSet<Check學校辦理方式> Check學校辦理方式s { get; set; }

    public virtual DbSet<Check實習場所> Check實習場所s { get; set; }

    public virtual DbSet<Check實習期間> Check實習期間s { get; set; }

    public virtual DbSet<Check專兼任> Check專兼任s { get; set; }

    public virtual DbSet<Check專兼職業別> Check專兼職業別s { get; set; }

    public virtual DbSet<Check建物安全鑑定通過情形> Check建物安全鑑定通過情形s { get; set; }

    public virtual DbSet<Check教師分類> Check教師分類s { get; set; }

    public virtual DbSet<Check是否> Check是否s { get; set; }

    public virtual DbSet<Check是否支領彈性薪資> Check是否支領彈性薪資s { get; set; }

    public virtual DbSet<Check是否為農林漁牧或工業領域類科系> Check是否為農林漁牧或工業領域類科系s { get; set; }

    public virtual DbSet<Check是否符合延畢生條件> Check是否符合延畢生條件s { get; set; }

    public virtual DbSet<Check最高學歷學位> Check最高學歷學位s { get; set; }

    public virtual DbSet<Check有無合約> Check有無合約s { get; set; }

    public virtual DbSet<Check期間> Check期間s { get; set; }

    public virtual DbSet<Check校內簽約> Check校內簽約s { get; set; }

    public virtual DbSet<Check校區> Check校區s { get; set; }

    public virtual DbSet<Check權屬別> Check權屬別s { get; set; }

    public virtual DbSet<Check狀態> Check狀態s { get; set; }

    public virtual DbSet<Check發表形式> Check發表形式s { get; set; }

    public virtual DbSet<Check租賃宿舍是否符合土地使用分區管制規定> Check租賃宿舍是否符合土地使用分區管制規定s { get; set; }

    public virtual DbSet<Check等級> Check等級s { get; set; }

    public virtual DbSet<Check系所類別> Check系所類別s { get; set; }

    public virtual DbSet<Check系所類別代碼> Check系所類別代碼s { get; set; }

    public virtual DbSet<Check編制內外> Check編制內外s { get; set; }

    public virtual DbSet<Check編制內是否辦理延長> Check編制內是否辦理延長s { get; set; }

    public virtual DbSet<Check聘書職級> Check聘書職級s { get; set; }

    public virtual DbSet<Check聘約是否達一年以上> Check聘約是否達一年以上s { get; set; }

    public virtual DbSet<Check興建狀況> Check興建狀況s { get; set; }

    public virtual DbSet<Check補助情形> Check補助情形s { get; set; }

    public virtual DbSet<Check證書職級> Check證書職級s { get; set; }

    public virtual DbSet<Check證照類型> Check證照類型s { get; set; }

    public virtual DbSet<Check身份識別種類> Check身份識別種類s { get; set; }

    public virtual DbSet<Check身份類別> Check身份類別s { get; set; }

    public virtual DbSet<Check進修地區> Check進修地區s { get; set; }

    public virtual DbSet<Check進修時間> Check進修時間s { get; set; }

    public virtual DbSet<Check進修狀態> Check進修狀態s { get; set; }

    public virtual DbSet<Check進修項目> Check進修項目s { get; set; }

    public virtual DbSet<Check開課系所類別> Check開課系所類別s { get; set; }

    public virtual DbSet<Check領域類型> Check領域類型s { get; set; }

    public virtual DbSet<Domain001> Domain001s { get; set; }

    public virtual DbSet<EmailAttLog> EmailAttLogs { get; set; }

    public virtual DbSet<EmailLog> EmailLogs { get; set; }

    public virtual DbSet<ExamineNoteRecord> ExamineNoteRecords { get; set; }

    public virtual DbSet<ExtensionCategory> ExtensionCategories { get; set; }

    public virtual DbSet<Form001Old> Form001Olds { get; set; }

    public virtual DbSet<Form002Old> Form002Olds { get; set; }

    public virtual DbSet<Form003Old> Form003Olds { get; set; }

    public virtual DbSet<Form004Old> Form004Olds { get; set; }

    public virtual DbSet<Form005Old> Form005Olds { get; set; }

    public virtual DbSet<Form1> Form1s { get; set; }

    public virtual DbSet<Form2> Form2s { get; set; }

    public virtual DbSet<Form21> Form21s { get; set; }

    public virtual DbSet<Form3> Form3s { get; set; }

    public virtual DbSet<HightSchoolView> HightSchoolViews { get; set; }

    public virtual DbSet<HightSchoolViewSumJqsFromSameCaseItem> HightSchoolViewSumJqsFromSameCaseItems { get; set; }

    public virtual DbSet<LogAuth001> LogAuth001s { get; set; }

    public virtual DbSet<LogNform000> LogNform000s { get; set; }

    public virtual DbSet<LogNform001> LogNform001s { get; set; }

    public virtual DbSet<LogNform002> LogNform002s { get; set; }

    public virtual DbSet<LogNform003> LogNform003s { get; set; }

    public virtual DbSet<LogNform004> LogNform004s { get; set; }

    public virtual DbSet<LogNform005> LogNform005s { get; set; }

    public virtual DbSet<LogNform006> LogNform006s { get; set; }

    public virtual DbSet<LogNform007> LogNform007s { get; set; }

    public virtual DbSet<LogNform008> LogNform008s { get; set; }

    public virtual DbSet<LogNform009> LogNform009s { get; set; }

    public virtual DbSet<LogNform010> LogNform010s { get; set; }

    public virtual DbSet<LogNform011> LogNform011s { get; set; }

    public virtual DbSet<LogNform012> LogNform012s { get; set; }

    public virtual DbSet<LogNform013> LogNform013s { get; set; }

    public virtual DbSet<LogNform014> LogNform014s { get; set; }

    public virtual DbSet<LogNform015> LogNform015s { get; set; }

    public virtual DbSet<LogNform016> LogNform016s { get; set; }

    public virtual DbSet<LogNform017> LogNform017s { get; set; }

    public virtual DbSet<LogNform018> LogNform018s { get; set; }

    public virtual DbSet<LogNform019> LogNform019s { get; set; }

    public virtual DbSet<LogNform020> LogNform020s { get; set; }

    public virtual DbSet<LogNform021> LogNform021s { get; set; }

    public virtual DbSet<LogNform022> LogNform022s { get; set; }

    public virtual DbSet<LogNform023> LogNform023s { get; set; }

    public virtual DbSet<LogNform024> LogNform024s { get; set; }

    public virtual DbSet<LogNform025> LogNform025s { get; set; }

    public virtual DbSet<LogNform026> LogNform026s { get; set; }

    public virtual DbSet<LogNform027> LogNform027s { get; set; }

    public virtual DbSet<LogNform028> LogNform028s { get; set; }

    public virtual DbSet<LogNform029> LogNform029s { get; set; }

    public virtual DbSet<LogNform030> LogNform030s { get; set; }

    public virtual DbSet<LogOneForm000> LogOneForm000s { get; set; }

    public virtual DbSet<LogOneForm001> LogOneForm001s { get; set; }

    public virtual DbSet<LogOneForm0011> LogOneForm0011s { get; set; }

    public virtual DbSet<LogOneForm0012> LogOneForm0012s { get; set; }

    public virtual DbSet<LogOneForm0013> LogOneForm0013s { get; set; }

    public virtual DbSet<LogOneForm0013Support> LogOneForm0013Supports { get; set; }

    public virtual DbSet<LogOneForm0014> LogOneForm0014s { get; set; }

    public virtual DbSet<LogOneForm0014Support> LogOneForm0014Supports { get; set; }

    public virtual DbSet<LogOneForm002> LogOneForm002s { get; set; }

    public virtual DbSet<LogOneForm003> LogOneForm003s { get; set; }

    public virtual DbSet<LogOneForm004> LogOneForm004s { get; set; }

    public virtual DbSet<LogOneForm005> LogOneForm005s { get; set; }

    public virtual DbSet<LogOneForm006> LogOneForm006s { get; set; }

    public virtual DbSet<LogOneForm007> LogOneForm007s { get; set; }

    public virtual DbSet<LogOneForm008> LogOneForm008s { get; set; }

    public virtual DbSet<LogOneForm009> LogOneForm009s { get; set; }

    public virtual DbSet<LogOneFormAnnex> LogOneFormAnnexes { get; set; }

    public virtual DbSet<LogOneFormState> LogOneFormStates { get; set; }

    public virtual DbSet<LogOneFormUpload> LogOneFormUploads { get; set; }

    public virtual DbSet<LogOneSchoolState> LogOneSchoolStates { get; set; }

    public virtual DbSet<LogSchoolCtrl001> LogSchoolCtrl001s { get; set; }

    public virtual DbSet<LogSchoolCtrl002> LogSchoolCtrl002s { get; set; }

    public virtual DbSet<LogSchoolCtrl003> LogSchoolCtrl003s { get; set; }

    public virtual DbSet<LogSchoolCtrl004> LogSchoolCtrl004s { get; set; }

    public virtual DbSet<LogSchoolCtrl005> LogSchoolCtrl005s { get; set; }

    public virtual DbSet<LogSchoolCtrl007> LogSchoolCtrl007s { get; set; }

    public virtual DbSet<LogSchoolCtrl008> LogSchoolCtrl008s { get; set; }

    public virtual DbSet<LogSchoolCtrl009> LogSchoolCtrl009s { get; set; }

    public virtual DbSet<LogSchoolCtrl010> LogSchoolCtrl010s { get; set; }

    public virtual DbSet<LogSchoolCtrl012> LogSchoolCtrl012s { get; set; }

    public virtual DbSet<LogSchoolCtrl013> LogSchoolCtrl013s { get; set; }

    public virtual DbSet<LogState001> LogState001s { get; set; }

    public virtual DbSet<LogState002> LogState002s { get; set; }

    public virtual DbSet<LogState003> LogState003s { get; set; }

    public virtual DbSet<LogState004> LogState004s { get; set; }

    public virtual DbSet<LogState005> LogState005s { get; set; }

    public virtual DbSet<LogState006> LogState006s { get; set; }

    public virtual DbSet<LogState007> LogState007s { get; set; }

    public virtual DbSet<LogState008> LogState008s { get; set; }

    public virtual DbSet<LogState009> LogState009s { get; set; }

    public virtual DbSet<LogSysCtrl001> LogSysCtrl001s { get; set; }

    public virtual DbSet<LogSysCtrl002> LogSysCtrl002s { get; set; }

    public virtual DbSet<LogSysCtrl003> LogSysCtrl003s { get; set; }

    public virtual DbSet<LogSysCtrl004> LogSysCtrl004s { get; set; }

    public virtual DbSet<Mform000> Mform000s { get; set; }

    public virtual DbSet<Mform000003Mschool001School001> Mform000003Mschool001School001s { get; set; }

    public virtual DbSet<Mform000201707061> Mform000201707061s { get; set; }

    public virtual DbSet<Mform00020180607> Mform00020180607s { get; set; }

    public virtual DbSet<Mform00020180706> Mform00020180706s { get; set; }

    public virtual DbSet<Mform000Mform001> Mform000Mform001s { get; set; }

    public virtual DbSet<Mform000Mform001Mform002Mform003> Mform000Mform001Mform002Mform003s { get; set; }

    public virtual DbSet<Mform001> Mform001s { get; set; }

    public virtual DbSet<Mform002> Mform002s { get; set; }

    public virtual DbSet<Mform003> Mform003s { get; set; }

    public virtual DbSet<Mform101a> Mform101as { get; set; }

    public virtual DbSet<Mform101a20180607> Mform101a20180607s { get; set; }

    public virtual DbSet<Mform101a20180703> Mform101a20180703s { get; set; }

    public virtual DbSet<Mform101a20180706> Mform101a20180706s { get; set; }

    public virtual DbSet<Mform101b> Mform101bs { get; set; }

    public virtual DbSet<Mform101c> Mform101cs { get; set; }

    public virtual DbSet<Mform102a> Mform102as { get; set; }

    public virtual DbSet<Mform102a20180607> Mform102a20180607s { get; set; }

    public virtual DbSet<Mform102a20180703> Mform102a20180703s { get; set; }

    public virtual DbSet<Mform102b> Mform102bs { get; set; }

    public virtual DbSet<Mform103a> Mform103as { get; set; }

    public virtual DbSet<Mform103a20180607> Mform103a20180607s { get; set; }

    public virtual DbSet<Mform103a20180703> Mform103a20180703s { get; set; }

    public virtual DbSet<Mform103a20180706> Mform103a20180706s { get; set; }

    public virtual DbSet<Mform103b> Mform103bs { get; set; }

    public virtual DbSet<Mform103c> Mform103cs { get; set; }

    public virtual DbSet<Mform104a> Mform104as { get; set; }

    public virtual DbSet<Mform104a20180607> Mform104a20180607s { get; set; }

    public virtual DbSet<Mform104b> Mform104bs { get; set; }

    public virtual DbSet<Mform105a> Mform105as { get; set; }

    public virtual DbSet<Mform105a20180607> Mform105a20180607s { get; set; }

    public virtual DbSet<Mform105a20180706> Mform105a20180706s { get; set; }

    public virtual DbSet<Mform105b> Mform105bs { get; set; }

    public virtual DbSet<Mform105c> Mform105cs { get; set; }

    public virtual DbSet<Mform106a> Mform106as { get; set; }

    public virtual DbSet<Mform106a20180607> Mform106a20180607s { get; set; }

    public virtual DbSet<Mform106a20180703> Mform106a20180703s { get; set; }

    public virtual DbSet<Mform106a20180706> Mform106a20180706s { get; set; }

    public virtual DbSet<Mform106b> Mform106bs { get; set; }

    public virtual DbSet<Mform106c> Mform106cs { get; set; }

    public virtual DbSet<Mform107a> Mform107as { get; set; }

    public virtual DbSet<Mform107a20180607> Mform107a20180607s { get; set; }

    public virtual DbSet<Mform107b> Mform107bs { get; set; }

    public virtual DbSet<Mform108a> Mform108as { get; set; }

    public virtual DbSet<Mform108a20180607> Mform108a20180607s { get; set; }

    public virtual DbSet<Mform108a20180706> Mform108a20180706s { get; set; }

    public virtual DbSet<Mform108b> Mform108bs { get; set; }

    public virtual DbSet<Mform108c> Mform108cs { get; set; }

    public virtual DbSet<Mform109a> Mform109as { get; set; }

    public virtual DbSet<Mform109a20180607> Mform109a20180607s { get; set; }

    public virtual DbSet<Mform109b> Mform109bs { get; set; }

    public virtual DbSet<Mform110a> Mform110as { get; set; }

    public virtual DbSet<Mform110a20180607> Mform110a20180607s { get; set; }

    public virtual DbSet<Mform110b> Mform110bs { get; set; }

    public virtual DbSet<Mform110c> Mform110cs { get; set; }

    public virtual DbSet<Mform111a> Mform111as { get; set; }

    public virtual DbSet<Mform111a20180607> Mform111a20180607s { get; set; }

    public virtual DbSet<Mform111b> Mform111bs { get; set; }

    public virtual DbSet<Mform201a> Mform201as { get; set; }

    public virtual DbSet<Mform201b> Mform201bs { get; set; }

    public virtual DbSet<Mform202a> Mform202as { get; set; }

    public virtual DbSet<Mform202b> Mform202bs { get; set; }

    public virtual DbSet<Mform203a> Mform203as { get; set; }

    public virtual DbSet<Mform203b> Mform203bs { get; set; }

    public virtual DbSet<Mform204a> Mform204as { get; set; }

    public virtual DbSet<Mform204b> Mform204bs { get; set; }

    public virtual DbSet<Mform205b> Mform205bs { get; set; }

    public virtual DbSet<Mform206b> Mform206bs { get; set; }

    public virtual DbSet<Mform207b> Mform207bs { get; set; }

    public virtual DbSet<Mform208b> Mform208bs { get; set; }

    public virtual DbSet<Mform209b> Mform209bs { get; set; }

    public virtual DbSet<Mform301a> Mform301as { get; set; }

    public virtual DbSet<Mform301a20180705> Mform301a20180705s { get; set; }

    public virtual DbSet<Mform301b> Mform301bs { get; set; }

    public virtual DbSet<Mform301c> Mform301cs { get; set; }

    public virtual DbSet<Mform401a> Mform401as { get; set; }

    public virtual DbSet<Mform402a> Mform402as { get; set; }

    public virtual DbSet<Mform501> Mform501s { get; set; }

    public virtual DbSet<Mform502> Mform502s { get; set; }

    public virtual DbSet<MformR1> MformR1s { get; set; }

    public virtual DbSet<MformR1view> MformR1views { get; set; }

    public virtual DbSet<MformR2a> MformR2as { get; set; }

    public virtual DbSet<MformR2b> MformR2bs { get; set; }

    public virtual DbSet<MformR2c> MformR2cs { get; set; }

    public virtual DbSet<MformR3> MformR3s { get; set; }

    public virtual DbSet<MformR4> MformR4s { get; set; }

    public virtual DbSet<MformS01> MformS01s { get; set; }

    public virtual DbSet<MformS02> MformS02s { get; set; }

    public virtual DbSet<MformS03> MformS03s { get; set; }

    public virtual DbSet<MformS03Compute> MformS03Computes { get; set; }

    public virtual DbSet<MformS04> MformS04s { get; set; }

    public virtual DbSet<MformT01a> MformT01as { get; set; }

    public virtual DbSet<MformT01a20180703> MformT01a20180703s { get; set; }

    public virtual DbSet<MformT01a20180706> MformT01a20180706s { get; set; }

    public virtual DbSet<MformT01b> MformT01bs { get; set; }

    public virtual DbSet<MformT02a> MformT02as { get; set; }

    public virtual DbSet<MformT02a20180703> MformT02a20180703s { get; set; }

    public virtual DbSet<MformT02a20180706> MformT02a20180706s { get; set; }

    public virtual DbSet<MformT02b> MformT02bs { get; set; }

    public virtual DbSet<MformT03b> MformT03bs { get; set; }

    public virtual DbSet<MformT04b> MformT04bs { get; set; }

    public virtual DbSet<MschoolCtrl001> MschoolCtrl001s { get; set; }

    public virtual DbSet<Mstate001> Mstate001s { get; set; }

    public virtual DbSet<Nform000> Nform000s { get; set; }

    public virtual DbSet<Nform000State001SchoolCtrl001> Nform000State001SchoolCtrl001s { get; set; }

    public virtual DbSet<Nform001> Nform001s { get; set; }

    public virtual DbSet<Nform002> Nform002s { get; set; }

    public virtual DbSet<Nform002State004> Nform002State004s { get; set; }

    public virtual DbSet<Nform003> Nform003s { get; set; }

    public virtual DbSet<Nform003State004> Nform003State004s { get; set; }

    public virtual DbSet<Nform004> Nform004s { get; set; }

    public virtual DbSet<Nform005> Nform005s { get; set; }

    public virtual DbSet<Nform006> Nform006s { get; set; }

    public virtual DbSet<Nform007> Nform007s { get; set; }

    public virtual DbSet<Nform008> Nform008s { get; set; }

    public virtual DbSet<Nform009> Nform009s { get; set; }

    public virtual DbSet<Nform010> Nform010s { get; set; }

    public virtual DbSet<Nform011> Nform011s { get; set; }

    public virtual DbSet<Nform012> Nform012s { get; set; }

    public virtual DbSet<Nform013> Nform013s { get; set; }

    public virtual DbSet<Nform014> Nform014s { get; set; }

    public virtual DbSet<Nform015> Nform015s { get; set; }

    public virtual DbSet<Nform016> Nform016s { get; set; }

    public virtual DbSet<Nform017> Nform017s { get; set; }

    public virtual DbSet<Nform018> Nform018s { get; set; }

    public virtual DbSet<Nform019> Nform019s { get; set; }

    public virtual DbSet<Nform020> Nform020s { get; set; }

    public virtual DbSet<Nform021> Nform021s { get; set; }

    public virtual DbSet<Nform022> Nform022s { get; set; }

    public virtual DbSet<Nform023> Nform023s { get; set; }

    public virtual DbSet<Nform024> Nform024s { get; set; }

    public virtual DbSet<Nform025> Nform025s { get; set; }

    public virtual DbSet<Nform026> Nform026s { get; set; }

    public virtual DbSet<Nform027> Nform027s { get; set; }

    public virtual DbSet<Nform028> Nform028s { get; set; }

    public virtual DbSet<Nform029> Nform029s { get; set; }

    public virtual DbSet<Nform030> Nform030s { get; set; }

    public virtual DbSet<Nform031> Nform031s { get; set; }

    public virtual DbSet<Nform032> Nform032s { get; set; }

    public virtual DbSet<Nform032AgainDeposit> Nform032AgainDeposits { get; set; }

    public virtual DbSet<Nform033> Nform033s { get; set; }

    public virtual DbSet<Nform033AgainDeposit> Nform033AgainDeposits { get; set; }

    public virtual DbSet<Nform034ClassSize> Nform034ClassSizes { get; set; }

    public virtual DbSet<Nform034ClassSizeManage> Nform034ClassSizeManages { get; set; }

    public virtual DbSet<NformAnnex7> NformAnnex7s { get; set; }

    public virtual DbSet<NformAnnex7Step1> NformAnnex7Step1s { get; set; }

    public virtual DbSet<NformAnnex7Step12> NformAnnex7Step12s { get; set; }

    public virtual DbSet<NformAnnex7Step2> NformAnnex7Step2s { get; set; }

    public virtual DbSet<NformUpload> NformUploads { get; set; }

    public virtual DbSet<Nlog> Nlogs { get; set; }

    public virtual DbSet<Oe領域> Oe領域s { get; set; }

    public virtual DbSet<OneExamine001> OneExamine001s { get; set; }

    public virtual DbSet<OneExamine002> OneExamine002s { get; set; }

    public virtual DbSet<OneExamine002StateName> OneExamine002StateNames { get; set; }

    public virtual DbSet<OneExamineExamineFormList> OneExamineExamineFormLists { get; set; }

    public virtual DbSet<OneExamineFormTypeRelation> OneExamineFormTypeRelations { get; set; }

    public virtual DbSet<OneExamineRecruitFormList> OneExamineRecruitFormLists { get; set; }

    public virtual DbSet<OneForm000> OneForm000s { get; set; }

    public virtual DbSet<OneForm001> OneForm001s { get; set; }

    public virtual DbSet<OneForm0011> OneForm0011s { get; set; }

    public virtual DbSet<OneForm0012> OneForm0012s { get; set; }

    public virtual DbSet<OneForm0013> OneForm0013s { get; set; }

    public virtual DbSet<OneForm0013Support> OneForm0013Supports { get; set; }

    public virtual DbSet<OneForm0014> OneForm0014s { get; set; }

    public virtual DbSet<OneForm0014Support> OneForm0014Supports { get; set; }

    public virtual DbSet<OneForm002> OneForm002s { get; set; }

    public virtual DbSet<OneForm003> OneForm003s { get; set; }

    public virtual DbSet<OneForm004> OneForm004s { get; set; }

    public virtual DbSet<OneForm005> OneForm005s { get; set; }

    public virtual DbSet<OneForm006> OneForm006s { get; set; }

    public virtual DbSet<OneForm007> OneForm007s { get; set; }

    public virtual DbSet<OneForm008> OneForm008s { get; set; }

    public virtual DbSet<OneForm009> OneForm009s { get; set; }

    public virtual DbSet<OneFormAnnex> OneFormAnnexes { get; set; }

    public virtual DbSet<OneFormState> OneFormStates { get; set; }

    public virtual DbSet<OneFormUpload> OneFormUploads { get; set; }

    public virtual DbSet<OneNformA01> OneNformA01s { get; set; }

    public virtual DbSet<OneNformApplicaitonUpload> OneNformApplicaitonUploads { get; set; }

    public virtual DbSet<OneNformB01> OneNformB01s { get; set; }

    public virtual DbSet<OneNformB02> OneNformB02s { get; set; }

    public virtual DbSet<OneNformB03> OneNformB03s { get; set; }

    public virtual DbSet<OneNformB04> OneNformB04s { get; set; }

    public virtual DbSet<OneNformB05> OneNformB05s { get; set; }

    public virtual DbSet<OneNformC03> OneNformC03s { get; set; }

    public virtual DbSet<OneNformC04> OneNformC04s { get; set; }

    public virtual DbSet<OneNformC05> OneNformC05s { get; set; }

    public virtual DbSet<OneNformC06> OneNformC06s { get; set; }

    public virtual DbSet<OneNformC07> OneNformC07s { get; set; }

    public virtual DbSet<OneNformC08> OneNformC08s { get; set; }

    public virtual DbSet<OneNformC09> OneNformC09s { get; set; }

    public virtual DbSet<OneNformC10> OneNformC10s { get; set; }

    public virtual DbSet<OneNformC11> OneNformC11s { get; set; }

    public virtual DbSet<OneNformC12> OneNformC12s { get; set; }

    public virtual DbSet<OneNformC13> OneNformC13s { get; set; }

    public virtual DbSet<OneNformC14> OneNformC14s { get; set; }

    public virtual DbSet<OneNformC15> OneNformC15s { get; set; }

    public virtual DbSet<OneNformD01> OneNformD01s { get; set; }

    public virtual DbSet<OneNformD02> OneNformD02s { get; set; }

    public virtual DbSet<OneNformD03> OneNformD03s { get; set; }

    public virtual DbSet<OneNformE01> OneNformE01s { get; set; }

    public virtual DbSet<OneNformE02> OneNformE02s { get; set; }

    public virtual DbSet<OneNformE03> OneNformE03s { get; set; }

    public virtual DbSet<OneNformF01> OneNformF01s { get; set; }

    public virtual DbSet<OneNformFile> OneNformFiles { get; set; }

    public virtual DbSet<OneNformG01> OneNformG01s { get; set; }

    public virtual DbSet<OneNformH01> OneNformH01s { get; set; }

    public virtual DbSet<OneNformI01> OneNformI01s { get; set; }

    public virtual DbSet<OneNformJ01> OneNformJ01s { get; set; }

    public virtual DbSet<OneNformJ02> OneNformJ02s { get; set; }

    public virtual DbSet<OneNformJ03> OneNformJ03s { get; set; }

    public virtual DbSet<OneNformK01> OneNformK01s { get; set; }

    public virtual DbSet<OneNformK01condition> OneNformK01conditions { get; set; }

    public virtual DbSet<OneNformK01correspond> OneNformK01corresponds { get; set; }

    public virtual DbSet<OneNformK01decreasementReason> OneNformK01decreasementReasons { get; set; }

    public virtual DbSet<OneNformSchoolUploadFile> OneNformSchoolUploadFiles { get; set; }

    public virtual DbSet<OneNformType> OneNformTypes { get; set; }

    public virtual DbSet<OneNformUpload> OneNformUploads { get; set; }

    public virtual DbSet<OneSchoolState> OneSchoolStates { get; set; }

    public virtual DbSet<PasswordSmtp> PasswordSmtps { get; set; }

    public virtual DbSet<ResponsibleAgency> ResponsibleAgencies { get; set; }

    public virtual DbSet<SchoolCtrl001> SchoolCtrl001s { get; set; }

    public virtual DbSet<SchoolCtrl001002> SchoolCtrl001002s { get; set; }

    public virtual DbSet<SchoolCtrl001Auth001> SchoolCtrl001Auth001s { get; set; }

    public virtual DbSet<SchoolCtrl002> SchoolCtrl002s { get; set; }

    public virtual DbSet<SchoolCtrl003> SchoolCtrl003s { get; set; }

    public virtual DbSet<SchoolCtrl004> SchoolCtrl004s { get; set; }

    public virtual DbSet<SchoolCtrl005> SchoolCtrl005s { get; set; }

    public virtual DbSet<SchoolCtrl006Old> SchoolCtrl006Olds { get; set; }

    public virtual DbSet<SchoolCtrl007> SchoolCtrl007s { get; set; }

    public virtual DbSet<SchoolCtrl008> SchoolCtrl008s { get; set; }

    public virtual DbSet<SchoolCtrl009> SchoolCtrl009s { get; set; }

    public virtual DbSet<SchoolCtrl010> SchoolCtrl010s { get; set; }

    public virtual DbSet<SchoolCtrl011Old> SchoolCtrl011Olds { get; set; }

    public virtual DbSet<SchoolCtrl012> SchoolCtrl012s { get; set; }

    public virtual DbSet<SchoolCtrl013> SchoolCtrl013s { get; set; }

    public virtual DbSet<SchoolCtrl014> SchoolCtrl014s { get; set; }

    public virtual DbSet<SchoolFile> SchoolFiles { get; set; }

    public virtual DbSet<State001> State001s { get; set; }

    public virtual DbSet<State002> State002s { get; set; }

    public virtual DbSet<State003> State003s { get; set; }

    public virtual DbSet<State004> State004s { get; set; }

    public virtual DbSet<State005> State005s { get; set; }

    public virtual DbSet<State006> State006s { get; set; }

    public virtual DbSet<State007> State007s { get; set; }

    public virtual DbSet<State007003> State007003s { get; set; }

    public virtual DbSet<State008> State008s { get; set; }

    public virtual DbSet<State008State004> State008State004s { get; set; }

    public virtual DbSet<State009> State009s { get; set; }

    public virtual DbSet<State010> State010s { get; set; }

    public virtual DbSet<State011> State011s { get; set; }

    public virtual DbSet<State012> State012s { get; set; }

    public virtual DbSet<State013> State013s { get; set; }

    public virtual DbSet<State013A01> State013A01s { get; set; }

    public virtual DbSet<State014> State014s { get; set; }

    public virtual DbSet<State015> State015s { get; set; }

    public virtual DbSet<State016> State016s { get; set; }

    public virtual DbSet<State017> State017s { get; set; }

    public virtual DbSet<State018> State018s { get; set; }

    public virtual DbSet<State019> State019s { get; set; }

    public virtual DbSet<State022> State022s { get; set; }

    public virtual DbSet<State023> State023s { get; set; }

    public virtual DbSet<State024> State024s { get; set; }

    public virtual DbSet<Statistics007> Statistics007s { get; set; }

    public virtual DbSet<SysCtrl001> SysCtrl001s { get; set; }

    public virtual DbSet<SysCtrl002> SysCtrl002s { get; set; }

    public virtual DbSet<SysCtrl003> SysCtrl003s { get; set; }

    public virtual DbSet<SysCtrl004> SysCtrl004s { get; set; }

    public virtual DbSet<SysCtrl004State003004> SysCtrl004State003004s { get; set; }

    public virtual DbSet<TeacherCourseDept> TeacherCourseDepts { get; set; }

    public virtual DbSet<TeacherCourseProfile> TeacherCourseProfiles { get; set; }

    public virtual DbSet<TeacherCourseTeacher> TeacherCourseTeachers { get; set; }

    public virtual DbSet<TeacherDepartmentList> TeacherDepartmentLists { get; set; }

    public virtual DbSet<TeacherTeacherProfile> TeacherTeacherProfiles { get; set; }

    public virtual DbSet<TlcTable115Original> TlcTable115Originals { get; set; }

    public virtual DbSet<TlcTable11Original> TlcTable11Originals { get; set; }

    public virtual DbSet<TlcTable122Original> TlcTable122Originals { get; set; }

    public virtual DbSet<TlcTable14Original> TlcTable14Originals { get; set; }

    public virtual DbSet<TlcTable15Original> TlcTable15Originals { get; set; }

    public virtual DbSet<TlcTable16Original> TlcTable16Originals { get; set; }

    public virtual DbSet<TlcTable19Original> TlcTable19Originals { get; set; }

    public virtual DbSet<TlcTable212Original> TlcTable212Originals { get; set; }

    public virtual DbSet<TlcTable213Original> TlcTable213Originals { get; set; }

    public virtual DbSet<TlcTable27Original> TlcTable27Originals { get; set; }

    public virtual DbSet<TlcTable31Original> TlcTable31Originals { get; set; }

    public virtual DbSet<TlcTable35Original> TlcTable35Originals { get; set; }

    public virtual DbSet<TlcTable412Original> TlcTable412Originals { get; set; }

    public virtual DbSet<TlcTable41Original> TlcTable41Originals { get; set; }

    public virtual DbSet<TlcTable423Original> TlcTable423Originals { get; set; }

    public virtual DbSet<TlcTable425Original> TlcTable425Originals { get; set; }

    public virtual DbSet<TlcTable427Original> TlcTable427Originals { get; set; }

    public virtual DbSet<TlcTable428Original> TlcTable428Originals { get; set; }

    public virtual DbSet<TlcTable429Original> TlcTable429Originals { get; set; }

    public virtual DbSet<TlcTable42Original> TlcTable42Originals { get; set; }

    public virtual DbSet<TlcTable472Original> TlcTable472Originals { get; set; }

    public virtual DbSet<TlcTable81Original> TlcTable81Originals { get; set; }

    public virtual DbSet<TlcTable83Original> TlcTable83Originals { get; set; }

    public virtual DbSet<TotalAdminSubmitNform000> TotalAdminSubmitNform000s { get; set; }

    public virtual DbSet<TwoFormSchoolUploadFile> TwoFormSchoolUploadFiles { get; set; }

    public virtual DbSet<TwoNformUpload> TwoNformUploads { get; set; }

    public virtual DbSet<ViewBoardPublish> ViewBoardPublishes { get; set; }

    public virtual DbSet<ViewExamineWriterResultExport> ViewExamineWriterResultExports { get; set; }

    public virtual DbSet<ViewNform004Test> ViewNform004Tests { get; set; }

    public virtual DbSet<ViewOneExamine001List> ViewOneExamine001Lists { get; set; }

    public virtual DbSet<ViewOneExamine002Auth001> ViewOneExamine002Auth001s { get; set; }

    public virtual DbSet<ViewOneExamine002TotalView> ViewOneExamine002TotalViews { get; set; }

    public virtual DbSet<ViewOneExamineB01> ViewOneExamineB01s { get; set; }

    public virtual DbSet<ViewOneExamineB01Medical> ViewOneExamineB01Medicals { get; set; }

    public virtual DbSet<ViewOneExamineB02> ViewOneExamineB02s { get; set; }

    public virtual DbSet<ViewOneExamineB03> ViewOneExamineB03s { get; set; }

    public virtual DbSet<ViewOneExamineB03Medical> ViewOneExamineB03Medicals { get; set; }

    public virtual DbSet<ViewOneExamineB04> ViewOneExamineB04s { get; set; }

    public virtual DbSet<ViewOneExamineB04Medical> ViewOneExamineB04Medicals { get; set; }

    public virtual DbSet<ViewOneExamineB05> ViewOneExamineB05s { get; set; }

    public virtual DbSet<ViewOneExamineB05Medical> ViewOneExamineB05Medicals { get; set; }

    public virtual DbSet<ViewOneExamineC03> ViewOneExamineC03s { get; set; }

    public virtual DbSet<ViewOneExamineC04> ViewOneExamineC04s { get; set; }

    public virtual DbSet<ViewOneExamineC05> ViewOneExamineC05s { get; set; }

    public virtual DbSet<ViewOneExamineC06> ViewOneExamineC06s { get; set; }

    public virtual DbSet<ViewOneExamineC07> ViewOneExamineC07s { get; set; }

    public virtual DbSet<ViewOneExamineC08> ViewOneExamineC08s { get; set; }

    public virtual DbSet<ViewOneExamineC09> ViewOneExamineC09s { get; set; }

    public virtual DbSet<ViewOneExamineC10> ViewOneExamineC10s { get; set; }

    public virtual DbSet<ViewOneExamineC11> ViewOneExamineC11s { get; set; }

    public virtual DbSet<ViewOneExamineC12> ViewOneExamineC12s { get; set; }

    public virtual DbSet<ViewOneExamineC13> ViewOneExamineC13s { get; set; }

    public virtual DbSet<ViewOneExamineC14> ViewOneExamineC14s { get; set; }

    public virtual DbSet<ViewOneExamineC15> ViewOneExamineC15s { get; set; }

    public virtual DbSet<ViewOneExamineD01> ViewOneExamineD01s { get; set; }

    public virtual DbSet<ViewOneExamineD01Medical> ViewOneExamineD01Medicals { get; set; }

    public virtual DbSet<ViewOneExamineD02> ViewOneExamineD02s { get; set; }

    public virtual DbSet<ViewOneExamineD02Medical> ViewOneExamineD02Medicals { get; set; }

    public virtual DbSet<ViewOneExamineD03> ViewOneExamineD03s { get; set; }

    public virtual DbSet<ViewOneExamineD03Medical> ViewOneExamineD03Medicals { get; set; }

    public virtual DbSet<ViewOneExamineE01> ViewOneExamineE01s { get; set; }

    public virtual DbSet<ViewOneExamineE02> ViewOneExamineE02s { get; set; }

    public virtual DbSet<ViewOneExamineE03> ViewOneExamineE03s { get; set; }

    public virtual DbSet<ViewOneExamineF01> ViewOneExamineF01s { get; set; }

    public virtual DbSet<ViewOneExamineG01> ViewOneExamineG01s { get; set; }

    public virtual DbSet<ViewOneExamineH01> ViewOneExamineH01s { get; set; }

    public virtual DbSet<ViewOneExamineI01> ViewOneExamineI01s { get; set; }

    public virtual DbSet<ViewOneExamineJ01> ViewOneExamineJ01s { get; set; }

    public virtual DbSet<ViewOneExamineJ02> ViewOneExamineJ02s { get; set; }

    public virtual DbSet<ViewOneExamineJ03> ViewOneExamineJ03s { get; set; }

    public virtual DbSet<ViewOneExamineK01> ViewOneExamineK01s { get; set; }

    public virtual DbSet<ViewOneExamine填報內容List> ViewOneExamine填報內容Lists { get; set; }

    public virtual DbSet<ViewOneForm001> ViewOneForm001s { get; set; }

    public virtual DbSet<ViewOneForm0011> ViewOneForm0011s { get; set; }

    public virtual DbSet<ViewOneForm0012> ViewOneForm0012s { get; set; }

    public virtual DbSet<ViewOneForm0013> ViewOneForm0013s { get; set; }

    public virtual DbSet<ViewOneForm00131> ViewOneForm0013s1 { get; set; }

    public virtual DbSet<ViewOneForm0014> ViewOneForm0014s { get; set; }

    public virtual DbSet<ViewOneForm00141> ViewOneForm0014s1 { get; set; }

    public virtual DbSet<ViewOneForm002> ViewOneForm002s { get; set; }

    public virtual DbSet<ViewOneForm003> ViewOneForm003s { get; set; }

    public virtual DbSet<ViewOneForm004> ViewOneForm004s { get; set; }

    public virtual DbSet<ViewOneForm005> ViewOneForm005s { get; set; }

    public virtual DbSet<ViewOneForm006> ViewOneForm006s { get; set; }

    public virtual DbSet<ViewOneForm007> ViewOneForm007s { get; set; }

    public virtual DbSet<ViewOneForm008> ViewOneForm008s { get; set; }

    public virtual DbSet<ViewOneForm009> ViewOneForm009s { get; set; }

    public virtual DbSet<ViewOneFormAnnex> ViewOneFormAnnexes { get; set; }

    public virtual DbSet<ViewOneFormUpload> ViewOneFormUploads { get; set; }

    public virtual DbSet<ViewOneNformA01> ViewOneNformA01s { get; set; }

    public virtual DbSet<ViewOneNformB01> ViewOneNformB01s { get; set; }

    public virtual DbSet<ViewOneNformB01Medical> ViewOneNformB01Medicals { get; set; }

    public virtual DbSet<ViewOneNformB02> ViewOneNformB02s { get; set; }

    public virtual DbSet<ViewOneNformB03> ViewOneNformB03s { get; set; }

    public virtual DbSet<ViewOneNformB03Medical> ViewOneNformB03Medicals { get; set; }

    public virtual DbSet<ViewOneNformB04> ViewOneNformB04s { get; set; }

    public virtual DbSet<ViewOneNformB04Medical> ViewOneNformB04Medicals { get; set; }

    public virtual DbSet<ViewOneNformB05> ViewOneNformB05s { get; set; }

    public virtual DbSet<ViewOneNformB05Medical> ViewOneNformB05Medicals { get; set; }

    public virtual DbSet<ViewOneNformC03> ViewOneNformC03s { get; set; }

    public virtual DbSet<ViewOneNformC04> ViewOneNformC04s { get; set; }

    public virtual DbSet<ViewOneNformC05> ViewOneNformC05s { get; set; }

    public virtual DbSet<ViewOneNformC06> ViewOneNformC06s { get; set; }

    public virtual DbSet<ViewOneNformC07> ViewOneNformC07s { get; set; }

    public virtual DbSet<ViewOneNformC08> ViewOneNformC08s { get; set; }

    public virtual DbSet<ViewOneNformC09> ViewOneNformC09s { get; set; }

    public virtual DbSet<ViewOneNformC10> ViewOneNformC10s { get; set; }

    public virtual DbSet<ViewOneNformC11> ViewOneNformC11s { get; set; }

    public virtual DbSet<ViewOneNformC12> ViewOneNformC12s { get; set; }

    public virtual DbSet<ViewOneNformC13> ViewOneNformC13s { get; set; }

    public virtual DbSet<ViewOneNformC14> ViewOneNformC14s { get; set; }

    public virtual DbSet<ViewOneNformC15> ViewOneNformC15s { get; set; }

    public virtual DbSet<ViewOneNformCaseNameListNoteRecord> ViewOneNformCaseNameListNoteRecords { get; set; }

    public virtual DbSet<ViewOneNformD01> ViewOneNformD01s { get; set; }

    public virtual DbSet<ViewOneNformD01Medical> ViewOneNformD01Medicals { get; set; }

    public virtual DbSet<ViewOneNformD02> ViewOneNformD02s { get; set; }

    public virtual DbSet<ViewOneNformD02Medical> ViewOneNformD02Medicals { get; set; }

    public virtual DbSet<ViewOneNformD03> ViewOneNformD03s { get; set; }

    public virtual DbSet<ViewOneNformD03Medical> ViewOneNformD03Medicals { get; set; }

    public virtual DbSet<ViewOneNformE01> ViewOneNformE01s { get; set; }

    public virtual DbSet<ViewOneNformE02> ViewOneNformE02s { get; set; }

    public virtual DbSet<ViewOneNformE03> ViewOneNformE03s { get; set; }

    public virtual DbSet<ViewOneNformExamineFormRelation> ViewOneNformExamineFormRelations { get; set; }

    public virtual DbSet<ViewOneNformF01> ViewOneNformF01s { get; set; }

    public virtual DbSet<ViewOneNformFile> ViewOneNformFiles { get; set; }

    public virtual DbSet<ViewOneNformG01> ViewOneNformG01s { get; set; }

    public virtual DbSet<ViewOneNformH01> ViewOneNformH01s { get; set; }

    public virtual DbSet<ViewOneNformI01> ViewOneNformI01s { get; set; }

    public virtual DbSet<ViewOneNformJ01> ViewOneNformJ01s { get; set; }

    public virtual DbSet<ViewOneNformJ02> ViewOneNformJ02s { get; set; }

    public virtual DbSet<ViewOneNformJ03> ViewOneNformJ03s { get; set; }

    public virtual DbSet<ViewOneNformK01> ViewOneNformK01s { get; set; }

    public virtual DbSet<ViewOneSchoolCtrl004> ViewOneSchoolCtrl004s { get; set; }

    public virtual DbSet<ViewOneSchoolState> ViewOneSchoolStates { get; set; }

    public virtual DbSet<ViewStatistics001Export> ViewStatistics001Exports { get; set; }

    public virtual DbSet<ViewTt1111> ViewTt1111s { get; set; }

    public virtual DbSet<ViewTt1112> ViewTt1112s { get; set; }

    public virtual DbSet<ViewTt1121> ViewTt1121s { get; set; }

    public virtual DbSet<ViewTt1122> ViewTt1122s { get; set; }

    public virtual DbSet<ViewTt1131> ViewTt1131s { get; set; }

    public virtual DbSet<ViewTt1132> ViewTt1132s { get; set; }

    public virtual DbSet<ViewTt1141> ViewTt1141s { get; set; }

    public virtual DbSet<ViewTt1142> ViewTt1142s { get; set; }

    public virtual DbSet<ViewTt1143> ViewTt1143s { get; set; }

    public virtual DbSet<ViewTt31> ViewTt31s { get; set; }

    public virtual DbSet<ViewTt42> ViewTt42s { get; set; }

    public virtual DbSet<ViewTt423> ViewTt423s { get; set; }

    public virtual DbSet<ViewTt423特例> ViewTt423特例s { get; set; }

    public virtual DbSet<ViewTt427> ViewTt427s { get; set; }

    public virtual DbSet<ViewTt427特例> ViewTt427特例s { get; set; }

    public virtual DbSet<ViewTt428> ViewTt428s { get; set; }

    public virtual DbSet<ViewTt42特例> ViewTt42特例s { get; set; }

    public virtual DbSet<ViewTt472全學年校外實習學生數一般生採計> ViewTt472全學年校外實習學生數一般生採計s { get; set; }

    public virtual DbSet<ViewTt472全學年校外實習學生數一般生採計特例> ViewTt472全學年校外實習學生數一般生採計特例s { get; set; }

    public virtual DbSet<ViewTt472全學年校外實習學生數延畢生採計> ViewTt472全學年校外實習學生數延畢生採計s { get; set; }

    public virtual DbSet<ViewTt472學校附屬機構實習一般生採計> ViewTt472學校附屬機構實習一般生採計s { get; set; }

    public virtual DbSet<ViewTt472學校附屬機構實習一般生採計特例> ViewTt472學校附屬機構實習一般生採計特例s { get; set; }

    public virtual DbSet<ViewTt472學校附屬機構實習延畢生採計> ViewTt472學校附屬機構實習延畢生採計s { get; set; }

    public virtual DbSet<ViewTt472部分學分校外實習學生數一般生採計> ViewTt472部分學分校外實習學生數一般生採計s { get; set; }

    public virtual DbSet<ViewTt472部分學分校外實習學生數一般生採計特例> ViewTt472部分學分校外實習學生數一般生採計特例s { get; set; }

    public virtual DbSet<ViewTt472部分學分校外實習學生數延畢生採計> ViewTt472部分學分校外實習學生數延畢生採計s { get; set; }

    public virtual DbSet<ViewTt811> ViewTt811s { get; set; }

    public virtual DbSet<ViewTt812> ViewTt812s { get; set; }

    public virtual DbSet<ViewTt813> ViewTt813s { get; set; }

    public virtual DbSet<ViewTt83> ViewTt83s { get; set; }

    public virtual DbSet<ZSchool20180628> ZSchool20180628s { get; set; }

    public virtual DbSet<ZSchool20180628DepTeacher> ZSchool20180628DepTeachers { get; set; }

    public virtual DbSet<ZSchool20180628Teacher> ZSchool20180628Teachers { get; set; }

    public virtual DbSet<ZSchool20180628校基庫teacher> ZSchool20180628校基庫teachers { get; set; }

    public virtual DbSet<_109nform21> _109nform21s { get; set; }

    public virtual DbSet<學制修業年限> 學制修業年限s { get; set; }

    public virtual DbSet<學制填報限制> 學制填報限制s { get; set; }

    public virtual DbSet<學生數> 學生數s { get; set; }

    public virtual DbSet<工作表1> 工作表1s { get; set; }

    public virtual DbSet<師資狀況> 師資狀況s { get; set; }

    public virtual DbSet<採計職級對照表> 採計職級對照表s { get; set; }

    public virtual DbSet<教師類別與職稱對照表> 教師類別與職稱對照表s { get; set; }

    public virtual DbSet<校基庫原始檔複製> 校基庫原始檔複製s { get; set; }

    public virtual DbSet<校舍面積> 校舍面積s { get; set; }

    public virtual DbSet<特例> 特例s { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer("Name=ConnectionStrings:TQLDBConnection");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<A1032>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A103_2");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(255)
                .HasColumnName("collegeName");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(255);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.ErJiJinXiuBuJqs).HasColumnName("ErJiJinXiuBuJQS");
            entity.Property(e => e.ErJiJinXiuXueYuanJqs).HasColumnName("ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.ErJiRiJianBuJqs).HasColumnName("ErJiRiJianBuJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SiJiJinXiuBuJqs).HasColumnName("SiJiJinXiuBuJQS");
            entity.Property(e => e.SiJiRiJianBuJqsGauJr).HasColumnName("SiJiRiJianBuJQS_GauJr");
            entity.Property(e => e.SiJiRiJianBuJqsGauJung).HasColumnName("SiJiRiJianBuJQS_GauJung");
            entity.Property(e => e.SiJiZaiZhiZhuanBanJqs).HasColumnName("SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A1033>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A103_3");

            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.GauJrShengJqsA).HasColumnName("GauJrShengJQS_A");
            entity.Property(e => e.GauJungBuName).HasMaxLength(255);
            entity.Property(e => e.GauJungShengHuLiLeiJqsB)
                .HasMaxLength(255)
                .HasColumnName("GauJungShengHuLiLeiJQS_B");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiJosB)
                .HasMaxLength(255)
                .HasColumnName("GauJungShengHuaGungTuMuJianJuLeiJOS_B");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.HuLiLeiC).HasColumnName("HuLiLei_C");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsD).HasColumnName("JuanKeWaiJiaMingAJQS_D");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
            entity.Property(e => e.WuGaoZhiDuiYingLeiKeC).HasColumnName("WuGaoZhiDuiYingLeiKe_C");
            entity.Property(e => e.YaoXueYuWenLeiC).HasColumnName("YaoXueYuWenLei_C");
            entity.Property(e => e.YiBanWaiJiaMingAjqsD).HasColumnName("YiBanWaiJiaMingAJQS_D");
        });

        modelBuilder.Entity<A1034>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A103_4");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoJqs).HasColumnName("ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.ErZhuanRiJianBuJqs).HasColumnName("ErZhuanRiJianBuJQS");
            entity.Property(e => e.ErZhuanYeJianBuJqs).HasColumnName("ErZhuanYeJianBuJQS");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanJqs).HasColumnName("ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.JuanKeBuName).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
            entity.Property(e => e.WuZhuanJqs).HasColumnName("WuZhuanJQS");
        });

        modelBuilder.Entity<A1035>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A103_5");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.GauJrGuoJungGuoShiauBuName).HasMaxLength(255);
            entity.Property(e => e.GauJrShengJqs).HasColumnName("GauJrShengJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.GuoJungShengJqs).HasColumnName("GuoJungShengJQS");
            entity.Property(e => e.GuoShiauShengJqs).HasColumnName("GuoShiauShengJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A103B>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A103_B");

            entity.Property(e => e.ABoShiBanJqs).HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs).HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs).HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs).HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A103Save>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A103_Save");

            entity.Property(e => e.ABoShiBanJqs)
                .HasMaxLength(255)
                .HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs)
                .HasMaxLength(255)
                .HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs)
                .HasMaxLength(255)
                .HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs)
                .HasMaxLength(255)
                .HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs)
                .HasMaxLength(255)
                .HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs)
                .HasMaxLength(255)
                .HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A1041>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A104_1");

            entity.Property(e => e.BoShiBanJqs)
                .HasMaxLength(255)
                .HasColumnName("BoShiBanJQS");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(255)
                .HasColumnName("collegeName");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(255)
                .HasColumnName("departmentNum");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(255);
            entity.Property(e => e.ShuoShiBanJqs)
                .HasMaxLength(255)
                .HasColumnName("ShuoShiBanJQS");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanJqs)
                .HasMaxLength(255)
                .HasColumnName("ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(255)
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A1042>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A104_2");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(255)
                .HasColumnName("collegeName");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(255);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.ErJiJinXiuBuJqs).HasColumnName("ErJiJinXiuBuJQS");
            entity.Property(e => e.ErJiJinXiuXueYuanJqs).HasColumnName("ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.ErJiRiJianBuJqs).HasColumnName("ErJiRiJianBuJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SiJiJinXiuBuJqs).HasColumnName("SiJiJinXiuBuJQS");
            entity.Property(e => e.SiJiRiJianBuJqsGauJr).HasColumnName("SiJiRiJianBuJQS_GauJr");
            entity.Property(e => e.SiJiRiJianBuJqsGauJung).HasColumnName("SiJiRiJianBuJQS_GauJung");
            entity.Property(e => e.SiJiZaiZhiZhuanBanJqs).HasColumnName("SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A1043>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A104_3");

            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(255)
                .HasColumnName("departmentNum");
            entity.Property(e => e.GauJrShengJqsA)
                .HasMaxLength(255)
                .HasColumnName("GauJrShengJQS_A");
            entity.Property(e => e.GauJungBuName).HasMaxLength(255);
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiJosB)
                .HasMaxLength(255)
                .HasColumnName("GauJungShengHuaGungTuMuJianJuLeiJOS_B");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.HuLiLeiB)
                .HasMaxLength(255)
                .HasColumnName("HuLiLei_B");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsD)
                .HasMaxLength(255)
                .HasColumnName("JuanKeWaiJiaMingAJQS_D");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(255)
                .HasColumnName("TCLNum");
            entity.Property(e => e.WuGaoZhiDuiYingLeiKeB)
                .HasMaxLength(255)
                .HasColumnName("WuGaoZhiDuiYingLeiKe_B");
            entity.Property(e => e.YaoXueYuWenLeiB)
                .HasMaxLength(255)
                .HasColumnName("YaoXueYuWenLei_B");
            entity.Property(e => e.YiBanWaiJiaMingAjqsC)
                .HasMaxLength(255)
                .HasColumnName("YiBanWaiJiaMingAJQS_C");
        });

        modelBuilder.Entity<A1044>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A104_4");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(255)
                .HasColumnName("departmentNum");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoJqs)
                .HasMaxLength(255)
                .HasColumnName("ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.ErZhuanRiJianBuJqs)
                .HasMaxLength(255)
                .HasColumnName("ErZhuanRiJianBuJQS");
            entity.Property(e => e.ErZhuanYeJianBuJqs)
                .HasMaxLength(255)
                .HasColumnName("ErZhuanYeJianBuJQS");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanJqs)
                .HasMaxLength(255)
                .HasColumnName("ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.JuanKeBuName).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(255)
                .HasColumnName("TCLNum");
            entity.Property(e => e.WuZhuanJqs)
                .HasMaxLength(255)
                .HasColumnName("WuZhuanJQS");
        });

        modelBuilder.Entity<A1045>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A104_5");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.GauJrGuoJungGuoShiauBuName).HasMaxLength(255);
            entity.Property(e => e.GauJrShengJqs).HasColumnName("GauJrShengJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuoJungShengJqs).HasColumnName("GuoJungShengJQS");
            entity.Property(e => e.GuoShiauShengJqs).HasColumnName("GuoShiauShengJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A104B>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A104_B");

            entity.Property(e => e.ABoShiBanJqs).HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs).HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs).HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs).HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A104Save>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A104_Save");

            entity.Property(e => e.ABoShiBanJqs)
                .HasMaxLength(255)
                .HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs)
                .HasMaxLength(255)
                .HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs)
                .HasMaxLength(255)
                .HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs)
                .HasMaxLength(255)
                .HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs)
                .HasMaxLength(255)
                .HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs)
                .HasMaxLength(255)
                .HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs)
                .HasMaxLength(255)
                .HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<A105Pw>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("A105_PW");

            entity.Property(e => e.Abbreviation)
                .HasMaxLength(255)
                .HasColumnName("abbreviation");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum).HasColumnName("schoolNum");
            entity.Property(e => e.State002Id).HasMaxLength(255);
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<Auth001>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Account");

            entity.ToTable("Auth001", tb => tb.HasTrigger("TR_Auth001_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Address).HasMaxLength(128);
            entity.Property(e => e.Cellphone)
                .HasMaxLength(128)
                .HasComment("使用者手機");
            entity.Property(e => e.CreateTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("使用者建立時間")
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.Education).HasMaxLength(128);
            entity.Property(e => e.Email)
                .HasMaxLength(128)
                .HasComment("使用者 E-Mail");
            entity.Property(e => e.Fax)
                .HasMaxLength(128)
                .HasComment("使用者傳真號碼");
            entity.Property(e => e.IsChangePassword).HasColumnName("isChangePassword");
            entity.Property(e => e.JobTitle).HasMaxLength(128);
            entity.Property(e => e.Name)
                .HasMaxLength(128)
                .HasComment("使用者姓名");
            entity.Property(e => e.Office)
                .HasMaxLength(128)
                .HasComment("使用者單位");
            entity.Property(e => e.Password)
                .HasMaxLength(128)
                .HasComment("使用者密碼");
            entity.Property(e => e.Phone)
                .HasMaxLength(128)
                .HasComment("使用者電話");
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasComment("SysCtrl002 roleRange")
                .HasColumnName("roleRange");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("SchoolCtrl001 FK");
            entity.Property(e => e.Specialty).HasMaxLength(128);
            entity.Property(e => e.State006Id).HasComment("使用者狀態(開啟,關閉)");
            entity.Property(e => e.State013Id).HasComment("審查委員負責之送審領域");
            entity.Property(e => e.Username)
                .HasMaxLength(128)
                .HasComment("使用者帳號");
        });

        modelBuilder.Entity<Auth001Back>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Auth001_Back");

            entity.Property(e => e.Address).HasMaxLength(128);
            entity.Property(e => e.Cellphone).HasMaxLength(128);
            entity.Property(e => e.CreateTime)
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.Education).HasMaxLength(128);
            entity.Property(e => e.Email).HasMaxLength(128);
            entity.Property(e => e.Fax).HasMaxLength(128);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.IsChangePassword).HasColumnName("isChangePassword");
            entity.Property(e => e.JobTitle).HasMaxLength(128);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.Office).HasMaxLength(128);
            entity.Property(e => e.Password).HasMaxLength(128);
            entity.Property(e => e.Phone).HasMaxLength(128);
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasColumnName("roleRange");
            entity.Property(e => e.Specialty).HasMaxLength(128);
            entity.Property(e => e.Username).HasMaxLength(128);
        });

        modelBuilder.Entity<Auth001Backup>(entity =>
        {
            entity.ToTable("Auth001_Backup");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(128);
            entity.Property(e => e.Cellphone).HasMaxLength(128);
            entity.Property(e => e.CreateTime)
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.Education).HasMaxLength(128);
            entity.Property(e => e.Email).HasMaxLength(128);
            entity.Property(e => e.Fax).HasMaxLength(128);
            entity.Property(e => e.IsChangePassword).HasColumnName("isChangePassword");
            entity.Property(e => e.JobTitle).HasMaxLength(128);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.Office).HasMaxLength(128);
            entity.Property(e => e.Password).HasMaxLength(128);
            entity.Property(e => e.Phone).HasMaxLength(128);
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasColumnName("roleRange");
            entity.Property(e => e.Specialty).HasMaxLength(128);
            entity.Property(e => e.Username).HasMaxLength(128);
        });

        modelBuilder.Entity<Auth001SysCtrl002SchoolCtrl001State006>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("Auth001_SysCtrl002_SchoolCtrl001_State006");

            entity.Property(e => e.CreateTime)
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.Email).HasMaxLength(128);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.RoleName)
                .HasMaxLength(128)
                .HasColumnName("roleName");
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasColumnName("roleRange");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.StateName).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
        });

        modelBuilder.Entity<Auth002>(entity =>
        {
            entity.ToTable("Auth002");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001Id");
            entity.Property(e => e.ChangePwdeadline)
                .HasDefaultValueSql("(getdate())")
                .HasComment("密碼修改期限")
                .HasColumnType("datetime")
                .HasColumnName("ChangePWDeadline");
            entity.Property(e => e.ChangePwtime)
                .HasColumnType("datetime")
                .HasColumnName("ChangePWTime");
            entity.Property(e => e.Password1)
                .HasMaxLength(128)
                .HasComment("最近一次被修改的密碼");
            entity.Property(e => e.Password2)
                .HasMaxLength(128)
                .HasComment("第二次被修改的密碼");
            entity.Property(e => e.Password3)
                .HasMaxLength(128)
                .HasComment("第三次被修改的密碼");
        });

        modelBuilder.Entity<Auth003>(entity =>
        {
            entity.ToTable("Auth003");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001Id");
            entity.Property(e => e.Cou).HasComment("登入錯誤次數");
            entity.Property(e => e.LockIp)
                .HasMaxLength(128)
                .HasComment("封鎖的登入IP")
                .HasColumnName("LockIP");
            entity.Property(e => e.LockTime)
                .HasComment("封鎖時間")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<B1041>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B104_1");

            entity.Property(e => e.BoShiBanJqs).HasColumnName("BoShiBanJQS");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(255)
                .HasColumnName("collegeName");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(255);
            entity.Property(e => e.ShuoShiBanJqs).HasColumnName("ShuoShiBanJQS");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanJqs).HasColumnName("ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<B1042>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B104_2");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(255)
                .HasColumnName("collegeName");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(255);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.ErJiJinXiuBuJqs).HasColumnName("ErJiJinXiuBuJQS");
            entity.Property(e => e.ErJiJinXiuXueYuanJqs).HasColumnName("ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.ErJiRiJianBuJqs).HasColumnName("ErJiRiJianBuJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SiJiJinXiuBuJqs).HasColumnName("SiJiJinXiuBuJQS");
            entity.Property(e => e.SiJiRiJianBuJqsGauJr).HasColumnName("SiJiRiJianBuJQS_GauJr");
            entity.Property(e => e.SiJiRiJianBuJqsGauJung).HasColumnName("SiJiRiJianBuJQS_GauJung");
            entity.Property(e => e.SiJiZaiZhiZhuanBanJqs).HasColumnName("SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<B1043>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B104_3");

            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.GauJrShengJqsA).HasColumnName("GauJrShengJQS_A");
            entity.Property(e => e.GauJungBuName).HasMaxLength(255);
            entity.Property(e => e.GauJungShengHuLiLeiJqsB)
                .HasMaxLength(255)
                .HasColumnName("GauJungShengHuLiLeiJQS_B");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiJosB).HasColumnName("GauJungShengHuaGungTuMuJianJuLeiJOS_B");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.HuLiLeiC).HasColumnName("HuLiLei_C");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsD).HasColumnName("JuanKeWaiJiaMingAJQS_D");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
            entity.Property(e => e.WuGaoZhiDuiYingLeiKeC).HasColumnName("WuGaoZhiDuiYingLeiKe_C");
            entity.Property(e => e.YaoXueYuWenLeiC).HasColumnName("YaoXueYuWenLei_C");
            entity.Property(e => e.YiBanWaiJiaMingAjqsD).HasColumnName("YiBanWaiJiaMingAJQS_D");
        });

        modelBuilder.Entity<B1044>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B104_4");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentNum).HasColumnName("departmentNum");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoJqs).HasColumnName("ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.ErZhuanRiJianBuJqs).HasColumnName("ErZhuanRiJianBuJQS");
            entity.Property(e => e.ErZhuanYeJianBuJqs).HasColumnName("ErZhuanYeJianBuJQS");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanJqs).HasColumnName("ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuanKongLei).HasMaxLength(255);
            entity.Property(e => e.JuanKeBuName).HasMaxLength(255);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
            entity.Property(e => e.WuZhuanJqs).HasColumnName("WuZhuanJQS");
        });

        modelBuilder.Entity<B1045>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B104_5");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(255)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.GauJrGuoJungGuoShiauBuName).HasMaxLength(255);
            entity.Property(e => e.GauJrShengJqs).HasColumnName("GauJrShengJQS");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("groupName");
            entity.Property(e => e.GuoJungShengJqs).HasColumnName("GuoJungShengJQS");
            entity.Property(e => e.GuoShiauShengJqs).HasColumnName("GuoShiauShengJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(255)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(255)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
        });

        modelBuilder.Entity<Board001>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_File_Total");

            entity.ToTable("Board001");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Content)
                .HasMaxLength(256)
                .HasComment("檔案說明");
            entity.Property(e => e.CreateTime)
                .HasComment("檔案建立時間")
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.FileName)
                .HasMaxLength(128)
                .HasComment("檔案名稱")
                .HasColumnName("fileName");
            entity.Property(e => e.FilePath)
                .HasMaxLength(128)
                .HasComment("檔案路徑")
                .HasColumnName("filePath");
            entity.Property(e => e.Username)
                .HasMaxLength(128)
                .HasComment("檔案建立者 Auth001");
        });

        modelBuilder.Entity<Board002>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_NewMessage");

            entity.ToTable("Board002");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Content)
                .HasComment("公告內容")
                .HasColumnType("text");
            entity.Property(e => e.CreateTime)
                .HasComment("公告建立時間")
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.EndTime)
                .HasComment("公告結束時間")
                .HasColumnType("datetime")
                .HasColumnName("endTime");
            entity.Property(e => e.FileName)
                .HasMaxLength(128)
                .HasComment("附加檔案名稱")
                .HasColumnName("fileName");
            entity.Property(e => e.FilePath)
                .HasMaxLength(256)
                .HasComment("附加檔案路徑")
                .HasColumnName("filePath");
            entity.Property(e => e.StartTime)
                .HasComment("公告開始時間")
                .HasColumnType("datetime")
                .HasColumnName("startTime");
            entity.Property(e => e.State)
                .HasMaxLength(16)
                .HasComment("公告狀態(開啟,關閉)");
            entity.Property(e => e.Title)
                .HasMaxLength(256)
                .HasComment("公告Title");
            entity.Property(e => e.Username)
                .HasMaxLength(128)
                .HasComment("公告建立者 Auth001");
        });

        modelBuilder.Entity<Board003>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_QA");

            entity.ToTable("Board003");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Board001Id).HasComment("FK Board001 問與答檔案名稱");
            entity.Property(e => e.Content)
                .HasComment("問與答內容")
                .HasColumnType("text");
            entity.Property(e => e.CreateTime)
                .HasComment("問與答建立時間")
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.Title)
                .HasMaxLength(128)
                .HasComment("問與答Title");
            entity.Property(e => e.Username)
                .HasMaxLength(128)
                .HasComment("問與答建立者 Auth001");
        });

        modelBuilder.Entity<BoardCategory>(entity =>
        {
            entity.ToTable("BoardCategory");

            entity.Property(e => e.Id).HasComment("PK 類別 編碼");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(50)
                .HasComment("類別名稱")
                .HasColumnName("categoryName");
        });

        modelBuilder.Entity<BoardFile>(entity =>
        {
            entity.ToTable("BoardFile");

            entity.Property(e => e.Id).HasComment("PK 檔案 編碼");
            entity.Property(e => e.EditAuth001Id)
                .HasComment("FK 建置/編輯者 編碼")
                .HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasComment("建置/編輯時間")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid)
                .HasMaxLength(50)
                .HasComment("位置檔案名稱 隨機碼")
                .HasColumnName("fileGuid");
            entity.Property(e => e.FileName)
                .HasMaxLength(300)
                .HasComment("檔案名稱 原始檔案名稱")
                .HasColumnName("fileName");
            entity.Property(e => e.FilePath)
                .HasMaxLength(300)
                .HasComment("檔案儲存位置")
                .HasColumnName("filePath");
            entity.Property(e => e.PublishBoardId).HasComment("FK 公佈欄 編碼");
        });

        modelBuilder.Entity<BoardPublish>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_PublishBoard");

            entity.ToTable("BoardPublish");

            entity.Property(e => e.Id).HasComment("PK 公佈欄 編碼");
            entity.Property(e => e.BoardCategoryId).HasComment("FK 類別 編碼");
            entity.Property(e => e.BoardTime)
                .HasComment("公佈時間")
                .HasColumnName("boardTime");
            entity.Property(e => e.Contents)
                .HasComment("文字內容")
                .HasColumnName("contents");
            entity.Property(e => e.EditAuth001Id)
                .HasComment("FK 建置/編輯者 編碼")
                .HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasComment("建置/編輯時間")
                .HasColumnName("editTime");
            entity.Property(e => e.State).HasMaxLength(16);
            entity.Property(e => e.Title)
                .HasComment("標題/下載檔案名稱")
                .HasColumnName("title");
        });

        modelBuilder.Entity<CheckedTransform>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CheckTransform");

            entity.ToTable("CheckedTransform");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Agreement)
                .HasMaxLength(50)
                .HasColumnName("agreement");
            entity.Property(e => e.Checked)
                .HasMaxLength(50)
                .HasColumnName("checked");
            entity.Property(e => e.Have)
                .HasMaxLength(50)
                .HasColumnName("have");
            entity.Property(e => e.Value).HasColumnName("value");
        });

        modelBuilder.Entity<CheckruleYnCn>(entity =>
        {
            entity.ToTable("Checkrule_yn_cn");

            entity.Property(e => e.EditAuth001d).HasColumnName("editAuth001d");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.RuleYnCn).HasColumnName("rule_yn_cn");
        });

        modelBuilder.Entity<Check任職兩年且全職進修>(entity =>
        {
            entity.ToTable("Check任職兩年且全職進修");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check任職狀態>(entity =>
        {
            entity.ToTable("Check任職狀態");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt1111).HasColumnName("tt1_1_1_1");
            entity.Property(e => e.Tt1112).HasColumnName("tt1_1_1_2");
        });

        modelBuilder.Entity<Check作者順序>(entity =>
        {
            entity.ToTable("Check作者順序");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check使用執照取得情形>(entity =>
        {
            entity.ToTable("Check使用執照取得情形");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check修別>(entity =>
        {
            entity.ToTable("Check修別");

            entity.Property(e => e.EditAuth001d).HasColumnName("editAuth001d");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check借調否>(entity =>
        {
            entity.ToTable("Check借調否");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check借調目的來源>(entity =>
        {
            entity.ToTable("Check借調目的來源");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check兼任教師是否具本全職工作者>(entity =>
        {
            entity.ToTable("Check兼任教師是否具本全職工作者");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check出租借情況>(entity =>
        {
            entity.ToTable("Check出租(借)情況");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
            entity.Property(e => e.出租借情況).HasColumnName("出租(借)情況");
        });

        modelBuilder.Entity<Check升等狀態>(entity =>
        {
            entity.ToTable("Check升等狀態");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check升等等級>(entity =>
        {
            entity.ToTable("Check升等等級");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check升等類型>(entity =>
        {
            entity.ToTable("Check升等類型");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check合約有無經法院公證>(entity =>
        {
            entity.ToTable("Check合約有無經法院公證");

            entity.Property(e => e.EditAuth001d).HasColumnName("editAuth001d");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt83).HasColumnName("tt8_3");
        });

        modelBuilder.Entity<Check學制代碼>(entity =>
        {
            entity.ToTable("Check學制代碼");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check學期>(entity =>
        {
            entity.ToTable("Check學期");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check學校辦理方式>(entity =>
        {
            entity.ToTable("Check學校辦理方式");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check實習場所>(entity =>
        {
            entity.ToTable("Check實習場所");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt472全學年校外實習學生數一般生採計)
                .HasComment("全學年校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_全學年校外實習學生數一般生採計");
            entity.Property(e => e.Tt472全學年校外實習學生數延畢生採計)
                .HasComment("全學年校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_全學年校外實習學生數延畢生採計");
            entity.Property(e => e.Tt472學校附屬機構實習一般生採計).HasColumnName("TT4_7_2_學校附屬機構實習一般生採計");
            entity.Property(e => e.Tt472學校附屬機構實習延畢生採計)
                .HasComment("學校附屬機構實習延畢生採計")
                .HasColumnName("TT4_7_2_學校附屬機構實習延畢生採計");
            entity.Property(e => e.Tt472部分學分校外實習學生數一般生採計)
                .HasComment("部分學分校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_部分學分校外實習學生數一般生採計");
            entity.Property(e => e.Tt472部分學分校外實習學生數延畢生採計)
                .HasComment("部分學分校外實習學生數延畢生採計")
                .HasColumnName("TT4_7_2_部分學分校外實習學生數延畢生採計");
        });

        modelBuilder.Entity<Check實習期間>(entity =>
        {
            entity.ToTable("Check實習期間");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt472部分學分校外實習學生數一般生採計).HasColumnName("TT4_7_2_部分學分校外實習學生數一般生採計");
        });

        modelBuilder.Entity<Check專兼任>(entity =>
        {
            entity.ToTable("Check專兼任");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt1111).HasColumnName("tt1_1_1_1");
            entity.Property(e => e.Tt1112).HasColumnName("tt1_1_1_2");
        });

        modelBuilder.Entity<Check專兼職業別>(entity =>
        {
            entity.ToTable("Check專兼職業別");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check建物安全鑑定通過情形>(entity =>
        {
            entity.ToTable("Check建物安全鑑定通過情形");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check教師分類>(entity =>
        {
            entity.ToTable("Check教師分類");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt1112).HasColumnName("tt1_1_1_2");
        });

        modelBuilder.Entity<Check是否>(entity =>
        {
            entity.ToTable("Check是否");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check是否支領彈性薪資>(entity =>
        {
            entity.ToTable("Check是否支領彈性薪資");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check是否為農林漁牧或工業領域類科系>(entity =>
        {
            entity.ToTable("Check是否為農林漁牧或工業領域類科系");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check是否符合延畢生條件>(entity =>
        {
            entity.ToTable("Check是否符合延畢生條件");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt472全學年校外實習學生數一般生採計)
                .HasComment("全學年校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_全學年校外實習學生數一般生採計");
            entity.Property(e => e.Tt472全學年校外實習學生數延畢生採計)
                .HasComment("全學年校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_全學年校外實習學生數延畢生採計");
            entity.Property(e => e.Tt472學校附屬機構實習一般生採計)
                .HasComment("學校附屬機構實習一般生採計")
                .HasColumnName("TT4_7_2_學校附屬機構實習一般生採計");
            entity.Property(e => e.Tt472學校附屬機構實習延畢生採計)
                .HasComment("學校附屬機構實習延畢生採計")
                .HasColumnName("TT4_7_2_學校附屬機構實習延畢生採計");
            entity.Property(e => e.Tt472部分學分校外實習學生數一般生採計)
                .HasComment("部分學分校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_部分學分校外實習學生數一般生採計");
            entity.Property(e => e.Tt472部分學分校外實習學生數延畢生採計)
                .HasComment("部分學分校外實習學生數延畢生採計")
                .HasColumnName("TT4_7_2_部分學分校外實習學生數延畢生採計");
        });

        modelBuilder.Entity<Check最高學歷學位>(entity =>
        {
            entity.ToTable("Check最高學歷學位");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check有無合約>(entity =>
        {
            entity.ToTable("Check有無合約");

            entity.Property(e => e.EditAuth001d).HasColumnName("editAuth001d");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt83).HasColumnName("tt8_3");
        });

        modelBuilder.Entity<Check期間>(entity =>
        {
            entity.ToTable("Check期間");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt472全學年校外實習學生數一般生採計)
                .HasComment("全學年校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_全學年校外實習學生數一般生採計");
            entity.Property(e => e.Tt472全學年校外實習學生數延畢生採計)
                .HasComment("全學年校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_全學年校外實習學生數延畢生採計");
            entity.Property(e => e.Tt472學校附屬機構實習一般生採計).HasColumnName("TT4_7_2_學校附屬機構實習一般生採計");
            entity.Property(e => e.Tt472學校附屬機構實習延畢生採計)
                .HasComment("學校附屬機構實習延畢生採計")
                .HasColumnName("TT4_7_2_學校附屬機構實習延畢生採計");
            entity.Property(e => e.Tt472部分學分校外實習學生數一般生採計)
                .HasComment("部分學分校外實習學生數一般生採計")
                .HasColumnName("TT4_7_2_部分學分校外實習學生數一般生採計");
            entity.Property(e => e.Tt472部分學分校外實習學生數延畢生採計)
                .HasComment("部分學分校外實習學生數延畢生採計")
                .HasColumnName("TT4_7_2_部分學分校外實習學生數延畢生採計");
        });

        modelBuilder.Entity<Check校內簽約>(entity =>
        {
            entity.ToTable("Check校內簽約");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check校區>(entity =>
        {
            entity.ToTable("Check校區");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check權屬別>(entity =>
        {
            entity.ToTable("Check權屬別");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813)
                .HasDefaultValueSql("((0))")
                .HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check狀態>(entity =>
        {
            entity.ToTable("Check狀態");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check發表形式>(entity =>
        {
            entity.ToTable("Check發表形式");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check租賃宿舍是否符合土地使用分區管制規定>(entity =>
        {
            entity.ToTable("Check租賃宿舍是否符合土地使用分區管制規定");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check等級>(entity =>
        {
            entity.ToTable("Check等級");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check系所類別>(entity =>
        {
            entity.ToTable("Check系所類別");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check系所類別代碼>(entity =>
        {
            entity.ToTable("Check系所類別代碼");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt311).HasColumnName("tt3_1_1");
        });

        modelBuilder.Entity<Check編制內外>(entity =>
        {
            entity.ToTable("Check編制內外");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check編制內是否辦理延長>(entity =>
        {
            entity.ToTable("Check編制內是否辦理延長");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check聘書職級>(entity =>
        {
            entity.ToTable("Check聘書職級");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt1112).HasColumnName("tt1_1_1_2");
        });

        modelBuilder.Entity<Check聘約是否達一年以上>(entity =>
        {
            entity.ToTable("Check聘約是否達一年以上");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check興建狀況>(entity =>
        {
            entity.ToTable("Check興建狀況");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt811).HasColumnName("tt8_1_1");
            entity.Property(e => e.Tt812).HasColumnName("tt8_1_2");
            entity.Property(e => e.Tt813).HasColumnName("tt8_1_3");
        });

        modelBuilder.Entity<Check補助情形>(entity =>
        {
            entity.ToTable("Check補助情形");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check證書職級>(entity =>
        {
            entity.ToTable("Check證書職級");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Tt1112).HasColumnName("tt1_1_1_2");
        });

        modelBuilder.Entity<Check證照類型>(entity =>
        {
            entity.ToTable("Check證照類型");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check身份識別種類>(entity =>
        {
            entity.ToTable("Check身份識別種類");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check身份類別>(entity =>
        {
            entity.ToTable("Check身份類別");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check進修地區>(entity =>
        {
            entity.ToTable("Check進修地區");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check進修時間>(entity =>
        {
            entity.ToTable("Check進修時間");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check進修狀態>(entity =>
        {
            entity.ToTable("Check進修狀態");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check進修項目>(entity =>
        {
            entity.ToTable("Check進修項目");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check開課系所類別>(entity =>
        {
            entity.ToTable("Check開課系所類別");

            entity.Property(e => e.EditAuth001d).HasColumnName("editAuth001d");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Check領域類型>(entity =>
        {
            entity.ToTable("Check領域類型");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<Domain001>(entity =>
        {
            entity.ToTable("Domain001");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Domain)
                .HasMaxLength(50)
                .HasColumnName("domain");
        });

        modelBuilder.Entity<EmailAttLog>(entity =>
        {
            entity.ToTable("EMailAttLog");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AttTimestamp)
                .HasDefaultValueSql("(getdate())")
                .HasComment("附件時間")
                .HasColumnType("datetime");
            entity.Property(e => e.EmailLogId)
                .HasComment("FK EMailLog")
                .HasColumnName("EMailLogId");
            entity.Property(e => e.Fdata)
                .HasComment("附件內容")
                .HasColumnName("FData");
            entity.Property(e => e.Fname)
                .HasComment("附件檔案名稱")
                .HasColumnName("FName");
        });

        modelBuilder.Entity<EmailLog>(entity =>
        {
            entity.ToTable("EMailLog");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 收件人 Id");
            entity.Property(e => e.Body).HasComment("EMail Body 內容");
            entity.Property(e => e.EmailSubject)
                .HasComment("EMail Subject 標題")
                .HasColumnName("EMailSubject");
            entity.Property(e => e.HaveAtt).HasComment("有附件 就填入  1");
            entity.Property(e => e.IsSendMail).HasComment("程式判斷是否已經寄過 (1:已寄出)");
            entity.Property(e => e.MailServerErrorLog).HasComment("郵件伺服器回應的錯誤訊息");
            entity.Property(e => e.MailServerStatus).HasComment("郵件伺服器回應該信寄出是否成功(1:成功)");
            entity.Property(e => e.MailServerTimestamp)
                .HasComment("郵件伺服器回應時間")
                .HasColumnType("datetime");
            entity.Property(e => e.MailTimestamp)
                .HasComment("程式寄出Mail的時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ToBcc)
                .HasMaxLength(128)
                .HasComment("EMail Bcc 隱藏收件者 ( 寄件者 )")
                .HasColumnName("toBcc");
        });

        modelBuilder.Entity<ExamineNoteRecord>(entity =>
        {
            entity.ToTable("ExamineNoteRecord");

            entity.Property(e => e.ApprovedResults).HasMaxLength(50);
            entity.Property(e => e.ExResultNum).HasMaxLength(200);
            entity.Property(e => e.OneNformId).HasColumnName("OneNFormId");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.RemindText).HasMaxLength(600);
            entity.Property(e => e.Remork).HasMaxLength(400);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(50)
                .HasColumnName("schoolName");
        });

        modelBuilder.Entity<ExtensionCategory>(entity =>
        {
            entity.ToTable("ExtensionCategory");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CategoryName).HasMaxLength(50);
        });

        modelBuilder.Entity<Form001Old>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Form1_1");

            entity.ToTable("Form001_Old");

            entity.Property(e => e.Id).HasComment("7878787");
            entity.Property(e => e.BoShiBanJqs).HasColumnName("BoShiBanJQS");
            entity.Property(e => e.ShuoBoShrBanId).HasColumnName("ShuoBoShrBanID");
            entity.Property(e => e.ShuoShiBanJqs).HasColumnName("ShuoShiBanJQS");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanJqs).HasColumnName("ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.State).HasMaxLength(16);
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<Form002Old>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Form2");

            entity.ToTable("Form002_Old");

            entity.Property(e => e.DaShiueBuId).HasColumnName("DaShiueBuID");
            entity.Property(e => e.ErJiJinXiuBuJqs).HasColumnName("ErJiJinXiuBuJQS");
            entity.Property(e => e.ErJiJinXiuXueYuanJqs).HasColumnName("ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.ErJiRiJianBuJqs).HasColumnName("ErJiRiJianBuJQS");
            entity.Property(e => e.SiJiJinXiuBuJqs).HasColumnName("SiJiJinXiuBuJQS");
            entity.Property(e => e.SiJiRiJianBuJqsGauJr).HasColumnName("SiJiRiJianBuJQS_GauJr");
            entity.Property(e => e.SiJiRiJianBuJqsGauJung).HasColumnName("SiJiRiJianBuJQS_GauJung");
            entity.Property(e => e.SiJiZaiZhiZhuanBanJqs).HasColumnName("SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.State).HasMaxLength(16);
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<Form003Old>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Form2_1");

            entity.ToTable("Form003_Old");

            entity.Property(e => e.GauJrShengJqsA).HasColumnName("GauJrShengJQS_A");
            entity.Property(e => e.GauJungBuId).HasColumnName("GauJungBuID");
            entity.Property(e => e.GauJungShengHuLiLeiJqsB).HasColumnName("GauJungShengHuLiLeiJQS_B");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiJosB).HasColumnName("GauJungShengHuaGungTuMuJianJuLeiJOS_B");
            entity.Property(e => e.GauJungShengWuGauJrDueiYiLeiKeJqsB).HasColumnName("GauJungShengWuGauJrDueiYiLeiKeJQS_B");
            entity.Property(e => e.GauJungShengYauShiueYuWenLeiJqsB).HasColumnName("GauJungShengYauShiueYuWenLeiJQS_B");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsC).HasColumnName("JuanKeWaiJiaMingAJQS_C");
            entity.Property(e => e.State).HasMaxLength(16);
            entity.Property(e => e.Year).HasMaxLength(16);
            entity.Property(e => e.YiBanWaiJiaMingAjqsC).HasColumnName("YiBanWaiJiaMingAJQS_C");
        });

        modelBuilder.Entity<Form004Old>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_F_Form3");

            entity.ToTable("Form004_Old");

            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoJqs).HasColumnName("ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.ErZhuanRiJianBuJqs).HasColumnName("ErZhuanRiJianBuJQS");
            entity.Property(e => e.ErZhuanYeJianBuJqs).HasColumnName("ErZhuanYeJianBuJQS");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanJqs).HasColumnName("ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.JuanKeBuId).HasColumnName("JuanKeBuID");
            entity.Property(e => e.State).HasMaxLength(16);
            entity.Property(e => e.WuZhuanJqs).HasColumnName("WuZhuanJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<Form005Old>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_F_Form4");

            entity.ToTable("Form005_Old");

            entity.Property(e => e.GauJrGuoJungGuoShiauBuId).HasColumnName("GauJrGuoJungGuoShiauBuID");
            entity.Property(e => e.GauJrShengJqs).HasColumnName("GauJrShengJQS");
            entity.Property(e => e.GuoJungShengJqs).HasColumnName("GuoJungShengJQS");
            entity.Property(e => e.GuoShiauShengJqs).HasColumnName("GuoShiauShengJQS");
            entity.Property(e => e.State).HasMaxLength(16);
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<Form1>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("form1");

            entity.Property(e => e.BoShiBanState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.NewBoShiBanDeposit).HasColumnName("newBoShiBanDeposit");
            entity.Property(e => e.NewBoShiBanDepositRecover).HasColumnName("newBoShiBanDepositRecover");
            entity.Property(e => e.NewBoShiBanJqs).HasColumnName("newBoShiBanJQS");
            entity.Property(e => e.NewShuoShiBanDeposit).HasColumnName("newShuoShiBanDeposit");
            entity.Property(e => e.NewShuoShiBanDepositRecover).HasColumnName("newShuoShiBanDepositRecover");
            entity.Property(e => e.NewShuoShiBanJqs).HasColumnName("newShuoShiBanJQS");
            entity.Property(e => e.NewShuoShiZaiZhiZhuanBanDeposit).HasColumnName("newShuoShiZaiZhiZhuanBanDeposit");
            entity.Property(e => e.NewShuoShiZaiZhiZhuanBanDepositRecover).HasColumnName("newShuoShiZaiZhiZhuanBanDepositRecover");
            entity.Property(e => e.NewShuoShiZaiZhiZhuanBanJqs).HasColumnName("newShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.OldBoShiBanJqs).HasColumnName("oldBoShiBanJQS");
            entity.Property(e => e.OldShuoShiBanJqs).HasColumnName("oldShuoShiBanJQS");
            entity.Property(e => e.OldShuoShiZaiZhiZhuanBanJqs).HasColumnName("oldShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(128);
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ShuoShrBanState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.SumBoShiBanDeposit).HasColumnName("sumBoShiBanDeposit");
            entity.Property(e => e.SumShuoShiBanDeposit).HasColumnName("sumShuoShiBanDeposit");
            entity.Property(e => e.SumShuoShiZaiZhiZhuanBanDeposit).HasColumnName("sumShuoShiZaiZhiZhuanBanDeposit");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
        });

        modelBuilder.Entity<Form2>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("form2");

            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(128);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.ErJiJinXiuBuState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ErJiJinXiuXueYuanState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ErJiRiJianBuState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.NewErJiJinXiuBuDeposit).HasColumnName("newErJiJinXiuBuDeposit");
            entity.Property(e => e.NewErJiJinXiuBuDepositRecover).HasColumnName("newErJiJinXiuBuDepositRecover");
            entity.Property(e => e.NewErJiJinXiuBuJqs).HasColumnName("newErJiJinXiuBuJQS");
            entity.Property(e => e.NewErJiJinXiuXueYuanDeposit).HasColumnName("newErJiJinXiuXueYuanDeposit");
            entity.Property(e => e.NewErJiJinXiuXueYuanDepositRecover).HasColumnName("newErJiJinXiuXueYuanDepositRecover");
            entity.Property(e => e.NewErJiJinXiuXueYuanJqs).HasColumnName("newErJiJinXiuXueYuanJQS");
            entity.Property(e => e.NewErJiRiJianBuDeposit).HasColumnName("newErJiRiJianBuDeposit");
            entity.Property(e => e.NewErJiRiJianBuDepositRecover).HasColumnName("newErJiRiJianBuDepositRecover");
            entity.Property(e => e.NewErJiRiJianBuJqs).HasColumnName("newErJiRiJianBuJQS");
            entity.Property(e => e.NewSiJiJinXiuBuDeposit).HasColumnName("newSiJiJinXiuBuDeposit");
            entity.Property(e => e.NewSiJiJinXiuBuDepositRecover).HasColumnName("newSiJiJinXiuBuDepositRecover");
            entity.Property(e => e.NewSiJiJinXiuBuJqs).HasColumnName("newSiJiJinXiuBuJQS");
            entity.Property(e => e.NewSiJiZaiZhiZhuanBanDeposit).HasColumnName("newSiJiZaiZhiZhuanBanDeposit");
            entity.Property(e => e.NewSiJiZaiZhiZhuanBanDepositRecover).HasColumnName("newSiJiZaiZhiZhuanBanDepositRecover");
            entity.Property(e => e.NewSiJiZaiZhiZhuanBanJqs).HasColumnName("newSiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.OldErJiJinXiuBuJqs).HasColumnName("oldErJiJinXiuBuJQS");
            entity.Property(e => e.OldErJiJinXiuXueYuanJqs).HasColumnName("oldErJiJinXiuXueYuanJQS");
            entity.Property(e => e.OldErJiRiJianBuJqs).HasColumnName("oldErJiRiJianBuJQS");
            entity.Property(e => e.OldSiJiJinXiuBuJqs).HasColumnName("oldSiJiJinXiuBuJQS");
            entity.Property(e => e.OldSiJiZaiZhiZhuanBanJqs).HasColumnName("oldSiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SiJiJinXiuBuState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.SiJiZaiZhiZhuanBanState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.SumErJiJinXiuBuDeposit).HasColumnName("sumErJiJinXiuBuDeposit");
            entity.Property(e => e.SumErJiJinXiuXueYuanDeposit).HasColumnName("sumErJiJinXiuXueYuanDeposit");
            entity.Property(e => e.SumErJiRiJianBuDeposit).HasColumnName("sumErJiRiJianBuDeposit");
            entity.Property(e => e.SumSiJiJinXiuBuDeposit).HasColumnName("sumSiJiJinXiuBuDeposit");
            entity.Property(e => e.SumSiJiZaiZhiZhuanBanDeposit).HasColumnName("sumSiJiZaiZhiZhuanBanDeposit");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
        });

        modelBuilder.Entity<Form21>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("form2_1");

            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(128);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.GauJrShengAstate)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJrSheng_AState");
            entity.Property(e => e.GauJungShengHuLiLeiB3state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengHuLiLei_B3State");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiB1state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengHuaGungTuMuJianJuLei_B1State");
            entity.Property(e => e.GauJungShengWuGauJrDueiYingLeiB2state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengWuGauJrDueiYingLei_B2State");
            entity.Property(e => e.GauJungShengYaoXueYuWenLeiB4state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengYaoXueYuWenLei_B4State");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsC2state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("JuanKeWaiJiaMingAJQS_C2State");
            entity.Property(e => e.NewGauJrShengAdeposit).HasColumnName("newGauJrSheng_ADeposit");
            entity.Property(e => e.NewGauJrShengAdepositRecover).HasColumnName("newGauJrSheng_ADepositRecover");
            entity.Property(e => e.NewGauJrShengJqsA).HasColumnName("newGauJrShengJQS_A");
            entity.Property(e => e.NewGauJungShengHuLiLeiB3).HasColumnName("newGauJungShengHuLiLei_B3");
            entity.Property(e => e.NewGauJungShengHuLiLeiB3deposit).HasColumnName("newGauJungShengHuLiLei_B3Deposit");
            entity.Property(e => e.NewGauJungShengHuLiLeiB3depositRecover).HasColumnName("newGauJungShengHuLiLei_B3DepositRecover");
            entity.Property(e => e.NewGauJungShengHuaGungTuMuJianJuLeiB1deposit).HasColumnName("newGauJungShengHuaGungTuMuJianJuLei_B1Deposit");
            entity.Property(e => e.NewGauJungShengHuaGungTuMuJianJuLeiB1depositRecover).HasColumnName("newGauJungShengHuaGungTuMuJianJuLei_B1DepositRecover");
            entity.Property(e => e.NewGauJungShengHuaGungTuMuJianJuLeiJosB1).HasColumnName("newGauJungShengHuaGungTuMuJianJuLeiJOS_B1");
            entity.Property(e => e.NewGauJungShengWuGauJrDueiYingLeiB2).HasColumnName("newGauJungShengWuGauJrDueiYingLei_B2");
            entity.Property(e => e.NewGauJungShengWuGauJrDueiYingLeiB2deposit).HasColumnName("newGauJungShengWuGauJrDueiYingLei_B2Deposit");
            entity.Property(e => e.NewGauJungShengWuGauJrDueiYingLeiB2depositRecover).HasColumnName("newGauJungShengWuGauJrDueiYingLei_B2DepositRecover");
            entity.Property(e => e.NewGauJungShengYaoXueYuWenLeiB4).HasColumnName("newGauJungShengYaoXueYuWenLei_B4");
            entity.Property(e => e.NewGauJungShengYaoXueYuWenLeiB4deposit).HasColumnName("newGauJungShengYaoXueYuWenLei_B4Deposit");
            entity.Property(e => e.NewGauJungShengYaoXueYuWenLeiB4depositRecover).HasColumnName("newGauJungShengYaoXueYuWenLei_B4DepositRecover");
            entity.Property(e => e.NewJuanKeWaiJiaMingAC2deposit).HasColumnName("newJuanKeWaiJiaMingA_C2Deposit");
            entity.Property(e => e.NewJuanKeWaiJiaMingAC2depositRecover).HasColumnName("newJuanKeWaiJiaMingA_C2DepositRecover");
            entity.Property(e => e.NewJuanKeWaiJiaMingAjqsC2).HasColumnName("newJuanKeWaiJiaMingAJQS_C2");
            entity.Property(e => e.NewYiBanWaiJiaMingAC1deposit).HasColumnName("newYiBanWaiJiaMingA_C1Deposit");
            entity.Property(e => e.NewYiBanWaiJiaMingAC1depositRecover).HasColumnName("newYiBanWaiJiaMingA_C1DepositRecover");
            entity.Property(e => e.NewYiBanWaiJiaMingAjqsC1).HasColumnName("newYiBanWaiJiaMingAJQS_C1");
            entity.Property(e => e.OldGauJrShengJqsA).HasColumnName("oldGauJrShengJQS_A");
            entity.Property(e => e.OldGauJungShengHuLiLeiB3).HasColumnName("oldGauJungShengHuLiLei_B3");
            entity.Property(e => e.OldGauJungShengHuaGungTuMuJianJuLeiJosB1).HasColumnName("oldGauJungShengHuaGungTuMuJianJuLeiJOS_B1");
            entity.Property(e => e.OldGauJungShengWuGauJrDueiYingLeiB2).HasColumnName("oldGauJungShengWuGauJrDueiYingLei_B2");
            entity.Property(e => e.OldGauJungShengYaoXueYuWenLeiB4).HasColumnName("oldGauJungShengYaoXueYuWenLei_B4");
            entity.Property(e => e.OldJuanKeWaiJiaMingAjqsC2).HasColumnName("oldJuanKeWaiJiaMingAJQS_C2");
            entity.Property(e => e.OldYiBanWaiJiaMingAjqsC1).HasColumnName("oldYiBanWaiJiaMingAJQS_C1");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SumGauJrShengAdeposit).HasColumnName("sumGauJrSheng_ADeposit");
            entity.Property(e => e.SumGauJungShengHuLiLeiB3deposit).HasColumnName("sumGauJungShengHuLiLei_B3Deposit");
            entity.Property(e => e.SumGauJungShengHuaGungTuMuJianJuLeiB1deposit).HasColumnName("sumGauJungShengHuaGungTuMuJianJuLei_B1Deposit");
            entity.Property(e => e.SumGauJungShengWuGauJrDueiYingLeiB2deposit).HasColumnName("sumGauJungShengWuGauJrDueiYingLei_B2Deposit");
            entity.Property(e => e.SumGauJungShengYaoXueYuWenLeiB4deposit).HasColumnName("sumGauJungShengYaoXueYuWenLei_B4Deposit");
            entity.Property(e => e.SumJuanKeWaiJiaMingAC2deposit).HasColumnName("sumJuanKeWaiJiaMingA_C2Deposit");
            entity.Property(e => e.SumYiBanWaiJiaMingAC1deposit).HasColumnName("sumYiBanWaiJiaMingA_C1Deposit");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
            entity.Property(e => e.YiBanWaiJiaMingAjqsC1state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("YiBanWaiJiaMingAJQS_C1State");
        });

        modelBuilder.Entity<Form3>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("form3");

            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ErZhuanRiJianBuState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ErZhuanYeJianBuState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.JuanKeBuName).HasMaxLength(128);
            entity.Property(e => e.NewErZhuanJinXiuZhuanXiaoDeposit).HasColumnName("newErZhuanJinXiuZhuanXiaoDeposit");
            entity.Property(e => e.NewErZhuanJinXiuZhuanXiaoDepositRecover).HasColumnName("newErZhuanJinXiuZhuanXiaoDepositRecover");
            entity.Property(e => e.NewErZhuanJinXiuZhuanXiaoJqs).HasColumnName("newErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.NewErZhuanRiJianBuDeposit).HasColumnName("newErZhuanRiJianBuDeposit");
            entity.Property(e => e.NewErZhuanRiJianBuDepositRecover).HasColumnName("newErZhuanRiJianBuDepositRecover");
            entity.Property(e => e.NewErZhuanRiJianBuJqs).HasColumnName("newErZhuanRiJianBuJQS");
            entity.Property(e => e.NewErZhuanYeJianBuDeposit).HasColumnName("newErZhuanYeJianBuDeposit");
            entity.Property(e => e.NewErZhuanYeJianBuDepositRecover).HasColumnName("newErZhuanYeJianBuDepositRecover");
            entity.Property(e => e.NewErZhuanYeJianBuJqs).HasColumnName("newErZhuanYeJianBuJQS");
            entity.Property(e => e.NewErZhuanZaiZhiZhuanBanDeposit).HasColumnName("newErZhuanZaiZhiZhuanBanDeposit");
            entity.Property(e => e.NewErZhuanZaiZhiZhuanBanDepositRecover).HasColumnName("newErZhuanZaiZhiZhuanBanDepositRecover");
            entity.Property(e => e.NewErZhuanZaiZhiZhuanBanJqs).HasColumnName("newErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.NewWuZhuanDeposit).HasColumnName("newWuZhuanDeposit");
            entity.Property(e => e.NewWuZhuanDepositRecover).HasColumnName("newWuZhuanDepositRecover");
            entity.Property(e => e.NewWuZhuanJqs).HasColumnName("newWuZhuanJQS");
            entity.Property(e => e.OldErZhuanJinXiuZhuanXiaoJqs).HasColumnName("oldErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.OldErZhuanRiJianBuJqs).HasColumnName("oldErZhuanRiJianBuJQS");
            entity.Property(e => e.OldErZhuanYeJianBuJqs).HasColumnName("oldErZhuanYeJianBuJQS");
            entity.Property(e => e.OldErZhuanZaiZhiZhuanBanJqs).HasColumnName("oldErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.OldWuZhuanJqs).HasColumnName("oldWuZhuanJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SumErZhuanJinXiuZhuanXiaoDeposit).HasColumnName("sumErZhuanJinXiuZhuanXiaoDeposit");
            entity.Property(e => e.SumErZhuanRiJianBuDeposit).HasColumnName("sumErZhuanRiJianBuDeposit");
            entity.Property(e => e.SumErZhuanYeJianBuDeposit).HasColumnName("sumErZhuanYeJianBuDeposit");
            entity.Property(e => e.SumErZhuanZaiZhiZhuanBanDeposit).HasColumnName("sumErZhuanZaiZhiZhuanBanDeposit");
            entity.Property(e => e.SumWuZhuanDeposit).HasColumnName("sumWuZhuanDeposit");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
            entity.Property(e => e.WuZhuanState)
                .HasMaxLength(5)
                .IsUnicode(false);
        });

        modelBuilder.Entity<HightSchoolView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("HightSchoolView");

            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.Degree)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.Jqs).HasColumnName("JQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<HightSchoolViewSumJqsFromSameCaseItem>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("HightSchoolView_SumJQS_FromSameCaseItem");

            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.Degree)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.Jqs).HasColumnName("JQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogAuth001>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_Auth001");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.Cellphone).HasMaxLength(128);
            entity.Property(e => e.CreateTime)
                .HasColumnType("datetime")
                .HasColumnName("createTime");
            entity.Property(e => e.Email).HasMaxLength(128);
            entity.Property(e => e.Fax).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.Office).HasMaxLength(128);
            entity.Property(e => e.Password).HasMaxLength(128);
            entity.Property(e => e.Phone).HasMaxLength(128);
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasColumnName("roleRange");
            entity.Property(e => e.Username).HasMaxLength(128);
        });

        modelBuilder.Entity<LogNform000>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm000");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform001>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm001");

            entity.Property(e => e.ABoShiBanJqs).HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs).HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs).HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs).HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform002>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm002");

            entity.Property(e => e.ABoShiBanJqs).HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs).HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs).HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs).HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.DocNum).HasMaxLength(128);
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform003>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm003");

            entity.Property(e => e.ABoShiBanJqs).HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs).HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs).HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs).HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.DocNum).HasMaxLength(128);
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform004>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm004");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.BoShiBanJqs).HasColumnName("BoShiBanJQS");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform005>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm005");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.ShuoShiBanJqs).HasColumnName("ShuoShiBanJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform006>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm006");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanJqs).HasColumnName("ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform007>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm007");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.SiJiJinXiuBuJqs).HasColumnName("SiJiJinXiuBuJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform008>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm008");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.SiJiZaiZhiZhuanBanJqs).HasColumnName("SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform009>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm009");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiRiJianBuJqs).HasColumnName("ErJiRiJianBuJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform010>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm010");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiJinXiuBuJqs).HasColumnName("ErJiJinXiuBuJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform011>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm011");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiJinXiuXueYuanJqs).HasColumnName("ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform012>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm012");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrShengJqsA).HasColumnName("GauJrShengJQS_A");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm013");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiJosB1).HasColumnName("GauJungShengHuaGungTuMuJianJuLeiJOS_B1");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform014>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm014");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengWuGauJrDueiYingLeiB2).HasColumnName("GauJungShengWuGauJrDueiYingLei_B2");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform015>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm015");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengHuLiLeiB3).HasColumnName("GauJungShengHuLiLei_B3");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform016>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm016");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengYaoXueYuWenLeiB4).HasColumnName("GauJungShengYaoXueYuWenLei_B4");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform017>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm017");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
            entity.Property(e => e.YiBanWaiJiaMingAjqsC1).HasColumnName("YiBanWaiJiaMingAJQS_C1");
        });

        modelBuilder.Entity<LogNform018>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm018");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsC2).HasColumnName("JuanKeWaiJiaMingAJQS_C2");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform019>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm019");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.WuZhuanJqs).HasColumnName("WuZhuanJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform020>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm020");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanRiJianBuJqs).HasColumnName("ErZhuanRiJianBuJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform021>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm021");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanYeJianBuJqs).HasColumnName("ErZhuanYeJianBuJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform022>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm022");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanJqs).HasColumnName("ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform023>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm023");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoJqs).HasColumnName("ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform024>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm024");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrShengJqs).HasColumnName("GauJrShengJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform025>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm025");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GuoJungShengJqs).HasColumnName("GuoJungShengJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform026>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm026");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GuoShiauShengJqs).HasColumnName("GuoShiauShengJQS");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform027>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm027");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.ShuangGuiJqs).HasColumnName("ShuangGuiJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform028>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm028");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.ShuangGuiJqs).HasColumnName("ShuangGuiJQS");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<LogNform029>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm029");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DocNum).HasMaxLength(128);
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.ProjectNum).HasMaxLength(128);
            entity.Property(e => e.XiShouJqs).HasColumnName("XiShouJQS");
        });

        modelBuilder.Entity<LogNform030>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_NForm030");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DocNum).HasMaxLength(128);
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.ProjectNum).HasMaxLength(128);
            entity.Property(e => e.XiShouJqs).HasColumnName("XiShouJQS");
        });

        modelBuilder.Entity<LogOneForm000>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm000");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.FormFileNum).HasMaxLength(256);
            entity.Property(e => e.FormName).HasMaxLength(256);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogOneForm001>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm001");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm0011>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm001_1");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneForm001Id).HasMaxLength(50);
            entity.Property(e => e.State018Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm0012>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm001_2");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C4).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C6).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneForm001Id).HasMaxLength(50);
        });

        modelBuilder.Entity<LogOneForm0013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm001_3");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneForm001Id).HasMaxLength(50);
        });

        modelBuilder.Entity<LogOneForm0013Support>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm001_3_support");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneForm0013id).HasColumnName("OneForm001_3Id");
            entity.Property(e => e.State017Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm0014>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm001_4");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneForm001Id).HasMaxLength(50);
        });

        modelBuilder.Entity<LogOneForm0014Support>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm001_4_support");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneForm0014id).HasColumnName("OneForm001_4Id");
            entity.Property(e => e.State017Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm002>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm002");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C4).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C6).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm003>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm003");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.J1).HasMaxLength(128);
            entity.Property(e => e.J2).HasMaxLength(128);
            entity.Property(e => e.J3).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.State011Id1).HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2).HasColumnName("State011Id_2");
            entity.Property(e => e.State012Id1).HasColumnName("State012Id_1");
            entity.Property(e => e.State012Id4).HasColumnName("State012Id_4");
            entity.Property(e => e.State012Id5).HasColumnName("State012Id_5");
            entity.Property(e => e.State012Id6).HasColumnName("State012Id_6");
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm004>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm004");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C32).HasColumnType("datetime");
            entity.Property(e => e.C9).HasColumnType("datetime");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.ProjectName).HasMaxLength(512);
            entity.Property(e => e.State012Id1)
                .HasMaxLength(128)
                .HasColumnName("State012Id_1");
            entity.Property(e => e.State012Id2)
                .HasMaxLength(128)
                .HasColumnName("State012Id_2");
            entity.Property(e => e.State012Id3)
                .HasMaxLength(128)
                .HasColumnName("State012Id_3");
            entity.Property(e => e.State018Id1).HasColumnName("State018Id_1");
            entity.Property(e => e.State018Id2).HasColumnName("State018Id_2");
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm005>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm005");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm006>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm006");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C4).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C6).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm007>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm007");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C10).HasMaxLength(128);
            entity.Property(e => e.C11).HasMaxLength(128);
            entity.Property(e => e.C13).HasMaxLength(128);
            entity.Property(e => e.C14).HasMaxLength(128);
            entity.Property(e => e.C15).HasMaxLength(128);
            entity.Property(e => e.C17).HasMaxLength(128);
            entity.Property(e => e.C18).HasMaxLength(128);
            entity.Property(e => e.C19).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C21).HasMaxLength(128);
            entity.Property(e => e.C22).HasMaxLength(128);
            entity.Property(e => e.C23).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C6).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.C9).HasMaxLength(128);
            entity.Property(e => e.DepartmentName1)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_1");
            entity.Property(e => e.DepartmentName2)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_2");
            entity.Property(e => e.DepartmentName3)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_3");
            entity.Property(e => e.DepartmentName4)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_4");
            entity.Property(e => e.DepartmentName5)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_5");
            entity.Property(e => e.DepartmentName6)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_6");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.State011Id1).HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2).HasColumnName("State011Id_2");
            entity.Property(e => e.State011Id3).HasColumnName("State011Id_3");
            entity.Property(e => e.State011Id4).HasColumnName("State011Id_4");
            entity.Property(e => e.State011Id5).HasColumnName("State011Id_5");
            entity.Property(e => e.State011Id6).HasColumnName("State011Id_6");
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm008>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm008");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C10).HasMaxLength(128);
            entity.Property(e => e.C11).HasMaxLength(128);
            entity.Property(e => e.C13).HasMaxLength(128);
            entity.Property(e => e.C14).HasMaxLength(128);
            entity.Property(e => e.C16).HasMaxLength(128);
            entity.Property(e => e.C17).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C4).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.C8).HasMaxLength(128);
            entity.Property(e => e.DepartmentName1)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_1");
            entity.Property(e => e.DepartmentName2)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_2");
            entity.Property(e => e.DepartmentName3)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_3");
            entity.Property(e => e.DepartmentName4)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_4");
            entity.Property(e => e.DepartmentName5)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_5");
            entity.Property(e => e.DepartmentName6)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_6");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.State011Id1).HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2).HasColumnName("State011Id_2");
            entity.Property(e => e.State011Id3).HasColumnName("State011Id_3");
            entity.Property(e => e.State011Id4).HasColumnName("State011Id_4");
            entity.Property(e => e.State011Id5).HasColumnName("State011Id_5");
            entity.Property(e => e.State011Id6).HasColumnName("State011Id_6");
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneForm009>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneForm009");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.C3)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogOneFormAnnex>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneFormAnnex");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(32);
        });

        modelBuilder.Entity<LogOneFormState>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneFormState");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogOneFormUpload>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneFormUpload");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Year).HasMaxLength(32);
        });

        modelBuilder.Entity<LogOneSchoolState>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_OneSchoolState");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Ps1).HasColumnName("PS1");
            entity.Property(e => e.Ps2).HasColumnName("PS2");
            entity.Property(e => e.Ps3).HasColumnName("PS3");
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<LogSchoolCtrl001>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl001");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolArea)
                .HasMaxLength(50)
                .HasColumnName("schoolArea");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<LogSchoolCtrl002>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl002");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Notes).HasMaxLength(50);
        });

        modelBuilder.Entity<LogSchoolCtrl003>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl003");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogSchoolCtrl004>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl004");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(128);
            entity.Property(e => e.State005Id).HasDefaultValueSql("((0))");
            entity.Property(e => e.State009Id).HasDefaultValueSql("((1))");
            entity.Property(e => e.TotalDepartmentCode).HasMaxLength(50);
        });

        modelBuilder.Entity<LogSchoolCtrl005>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl005");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(128);
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.TotalDepartmentCode).HasMaxLength(50);
        });

        modelBuilder.Entity<LogSchoolCtrl007>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl007");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.JuanKeBuName).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.TotalDepartmentCode).HasMaxLength(50);
        });

        modelBuilder.Entity<LogSchoolCtrl008>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl008");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrGuoJungGuoShiauBuName).HasMaxLength(128);
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Notes).HasMaxLength(50);
        });

        modelBuilder.Entity<LogSchoolCtrl009>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl009");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.BoShiBanCw).HasColumnName("BoShiBanCW");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.NewSchoolCtrl004Id).HasColumnName("newSchoolCtrl004Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldSchoolCtrl004Id).HasColumnName("oldSchoolCtrl004Id");
            entity.Property(e => e.OldShuoBoShrBanName)
                .HasMaxLength(128)
                .HasColumnName("oldShuoBoShrBanName");
            entity.Property(e => e.ShuoShiBanCw).HasColumnName("ShuoShiBanCW");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanCw).HasColumnName("ShuoShiZaiZhiZhuanBanCW");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasColumnName("year");
        });

        modelBuilder.Entity<LogSchoolCtrl010>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl010");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiJinXiuBuCw).HasColumnName("ErJiJinXiuBuCW");
            entity.Property(e => e.ErJiJinXiuXueYuanCw).HasColumnName("ErJiJinXiuXueYuanCW");
            entity.Property(e => e.ErJiRiJianBuCw).HasColumnName("ErJiRiJianBuCW");
            entity.Property(e => e.GauJrShengAcw).HasColumnName("GauJrSheng_ACW");
            entity.Property(e => e.GauJungShengHuLiLeiB3cw).HasColumnName("GauJungShengHuLiLei_B3CW");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiB1cw).HasColumnName("GauJungShengHuaGungTuMuJianJuLei_B1CW");
            entity.Property(e => e.GauJungShengWuGauJrDueiYingLeiB2cw).HasColumnName("GauJungShengWuGauJrDueiYingLei_B2CW");
            entity.Property(e => e.GauJungShengYaoXueYuWenLeiB4cw).HasColumnName("GauJungShengYaoXueYuWenLei_B4CW");
            entity.Property(e => e.JuanKeWaiJiaMingAC2cw).HasColumnName("JuanKeWaiJiaMingA_C2CW");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.NewSchoolCtrl005Id).HasColumnName("newSchoolCtrl005Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldDaShiueBuName)
                .HasMaxLength(128)
                .HasColumnName("oldDaShiueBuName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldSchoolCtrl005Id).HasColumnName("oldSchoolCtrl005Id");
            entity.Property(e => e.SiJiJinXiuBuCw).HasColumnName("SiJiJinXiuBuCW");
            entity.Property(e => e.SiJiZaiZhiZhuanBanCw).HasColumnName("SiJiZaiZhiZhuanBanCW");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasColumnName("year");
            entity.Property(e => e.YiBanWaiJiaMingAC1cw).HasColumnName("YiBanWaiJiaMingA_C1CW");
        });

        modelBuilder.Entity<LogSchoolCtrl012>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl012");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoCw).HasColumnName("ErZhuanJinXiuZhuanXiaoCW");
            entity.Property(e => e.ErZhuanRiJianBuCw).HasColumnName("ErZhuanRiJianBuCW");
            entity.Property(e => e.ErZhuanYeJianBuCw).HasColumnName("ErZhuanYeJianBuCW");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanCw).HasColumnName("ErZhuanZaiZhiZhuanBanCW");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.NewSchoolCtrl007Id).HasColumnName("newSchoolCtrl007Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldJuanKeBuName)
                .HasMaxLength(128)
                .HasColumnName("oldJuanKeBuName");
            entity.Property(e => e.OldSchoolCtrl007Id).HasColumnName("oldSchoolCtrl007Id");
            entity.Property(e => e.WuZhuanCw).HasColumnName("WuZhuanCW");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasColumnName("year");
        });

        modelBuilder.Entity<LogSchoolCtrl013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SchoolCtrl013");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrShengCw).HasColumnName("GauJrShengCW");
            entity.Property(e => e.GuoJungShengCw).HasColumnName("GuoJungShengCW");
            entity.Property(e => e.GuoShiauShengCw).HasColumnName("GuoShiauShengCW");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.NewSchoolCtrl008Id).HasColumnName("newSchoolCtrl008Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldGauJrGuoJungGuoShiauBuName)
                .HasMaxLength(128)
                .HasColumnName("oldGauJrGuoJungGuoShiauBuName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldSchoolCtrl008Id).HasColumnName("oldSchoolCtrl008Id");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasColumnName("year");
        });

        modelBuilder.Entity<LogState001>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State001");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.Id)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.StateName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.StatePhase)
                .HasMaxLength(128)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LogState002>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State002");

            entity.Property(e => e.AdjustName)
                .HasMaxLength(128)
                .HasColumnName("adjustName");
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogState003>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State003");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogState004>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State004");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.Category).HasMaxLength(16);
            entity.Property(e => e.CategoryName).HasMaxLength(256);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Ps).HasColumnName("PS");
        });

        modelBuilder.Entity<LogState005>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State005");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.GuanKongLeiName).HasMaxLength(128);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogState006>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State006");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.StateName).HasMaxLength(128);
        });

        modelBuilder.Entity<LogState007>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State007");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.ItemValue).HasMaxLength(3);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.ViewName).HasMaxLength(30);
        });

        modelBuilder.Entity<LogState008>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State008");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogState009>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_State009");

            entity.Property(e => e.Area).HasMaxLength(30);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.Field).HasMaxLength(30);
            entity.Property(e => e.LogTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogSysCtrl001>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SysCtrl001");

            entity.Property(e => e.Action).HasMaxLength(128);
            entity.Property(e => e.Area).HasMaxLength(128);
            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.Controller).HasMaxLength(128);
            entity.Property(e => e.EndTime)
                .HasColumnType("datetime")
                .HasColumnName("endTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.MenuName)
                .HasMaxLength(128)
                .HasColumnName("menuName");
            entity.Property(e => e.OrderSerial)
                .HasMaxLength(128)
                .HasColumnName("orderSerial");
            entity.Property(e => e.ParentId).HasColumnName("parentId");
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasColumnName("roleRange");
            entity.Property(e => e.RouteValues)
                .HasMaxLength(128)
                .HasColumnName("routeValues");
            entity.Property(e => e.StartTime)
                .HasColumnType("datetime")
                .HasColumnName("startTime");
            entity.Property(e => e.State).HasMaxLength(128);
            entity.Property(e => e.Url).HasMaxLength(128);
        });

        modelBuilder.Entity<LogSysCtrl002>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SysCtrl002");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.HaveMenu)
                .HasMaxLength(128)
                .HasColumnName("haveMenu");
            entity.Property(e => e.HaveRange)
                .HasMaxLength(128)
                .HasColumnName("haveRange");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.RoleName)
                .HasMaxLength(128)
                .HasColumnName("roleName");
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasColumnName("roleRange");
        });

        modelBuilder.Entity<LogSysCtrl003>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SysCtrl003");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.LasteditTime)
                .HasColumnType("datetime")
                .HasColumnName("lasteditTime");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.VarName)
                .HasMaxLength(32)
                .HasColumnName("varName");
            entity.Property(e => e.VarValue)
                .HasMaxLength(16)
                .HasColumnName("varValue");
        });

        modelBuilder.Entity<LogSysCtrl004>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Log_SysCtrl004");

            entity.Property(e => e.Atype)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("AType");
            entity.Property(e => e.LogTime).HasColumnType("datetime");
            entity.Property(e => e.Ps)
                .HasMaxLength(256)
                .HasColumnName("PS");
        });

        modelBuilder.Entity<Mform000>(entity =>
        {
            entity.ToTable("MForm000");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 Id 匯入者");
            entity.Property(e => e.EditTime)
                .HasComment("匯入時間")
                .HasColumnType("datetime");
            entity.Property(e => e.Mform001Id)
                .HasComment("FK MForm001 Id 匯入報表")
                .HasColumnName("MForm001Id");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform000003Mschool001School001>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm000_003_MSchool001_School001");

            entity.Property(e => e.Action).HasMaxLength(32);
            entity.Property(e => e.Area).HasMaxLength(32);
            entity.Property(e => e.Controller).HasMaxLength(32);
            entity.Property(e => e.MformName)
                .HasMaxLength(128)
                .HasColumnName("MFormName");
            entity.Property(e => e.MformNum)
                .HasMaxLength(32)
                .HasColumnName("MFormNum");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform000201707061>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm000_20170706_1");

            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Mform001Id).HasColumnName("MForm001Id");
        });

        modelBuilder.Entity<Mform00020180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm000_20180607");

            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Mform001Id).HasColumnName("MForm001Id");
        });

        modelBuilder.Entity<Mform00020180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm000_20180706");

            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Mform001Id).HasColumnName("MForm001Id");
        });

        modelBuilder.Entity<Mform000Mform001>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm000_MForm001");

            entity.Property(e => e.Action).HasMaxLength(32);
            entity.Property(e => e.Area).HasMaxLength(32);
            entity.Property(e => e.Controller).HasMaxLength(32);
            entity.Property(e => e.Mform001Id).HasColumnName("MForm001Id");
            entity.Property(e => e.MformName)
                .HasMaxLength(128)
                .HasColumnName("MFormName");
            entity.Property(e => e.MformNum)
                .HasMaxLength(32)
                .HasColumnName("MFormNum");
        });

        modelBuilder.Entity<Mform000Mform001Mform002Mform003>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm000_MForm001_MForm002_MForm003");

            entity.Property(e => e.Action).HasMaxLength(32);
            entity.Property(e => e.Area).HasMaxLength(32);
            entity.Property(e => e.Controller).HasMaxLength(32);
            entity.Property(e => e.MformName)
                .HasMaxLength(128)
                .HasColumnName("MFormName");
            entity.Property(e => e.MformNum)
                .HasMaxLength(32)
                .HasColumnName("MFormNum");
        });

        modelBuilder.Entity<Mform001>(entity =>
        {
            entity.ToTable("MForm001");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Action)
                .HasMaxLength(32)
                .HasComment("URL-Action");
            entity.Property(e => e.Area)
                .HasMaxLength(32)
                .HasComment("URL-Area");
            entity.Property(e => e.Controller)
                .HasMaxLength(32)
                .HasComment("URL-Controller");
            entity.Property(e => e.MformName)
                .HasMaxLength(128)
                .HasComment("匯入報表名稱")
                .HasColumnName("MFormName");
            entity.Property(e => e.MformNum)
                .HasMaxLength(32)
                .HasComment("報表代碼")
                .HasColumnName("MFormNum");
        });

        modelBuilder.Entity<Mform002>(entity =>
        {
            entity.ToTable("MForm002");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Action)
                .HasMaxLength(32)
                .HasComment("URL-Action");
            entity.Property(e => e.Area)
                .HasMaxLength(32)
                .HasComment("URL-Area");
            entity.Property(e => e.Controller)
                .HasMaxLength(32)
                .HasComment("URL-Controller");
            entity.Property(e => e.MformName)
                .HasMaxLength(128)
                .HasComment("輸出報表名稱")
                .HasColumnName("MFormName");
            entity.Property(e => e.MformNum)
                .HasMaxLength(32)
                .HasComment("報表代碼")
                .HasColumnName("MFormNum");
            entity.Property(e => e.Mstate001Id)
                .HasComment("FK MState001 Id")
                .HasColumnName("MState001Id");
            entity.Property(e => e.RoleRange).HasMaxLength(64);
        });

        modelBuilder.Entity<Mform003>(entity =>
        {
            entity.ToTable("MForm003");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Mform001Id)
                .HasComment("FK MForm001 Id 匯入報表")
                .HasColumnName("MForm001Id");
            entity.Property(e => e.Mform002Id)
                .HasComment("FK MForm002 Id 輸出報表")
                .HasColumnName("MForm002Id");
        });

        modelBuilder.Entity<Mform101a>(entity =>
        {
            entity.ToTable("MForm_1_01A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ErJiJinXiuB1).HasComment("大學部-進修部二技-B1文法商管教");
            entity.Property(e => e.ErJiJinXiuB2).HasComment("大學部-進修部二技-B2理醫");
            entity.Property(e => e.ErJiJinXiuB3).HasComment("大學部-進修部二技-B3工藝農");
            entity.Property(e => e.ErJiRiJianB1).HasComment("大學部-日間二技-B1文法商管教");
            entity.Property(e => e.ErJiRiJianB2).HasComment("大學部-日間二技-B2理醫");
            entity.Property(e => e.ErJiRiJianB3).HasComment("大學部-日間二技-B3工藝農");
            entity.Property(e => e.ErZhuanRiJianC1).HasComment("專科部-日間二專-C1商護語");
            entity.Property(e => e.ErZhuanRiJianC2).HasComment("專科部-日間二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanRiJianC3).HasComment("專科部-日間二專-C3工農海");
            entity.Property(e => e.ErZhuanYeJianC1).HasComment("專科部-夜間部二專-C1商護語");
            entity.Property(e => e.ErZhuanYeJianC2).HasComment("專科部-夜間部二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanYeJianC3).HasComment("專科部-夜間部二專-C3工農海");
            entity.Property(e => e.JiJinXiuYuanB1).HasComment("大學部-進修學院-B1文法商管教");
            entity.Property(e => e.JiJinXiuYuanB2).HasComment("大學部-進修學院-B2理醫");
            entity.Property(e => e.JiJinXiuYuanB3).HasComment("大學部-進修學院-B3工藝農");
            entity.Property(e => e.JinXiuZhuanXiaoC1).HasComment("專科部-進修專校-C1商護語");
            entity.Property(e => e.JinXiuZhuanXiaoC2).HasComment("專科部-進修專校-C2醫藥家藝");
            entity.Property(e => e.JinXiuZhuanXiaoC3).HasComment("專科部-進修專校-C3工農海");
            entity.Property(e => e.MasterA1).HasComment("碩、博士班-日間碩士班-A1文法商管教");
            entity.Property(e => e.MasterA2).HasComment("碩、博士班-日間碩士班-A2理醫");
            entity.Property(e => e.MasterA3).HasComment("碩、博士班-日間碩士班-A3工藝農");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.OjtmasterA1)
                .HasComment("碩、博士班-碩士在職專班-A1文法商管教")
                .HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2)
                .HasComment("碩、博士班-碩士在職專班-A2理醫")
                .HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3)
                .HasComment("碩、博士班-碩士在職專班-A3工藝農")
                .HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1)
                .HasComment("碩、博士班-博士班-A1文法商管教")
                .HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2)
                .HasComment("碩、博士班-博士班-A2理醫")
                .HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3)
                .HasComment("碩、博士班-博士班-A3工藝農")
                .HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.SiJiJinXiuB1).HasComment("大學部-進修部四技-B1文法商管教");
            entity.Property(e => e.SiJiJinXiuB2).HasComment("大學部-進修部四技-B2理醫");
            entity.Property(e => e.SiJiJinXiuB3).HasComment("大學部-進修部四技-B3工藝農");
            entity.Property(e => e.SiJiRiJianB1).HasComment("大學部-日間四技-B1文法商管教");
            entity.Property(e => e.SiJiRiJianB2).HasComment("大學部-日間四技-B2理醫");
            entity.Property(e => e.SiJiRiJianB3).HasComment("大學部-日間四技-B3工藝農");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB1).HasComment("大學部-四技在職專班-B1文法商管教");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB2).HasComment("大學部-四技在職專班-B2理醫");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB3).HasComment("大學部-四技在職專班-B3工藝農");
            entity.Property(e => e.WuZhuanRiJianC1).HasComment("專科部-日間五專-C1商護語");
            entity.Property(e => e.WuZhuanRiJianC2).HasComment("專科部-日間五專-C2醫藥家藝");
            entity.Property(e => e.WuZhuanRiJianC3).HasComment("專科部-日間五專-C3工農海");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZaiZhiZhuanC1).HasComment("專科部-二專在職專班-C1商護語");
            entity.Property(e => e.ZaiZhiZhuanC2).HasComment("專科部-二專在職專班-C2醫藥家藝");
            entity.Property(e => e.ZaiZhiZhuanC3).HasComment("專科部-二專在職專班-C3工農海");
        });

        modelBuilder.Entity<Mform101a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_01A_20180607");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform101a20180703>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_01A_20180703");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform101a20180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_01A_20180706");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform101b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_01B");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform101c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_01C");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform102a>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MForm_1_2A");

            entity.ToTable("MForm_1_02A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ErJiJinXiuB1).HasComment("大學部-進修部二技-B1文法商管教");
            entity.Property(e => e.ErJiJinXiuB2).HasComment("大學部-進修部二技-B2理醫");
            entity.Property(e => e.ErJiJinXiuB3).HasComment("大學部-進修部二技-B3工藝農");
            entity.Property(e => e.ErJiRiJianB1).HasComment("大學部-日間二技-B1文法商管教");
            entity.Property(e => e.ErJiRiJianB2).HasComment("大學部-日間二技-B2理醫");
            entity.Property(e => e.ErJiRiJianB3).HasComment("大學部-日間二技-B3工藝農");
            entity.Property(e => e.ErZhuanRiJianC1).HasComment("專科部-日間二專-C1商護語");
            entity.Property(e => e.ErZhuanRiJianC2).HasComment("專科部-日間二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanRiJianC3).HasComment("專科部-日間二專-C3工農海");
            entity.Property(e => e.ErZhuanYeJianC1).HasComment("專科部-夜間部二專-C1商護語");
            entity.Property(e => e.ErZhuanYeJianC2).HasComment("專科部-夜間部二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanYeJianC3).HasComment("專科部-夜間部二專-C3工農海");
            entity.Property(e => e.JiJinXiuYuanB1).HasComment("大學部-進修學院-B1文法商管教");
            entity.Property(e => e.JiJinXiuYuanB2).HasComment("大學部-進修學院-B2理醫");
            entity.Property(e => e.JiJinXiuYuanB3).HasComment("大學部-進修學院-B3工藝農");
            entity.Property(e => e.JinXiuZhuanXiaoC1).HasComment("專科部-進修專校-C1商護語");
            entity.Property(e => e.JinXiuZhuanXiaoC2).HasComment("專科部-進修專校-C2醫藥家藝");
            entity.Property(e => e.JinXiuZhuanXiaoC3).HasComment("專科部-進修專校-C3工農海");
            entity.Property(e => e.MasterA1).HasComment("碩、博士班-日間碩士班-A1文法商管教");
            entity.Property(e => e.MasterA2).HasComment("碩、博士班-日間碩士班-A2理醫");
            entity.Property(e => e.MasterA3).HasComment("碩、博士班-日間碩士班-A3工藝農");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.OjtmasterA1)
                .HasComment("碩、博士班-碩士在職專班-A1文法商管教")
                .HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2)
                .HasComment("碩、博士班-碩士在職專班-A2理醫")
                .HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3)
                .HasComment("碩、博士班-碩士在職專班-A3工藝農")
                .HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1)
                .HasComment("碩、博士班-博士班-A1文法商管教")
                .HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2)
                .HasComment("碩、博士班-博士班-A2理醫")
                .HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3)
                .HasComment("碩、博士班-博士班-A3工藝農")
                .HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.SiJiJinXiuB1).HasComment("大學部-進修部四技-B1文法商管教");
            entity.Property(e => e.SiJiJinXiuB2).HasComment("大學部-進修部四技-B2理醫");
            entity.Property(e => e.SiJiJinXiuB3).HasComment("大學部-進修部四技-B3工藝農");
            entity.Property(e => e.SiJiRiJianB1).HasComment("大學部-日間四技-B1文法商管教");
            entity.Property(e => e.SiJiRiJianB2).HasComment("大學部-日間四技-B2理醫");
            entity.Property(e => e.SiJiRiJianB3).HasComment("大學部-日間四技-B3工藝農");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB1).HasComment("大學部-四技在職專班-B1文法商管教");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB2).HasComment("大學部-四技在職專班-B2理醫");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB3).HasComment("大學部-四技在職專班-B3工藝農");
            entity.Property(e => e.WuZhuanRiJianC1).HasComment("專科部-日間五專-C1商護語");
            entity.Property(e => e.WuZhuanRiJianC2).HasComment("專科部-日間五專-C2醫藥家藝");
            entity.Property(e => e.WuZhuanRiJianC3).HasComment("專科部-日間五專-C3工農海");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZaiZhiZhuanC1).HasComment("專科部-二專在職專班-C1商護語");
            entity.Property(e => e.ZaiZhiZhuanC2).HasComment("專科部-二專在職專班-C2醫藥家藝");
            entity.Property(e => e.ZaiZhiZhuanC3).HasComment("專科部-二專在職專班-C3工農海");
        });

        modelBuilder.Entity<Mform102a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_02A_20180607");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform102a20180703>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_02A_20180703");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform102b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_02B");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform103a>(entity =>
        {
            entity.ToTable("MForm_1_03A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Categy)
                .HasMaxLength(128)
                .HasComment("類別");
            entity.Property(e => e.Degree)
                .HasMaxLength(128)
                .HasComment("學制");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian)
                .HasMaxLength(128)
                .HasComment("第幾年");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.InSchoolStudent).HasComment("在學學生數");
            entity.Property(e => e.Note).HasComment("修改註記");
            entity.Property(e => e.QuanXueXiaoWaiShiXiXueShengShu).HasComment("全學年校外實習學生數");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform103a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_03A_20180607");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform103a20180703>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_03A_20180703");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform103a20180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_03A_20180706");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform103b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_03B");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform103c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_03C");

            entity.Property(e => e.Aa可列計學生人數).HasColumnName("AA可列計學生人數");
            entity.Property(e => e.Ab可列計學生人數).HasColumnName("AB可列計學生人數");
            entity.Property(e => e.Ac可列計學生人數).HasColumnName("AC可列計學生人數");
            entity.Property(e => e.Ad可列計學生人數).HasColumnName("AD可列計學生人數");
            entity.Property(e => e.Ae可列計學生人數).HasColumnName("AE可列計學生人數");
            entity.Property(e => e.Af可列計學生人數).HasColumnName("AF可列計學生人數");
            entity.Property(e => e.Ag可列計學生人數).HasColumnName("AG可列計學生人數");
            entity.Property(e => e.Ah可列計學生人數).HasColumnName("AH可列計學生人數");
            entity.Property(e => e.Ai可列計學生人數).HasColumnName("AI可列計學生人數");
            entity.Property(e => e.Aj可列計學生人數).HasColumnName("AJ可列計學生人數");
            entity.Property(e => e.Ak可列計學生人數).HasColumnName("AK可列計學生人數");
            entity.Property(e => e.Al可列計學生人數).HasColumnName("AL可列計學生人數");
            entity.Property(e => e.Am可列計學生人數).HasColumnName("AM可列計學生人數");
            entity.Property(e => e.An可列計學生人數).HasColumnName("AN可列計學生人數");
            entity.Property(e => e.Ao可列計學生人數).HasColumnName("AO可列計學生人數");
            entity.Property(e => e.Ap可列計學生人數).HasColumnName("AP可列計學生人數");
            entity.Property(e => e.Aq可列計學生人數).HasColumnName("AQ可列計學生人數");
            entity.Property(e => e.學期).HasMaxLength(32);
            entity.Property(e => e.學校名稱).HasMaxLength(128);
            entity.Property(e => e.校基庫學校代碼).HasMaxLength(16);
        });

        modelBuilder.Entity<Mform104a>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MForm_1_3A");

            entity.ToTable("MForm_1_04A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ErJiJinXiuB1).HasComment("大學部-進修部二技-B1文法商管教");
            entity.Property(e => e.ErJiJinXiuB2).HasComment("大學部-進修部二技-B2理醫");
            entity.Property(e => e.ErJiJinXiuB3).HasComment("大學部-進修部二技-B3工藝農");
            entity.Property(e => e.ErJiRiJianB1).HasComment("大學部-日間二技-B1文法商管教");
            entity.Property(e => e.ErJiRiJianB2).HasComment("大學部-日間二技-B2理醫");
            entity.Property(e => e.ErJiRiJianB3).HasComment("大學部-日間二技-B3工藝農");
            entity.Property(e => e.ErZhuanRiJianC1).HasComment("專科部-日間二專-C1商護語");
            entity.Property(e => e.ErZhuanRiJianC2).HasComment("專科部-日間二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanRiJianC3).HasComment("專科部-日間二專-C3工農海");
            entity.Property(e => e.ErZhuanYeJianC1).HasComment("專科部-夜間部二專-C1商護語");
            entity.Property(e => e.ErZhuanYeJianC2).HasComment("專科部-夜間部二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanYeJianC3).HasComment("專科部-夜間部二專-C3工農海");
            entity.Property(e => e.JiJinXiuYuanB1).HasComment("大學部-進修學院-B1文法商管教");
            entity.Property(e => e.JiJinXiuYuanB2).HasComment("大學部-進修學院-B2理醫");
            entity.Property(e => e.JiJinXiuYuanB3).HasComment("大學部-進修學院-B3工藝農");
            entity.Property(e => e.JinXiuZhuanXiaoC1).HasComment("專科部-進修專校-C1商護語");
            entity.Property(e => e.JinXiuZhuanXiaoC2).HasComment("專科部-進修專校-C2醫藥家藝");
            entity.Property(e => e.JinXiuZhuanXiaoC3).HasComment("專科部-進修專校-C3工農海");
            entity.Property(e => e.MasterA1).HasComment("碩、博士班-日間碩士班-A1文法商管教");
            entity.Property(e => e.MasterA2).HasComment("碩、博士班-日間碩士班-A2理醫");
            entity.Property(e => e.MasterA3).HasComment("碩、博士班-日間碩士班-A3工藝農");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.OjtmasterA1)
                .HasComment("碩、博士班-碩士在職專班-A1文法商管教")
                .HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2)
                .HasComment("碩、博士班-碩士在職專班-A2理醫")
                .HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3)
                .HasComment("碩、博士班-碩士在職專班-A3工藝農")
                .HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1)
                .HasComment("碩、博士班-博士班-A1文法商管教")
                .HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2)
                .HasComment("碩、博士班-博士班-A2理醫")
                .HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3)
                .HasComment("碩、博士班-博士班-A3工藝農")
                .HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.SiJiJinXiuB1).HasComment("大學部-進修部四技-B1文法商管教");
            entity.Property(e => e.SiJiJinXiuB2).HasComment("大學部-進修部四技-B2理醫");
            entity.Property(e => e.SiJiJinXiuB3).HasComment("大學部-進修部四技-B3工藝農");
            entity.Property(e => e.SiJiRiJianB1).HasComment("大學部-日間四技-B1文法商管教");
            entity.Property(e => e.SiJiRiJianB2).HasComment("大學部-日間四技-B2理醫");
            entity.Property(e => e.SiJiRiJianB3).HasComment("大學部-日間四技-B3工藝農");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB1).HasComment("大學部-四技在職專班-B1文法商管教");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB2).HasComment("大學部-四技在職專班-B2理醫");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB3).HasComment("大學部-四技在職專班-B3工藝農");
            entity.Property(e => e.WuZhuanRiJianC1).HasComment("專科部-日間五專-C1商護語");
            entity.Property(e => e.WuZhuanRiJianC2).HasComment("專科部-日間五專-C2醫藥家藝");
            entity.Property(e => e.WuZhuanRiJianC3).HasComment("專科部-日間五專-C3工農海");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZaiZhiZhuanC1).HasComment("專科部-二專在職專班-C1商護語");
            entity.Property(e => e.ZaiZhiZhuanC2).HasComment("專科部-二專在職專班-C2醫藥家藝");
            entity.Property(e => e.ZaiZhiZhuanC3).HasComment("專科部-二專在職專班-C3工農海");
        });

        modelBuilder.Entity<Mform104a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_04A_20180607");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform104b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_04B");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform105a>(entity =>
        {
            entity.ToTable("MForm_1_05A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.BiYeZongXueFenShu).HasComment("畢業總學分數");
            entity.Property(e => e.Categy)
                .HasMaxLength(128)
                .HasComment("類別");
            entity.Property(e => e.Degree)
                .HasMaxLength(128)
                .HasComment("學制");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian)
                .HasMaxLength(128)
                .HasComment("第幾年");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.InSchoolStudent).HasComment("在學學生數");
            entity.Property(e => e.Note).HasComment("修改註記");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.ShiXiXueFenShu).HasComment("部分學分校外實習之學分數");
            entity.Property(e => e.ShiXiXueShengShu).HasComment("部分學分校外實習之學生數");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform105a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_05A_20180607");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform105a20180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_05A_20180706");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform105b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_05B");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.ConvertStudent).HasMaxLength(30);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Kelieji)
                .HasMaxLength(30)
                .HasColumnName("kelieji");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform105c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_05C");

            entity.Property(e => e.Aa可列計學生人數).HasColumnName("AA可列計學生人數");
            entity.Property(e => e.Ab可列計學生人數).HasColumnName("AB可列計學生人數");
            entity.Property(e => e.Ac可列計學生人數).HasColumnName("AC可列計學生人數");
            entity.Property(e => e.Ad可列計學生人數).HasColumnName("AD可列計學生人數");
            entity.Property(e => e.Ae可列計學生人數).HasColumnName("AE可列計學生人數");
            entity.Property(e => e.Af可列計學生人數).HasColumnName("AF可列計學生人數");
            entity.Property(e => e.Ag可列計學生人數).HasColumnName("AG可列計學生人數");
            entity.Property(e => e.Ah可列計學生人數).HasColumnName("AH可列計學生人數");
            entity.Property(e => e.Ai可列計學生人數).HasColumnName("AI可列計學生人數");
            entity.Property(e => e.Aj可列計學生人數).HasColumnName("AJ可列計學生人數");
            entity.Property(e => e.Ak可列計學生人數).HasColumnName("AK可列計學生人數");
            entity.Property(e => e.Al可列計學生人數).HasColumnName("AL可列計學生人數");
            entity.Property(e => e.Am可列計學生人數).HasColumnName("AM可列計學生人數");
            entity.Property(e => e.An可列計學生人數).HasColumnName("AN可列計學生人數");
            entity.Property(e => e.Ao可列計學生人數).HasColumnName("AO可列計學生人數");
            entity.Property(e => e.Ap可列計學生人數).HasColumnName("AP可列計學生人數");
            entity.Property(e => e.Aq可列計學生人數).HasColumnName("AQ可列計學生人數");
            entity.Property(e => e.學期).HasMaxLength(32);
            entity.Property(e => e.學校名稱).HasMaxLength(128);
            entity.Property(e => e.校基庫學校代碼).HasMaxLength(16);
        });

        modelBuilder.Entity<Mform106a>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MForm_1_5A");

            entity.ToTable("MForm_1_06A");

            entity.HasIndex(e => new { e.Year, e.SchoolNum }, "IX_MForm_1_06A_02");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ErJiJinXiuB1).HasComment("大學部-進修部二技-B1文法商管教");
            entity.Property(e => e.ErJiJinXiuB2).HasComment("大學部-進修部二技-B2理醫");
            entity.Property(e => e.ErJiJinXiuB3).HasComment("大學部-進修部二技-B3工藝農");
            entity.Property(e => e.ErJiRiJianB1).HasComment("大學部-日間二技-B1文法商管教");
            entity.Property(e => e.ErJiRiJianB2).HasComment("大學部-日間二技-B2理醫");
            entity.Property(e => e.ErJiRiJianB3).HasComment("大學部-日間二技-B3工藝農");
            entity.Property(e => e.ErZhuanRiJianC1).HasComment("專科部-日間二專-C1商護語");
            entity.Property(e => e.ErZhuanRiJianC2).HasComment("專科部-日間二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanRiJianC3).HasComment("專科部-日間二專-C3工農海");
            entity.Property(e => e.ErZhuanYeJianC1).HasComment("專科部-夜間部二專-C1商護語");
            entity.Property(e => e.ErZhuanYeJianC2).HasComment("專科部-夜間部二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanYeJianC3).HasComment("專科部-夜間部二專-C3工農海");
            entity.Property(e => e.JiJinXiuYuanB1).HasComment("大學部-進修學院-B1文法商管教");
            entity.Property(e => e.JiJinXiuYuanB2).HasComment("大學部-進修學院-B2理醫");
            entity.Property(e => e.JiJinXiuYuanB3).HasComment("大學部-進修學院-B3工藝農");
            entity.Property(e => e.JinXiuZhuanXiaoC1).HasComment("專科部-進修專校-C1商護語");
            entity.Property(e => e.JinXiuZhuanXiaoC2).HasComment("專科部-進修專校-C2醫藥家藝");
            entity.Property(e => e.JinXiuZhuanXiaoC3).HasComment("專科部-進修專校-C3工農海");
            entity.Property(e => e.MasterA1).HasComment("碩、博士班-日間碩士班-A1文法商管教");
            entity.Property(e => e.MasterA2).HasComment("碩、博士班-日間碩士班-A2理醫");
            entity.Property(e => e.MasterA3).HasComment("碩、博士班-日間碩士班-A3工藝農");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.OjtmasterA1)
                .HasComment("碩、博士班-碩士在職專班-A1文法商管教")
                .HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2)
                .HasComment("碩、博士班-碩士在職專班-A2理醫")
                .HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3)
                .HasComment("碩、博士班-碩士在職專班-A3工藝農")
                .HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1)
                .HasComment("碩、博士班-博士班-A1文法商管教")
                .HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2)
                .HasComment("碩、博士班-博士班-A2理醫")
                .HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3)
                .HasComment("碩、博士班-博士班-A3工藝農")
                .HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.SiJiJinXiuB1).HasComment("大學部-進修部四技-B1文法商管教");
            entity.Property(e => e.SiJiJinXiuB2).HasComment("大學部-進修部四技-B2理醫");
            entity.Property(e => e.SiJiJinXiuB3).HasComment("大學部-進修部四技-B3工藝農");
            entity.Property(e => e.SiJiRiJianB1).HasComment("大學部-日間四技-B1文法商管教");
            entity.Property(e => e.SiJiRiJianB2).HasComment("大學部-日間四技-B2理醫");
            entity.Property(e => e.SiJiRiJianB3).HasComment("大學部-日間四技-B3工藝農");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB1).HasComment("大學部-四技在職專班-B1文法商管教");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB2).HasComment("大學部-四技在職專班-B2理醫");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB3).HasComment("大學部-四技在職專班-B3工藝農");
            entity.Property(e => e.WuZhuanRiJianC1).HasComment("專科部-日間五專-C1商護語");
            entity.Property(e => e.WuZhuanRiJianC2).HasComment("專科部-日間五專-C2醫藥家藝");
            entity.Property(e => e.WuZhuanRiJianC3).HasComment("專科部-日間五專-C3工農海");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZaiZhiZhuanC1).HasComment("專科部-二專在職專班-C1商護語");
            entity.Property(e => e.ZaiZhiZhuanC2).HasComment("專科部-二專在職專班-C2醫藥家藝");
            entity.Property(e => e.ZaiZhiZhuanC3).HasComment("專科部-二專在職專班-C3工農海");
        });

        modelBuilder.Entity<Mform106a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_06A_20180607");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform106a20180703>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_06A_20180703");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform106a20180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_06A_20180706");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform106b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_06B");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform106c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_06C");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform107a>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MForm_1_6A");

            entity.ToTable("MForm_1_07A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ErJiJinXiuB1).HasComment("大學部-進修部二技-B1文法商管教");
            entity.Property(e => e.ErJiJinXiuB2).HasComment("大學部-進修部二技-B2理醫");
            entity.Property(e => e.ErJiJinXiuB3).HasComment("大學部-進修部二技-B3工藝農");
            entity.Property(e => e.ErJiRiJianB1).HasComment("大學部-日間二技-B1文法商管教");
            entity.Property(e => e.ErJiRiJianB2).HasComment("大學部-日間二技-B2理醫");
            entity.Property(e => e.ErJiRiJianB3).HasComment("大學部-日間二技-B3工藝農");
            entity.Property(e => e.ErZhuanRiJianC1).HasComment("專科部-日間二專-C1商護語");
            entity.Property(e => e.ErZhuanRiJianC2).HasComment("專科部-日間二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanRiJianC3).HasComment("專科部-日間二專-C3工農海");
            entity.Property(e => e.ErZhuanYeJianC1).HasComment("專科部-夜間部二專-C1商護語");
            entity.Property(e => e.ErZhuanYeJianC2).HasComment("專科部-夜間部二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanYeJianC3).HasComment("專科部-夜間部二專-C3工農海");
            entity.Property(e => e.JiJinXiuYuanB1).HasComment("大學部-進修學院-B1文法商管教");
            entity.Property(e => e.JiJinXiuYuanB2).HasComment("大學部-進修學院-B2理醫");
            entity.Property(e => e.JiJinXiuYuanB3).HasComment("大學部-進修學院-B3工藝農");
            entity.Property(e => e.JinXiuZhuanXiaoC1).HasComment("專科部-進修專校-C1商護語");
            entity.Property(e => e.JinXiuZhuanXiaoC2).HasComment("專科部-進修專校-C2醫藥家藝");
            entity.Property(e => e.JinXiuZhuanXiaoC3).HasComment("專科部-進修專校-C3工農海");
            entity.Property(e => e.MasterA1).HasComment("碩、博士班-日間碩士班-A1文法商管教");
            entity.Property(e => e.MasterA2).HasComment("碩、博士班-日間碩士班-A2理醫");
            entity.Property(e => e.MasterA3).HasComment("碩、博士班-日間碩士班-A3工藝農");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.OjtmasterA1)
                .HasComment("碩、博士班-碩士在職專班-A1文法商管教")
                .HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2)
                .HasComment("碩、博士班-碩士在職專班-A2理醫")
                .HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3)
                .HasComment("碩、博士班-碩士在職專班-A3工藝農")
                .HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1)
                .HasComment("碩、博士班-博士班-A1文法商管教")
                .HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2)
                .HasComment("碩、博士班-博士班-A2理醫")
                .HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3)
                .HasComment("碩、博士班-博士班-A3工藝農")
                .HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.SiJiJinXiuB1).HasComment("大學部-進修部四技-B1文法商管教");
            entity.Property(e => e.SiJiJinXiuB2).HasComment("大學部-進修部四技-B2理醫");
            entity.Property(e => e.SiJiJinXiuB3).HasComment("大學部-進修部四技-B3工藝農");
            entity.Property(e => e.SiJiRiJianB1).HasComment("大學部-日間四技-B1文法商管教");
            entity.Property(e => e.SiJiRiJianB2).HasComment("大學部-日間四技-B2理醫");
            entity.Property(e => e.SiJiRiJianB3).HasComment("大學部-日間四技-B3工藝農");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB1).HasComment("大學部-四技在職專班-B1文法商管教");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB2).HasComment("大學部-四技在職專班-B2理醫");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB3).HasComment("大學部-四技在職專班-B3工藝農");
            entity.Property(e => e.WuZhuanRiJianC1).HasComment("專科部-日間五專-C1商護語");
            entity.Property(e => e.WuZhuanRiJianC2).HasComment("專科部-日間五專-C2醫藥家藝");
            entity.Property(e => e.WuZhuanRiJianC3).HasComment("專科部-日間五專-C3工農海");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZaiZhiZhuanC1).HasComment("專科部-二專在職專班-C1商護語");
            entity.Property(e => e.ZaiZhiZhuanC2).HasComment("專科部-二專在職專班-C2醫藥家藝");
            entity.Property(e => e.ZaiZhiZhuanC3).HasComment("專科部-二專在職專班-C3工農海");
        });

        modelBuilder.Entity<Mform107a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_07A_20180607");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform107b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_07B");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.Ojtmaster).HasColumnName("OJTMaster");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
            entity.Property(e => e.Sum).HasColumnName("SUM");
        });

        modelBuilder.Entity<Mform108a>(entity =>
        {
            entity.ToTable("MForm_1_08A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Categy)
                .HasMaxLength(128)
                .HasComment("類別");
            entity.Property(e => e.Degree)
                .HasMaxLength(128)
                .HasComment("學制");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian)
                .HasMaxLength(128)
                .HasComment("第幾年");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.InSchoolStudent).HasComment("在學學生數");
            entity.Property(e => e.Note).HasComment("修改註記");
            entity.Property(e => e.QuanXueXiaoWaiShiXiXueShengShu).HasComment("全學年校外實習學生數");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform108a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_08A_20180607");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform108a20180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_08A_20180706");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform108b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_08B");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform108c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_08C");

            entity.Property(e => e.Aa可列計學生人數).HasColumnName("AA可列計學生人數");
            entity.Property(e => e.Ab可列計學生人數).HasColumnName("AB可列計學生人數");
            entity.Property(e => e.Ac可列計學生人數).HasColumnName("AC可列計學生人數");
            entity.Property(e => e.Ad可列計學生人數).HasColumnName("AD可列計學生人數");
            entity.Property(e => e.Ae可列計學生人數).HasColumnName("AE可列計學生人數");
            entity.Property(e => e.Af可列計學生人數).HasColumnName("AF可列計學生人數");
            entity.Property(e => e.Ag可列計學生人數).HasColumnName("AG可列計學生人數");
            entity.Property(e => e.Ah可列計學生人數).HasColumnName("AH可列計學生人數");
            entity.Property(e => e.Ai可列計學生人數).HasColumnName("AI可列計學生人數");
            entity.Property(e => e.Aj可列計學生人數).HasColumnName("AJ可列計學生人數");
            entity.Property(e => e.Ak可列計學生人數).HasColumnName("AK可列計學生人數");
            entity.Property(e => e.Al可列計學生人數).HasColumnName("AL可列計學生人數");
            entity.Property(e => e.Am可列計學生人數).HasColumnName("AM可列計學生人數");
            entity.Property(e => e.An可列計學生人數).HasColumnName("AN可列計學生人數");
            entity.Property(e => e.Ao可列計學生人數).HasColumnName("AO可列計學生人數");
            entity.Property(e => e.Ap可列計學生人數).HasColumnName("AP可列計學生人數");
            entity.Property(e => e.Aq可列計學生人數).HasColumnName("AQ可列計學生人數");
            entity.Property(e => e.學期).HasMaxLength(32);
            entity.Property(e => e.學校名稱).HasMaxLength(128);
            entity.Property(e => e.校基庫學校代碼).HasMaxLength(16);
        });

        modelBuilder.Entity<Mform109a>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MForm_1_7A");

            entity.ToTable("MForm_1_09A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ErJiJinXiuB1).HasComment("大學部-進修部二技-B1文法商管教");
            entity.Property(e => e.ErJiJinXiuB2).HasComment("大學部-進修部二技-B2理醫");
            entity.Property(e => e.ErJiJinXiuB3).HasComment("大學部-進修部二技-B3工藝農");
            entity.Property(e => e.ErJiRiJianB1).HasComment("大學部-日間二技-B1文法商管教");
            entity.Property(e => e.ErJiRiJianB2).HasComment("大學部-日間二技-B2理醫");
            entity.Property(e => e.ErJiRiJianB3).HasComment("大學部-日間二技-B3工藝農");
            entity.Property(e => e.ErZhuanRiJianC1).HasComment("專科部-日間二專-C1商護語");
            entity.Property(e => e.ErZhuanRiJianC2).HasComment("專科部-日間二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanRiJianC3).HasComment("專科部-日間二專-C3工農海");
            entity.Property(e => e.ErZhuanYeJianC1).HasComment("專科部-夜間部二專-C1商護語");
            entity.Property(e => e.ErZhuanYeJianC2).HasComment("專科部-夜間部二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanYeJianC3).HasComment("專科部-夜間部二專-C3工農海");
            entity.Property(e => e.JiJinXiuYuanB1).HasComment("大學部-進修學院-B1文法商管教");
            entity.Property(e => e.JiJinXiuYuanB2).HasComment("大學部-進修學院-B2理醫");
            entity.Property(e => e.JiJinXiuYuanB3).HasComment("大學部-進修學院-B3工藝農");
            entity.Property(e => e.JinXiuZhuanXiaoC1).HasComment("專科部-進修專校-C1商護語");
            entity.Property(e => e.JinXiuZhuanXiaoC2).HasComment("專科部-進修專校-C2醫藥家藝");
            entity.Property(e => e.JinXiuZhuanXiaoC3).HasComment("專科部-進修專校-C3工農海");
            entity.Property(e => e.MasterA1).HasComment("碩、博士班-日間碩士班-A1文法商管教");
            entity.Property(e => e.MasterA2).HasComment("碩、博士班-日間碩士班-A2理醫");
            entity.Property(e => e.MasterA3).HasComment("碩、博士班-日間碩士班-A3工藝農");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.OjtmasterA1)
                .HasComment("碩、博士班-碩士在職專班-A1文法商管教")
                .HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2)
                .HasComment("碩、博士班-碩士在職專班-A2理醫")
                .HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3)
                .HasComment("碩、博士班-碩士在職專班-A3工藝農")
                .HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1)
                .HasComment("碩、博士班-博士班-A1文法商管教")
                .HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2)
                .HasComment("碩、博士班-博士班-A2理醫")
                .HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3)
                .HasComment("碩、博士班-博士班-A3工藝農")
                .HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.SiJiJinXiuB1).HasComment("大學部-進修部四技-B1文法商管教");
            entity.Property(e => e.SiJiJinXiuB2).HasComment("大學部-進修部四技-B2理醫");
            entity.Property(e => e.SiJiJinXiuB3).HasComment("大學部-進修部四技-B3工藝農");
            entity.Property(e => e.SiJiRiJianB1).HasComment("大學部-日間四技-B1文法商管教");
            entity.Property(e => e.SiJiRiJianB2).HasComment("大學部-日間四技-B2理醫");
            entity.Property(e => e.SiJiRiJianB3).HasComment("大學部-日間四技-B3工藝農");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB1).HasComment("大學部-四技在職專班-B1文法商管教");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB2).HasComment("大學部-四技在職專班-B2理醫");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB3).HasComment("大學部-四技在職專班-B3工藝農");
            entity.Property(e => e.WuZhuanRiJianC1).HasComment("專科部-日間五專-C1商護語");
            entity.Property(e => e.WuZhuanRiJianC2).HasComment("專科部-日間五專-C2醫藥家藝");
            entity.Property(e => e.WuZhuanRiJianC3).HasComment("專科部-日間五專-C3工農海");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZaiZhiZhuanC1).HasComment("專科部-二專在職專班-C1商護語");
            entity.Property(e => e.ZaiZhiZhuanC2).HasComment("專科部-二專在職專班-C2醫藥家藝");
            entity.Property(e => e.ZaiZhiZhuanC3).HasComment("專科部-二專在職專班-C3工農海");
        });

        modelBuilder.Entity<Mform109a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_09A_20180607");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform109b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_09B");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform110a>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MForm_1_8A");

            entity.ToTable("MForm_1_10A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.BiYeZongXueFenShu).HasComment("畢業總學分數");
            entity.Property(e => e.Categy)
                .HasMaxLength(128)
                .HasComment("類別");
            entity.Property(e => e.Degree)
                .HasMaxLength(128)
                .HasComment("學制");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian)
                .HasMaxLength(128)
                .HasComment("第幾年");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.InSchoolStudent).HasComment("在學學生數");
            entity.Property(e => e.Note).HasComment("修改註記");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.ShiXiXueFenShu).HasComment("部分學分校外實習之學分數");
            entity.Property(e => e.ShiXiXueShengShu).HasComment("部分學分校外實習之學生數");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform110a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_10A_20180607");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform110b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_10B");

            entity.Property(e => e.Categy).HasMaxLength(128);
            entity.Property(e => e.ConvertStudent).HasMaxLength(30);
            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DiJiNian).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.Kelieji)
                .HasMaxLength(30)
                .HasColumnName("kelieji");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform110c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_10C");

            entity.Property(e => e.Aa可列計學生人數).HasColumnName("AA可列計學生人數");
            entity.Property(e => e.Ab可列計學生人數).HasColumnName("AB可列計學生人數");
            entity.Property(e => e.Ac可列計學生人數).HasColumnName("AC可列計學生人數");
            entity.Property(e => e.Ad可列計學生人數).HasColumnName("AD可列計學生人數");
            entity.Property(e => e.Ae可列計學生人數).HasColumnName("AE可列計學生人數");
            entity.Property(e => e.Af可列計學生人數).HasColumnName("AF可列計學生人數");
            entity.Property(e => e.Ag可列計學生人數).HasColumnName("AG可列計學生人數");
            entity.Property(e => e.Ah可列計學生人數).HasColumnName("AH可列計學生人數");
            entity.Property(e => e.Ai可列計學生人數).HasColumnName("AI可列計學生人數");
            entity.Property(e => e.Aj可列計學生人數).HasColumnName("AJ可列計學生人數");
            entity.Property(e => e.Ak可列計學生人數).HasColumnName("AK可列計學生人數");
            entity.Property(e => e.Al可列計學生人數).HasColumnName("AL可列計學生人數");
            entity.Property(e => e.Am可列計學生人數).HasColumnName("AM可列計學生人數");
            entity.Property(e => e.An可列計學生人數).HasColumnName("AN可列計學生人數");
            entity.Property(e => e.Ao可列計學生人數).HasColumnName("AO可列計學生人數");
            entity.Property(e => e.Ap可列計學生人數).HasColumnName("AP可列計學生人數");
            entity.Property(e => e.Aq可列計學生人數).HasColumnName("AQ可列計學生人數");
            entity.Property(e => e.學期).HasMaxLength(32);
            entity.Property(e => e.學校名稱).HasMaxLength(128);
            entity.Property(e => e.校基庫學校代碼).HasMaxLength(16);
        });

        modelBuilder.Entity<Mform111a>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MForm_1_9A");

            entity.ToTable("MForm_1_11A");

            entity.HasIndex(e => new { e.Year, e.SchoolNum }, "IX_MForm_1_11A_02");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.ErJiJinXiuB1).HasComment("大學部-進修部二技-B1文法商管教");
            entity.Property(e => e.ErJiJinXiuB2).HasComment("大學部-進修部二技-B2理醫");
            entity.Property(e => e.ErJiJinXiuB3).HasComment("大學部-進修部二技-B3工藝農");
            entity.Property(e => e.ErJiRiJianB1).HasComment("大學部-日間二技-B1文法商管教");
            entity.Property(e => e.ErJiRiJianB2).HasComment("大學部-日間二技-B2理醫");
            entity.Property(e => e.ErJiRiJianB3).HasComment("大學部-日間二技-B3工藝農");
            entity.Property(e => e.ErZhuanRiJianC1).HasComment("專科部-日間二專-C1商護語");
            entity.Property(e => e.ErZhuanRiJianC2).HasComment("專科部-日間二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanRiJianC3).HasComment("專科部-日間二專-C3工農海");
            entity.Property(e => e.ErZhuanYeJianC1).HasComment("專科部-夜間部二專-C1商護語");
            entity.Property(e => e.ErZhuanYeJianC2).HasComment("專科部-夜間部二專-C2醫藥家藝");
            entity.Property(e => e.ErZhuanYeJianC3).HasComment("專科部-夜間部二專-C3工農海");
            entity.Property(e => e.JiJinXiuYuanB1).HasComment("大學部-進修學院-B1文法商管教");
            entity.Property(e => e.JiJinXiuYuanB2).HasComment("大學部-進修學院-B2理醫");
            entity.Property(e => e.JiJinXiuYuanB3).HasComment("大學部-進修學院-B3工藝農");
            entity.Property(e => e.JinXiuZhuanXiaoC1).HasComment("專科部-進修專校-C1商護語");
            entity.Property(e => e.JinXiuZhuanXiaoC2).HasComment("專科部-進修專校-C2醫藥家藝");
            entity.Property(e => e.JinXiuZhuanXiaoC3).HasComment("專科部-進修專校-C3工農海");
            entity.Property(e => e.MasterA1).HasComment("碩、博士班-日間碩士班-A1文法商管教");
            entity.Property(e => e.MasterA2).HasComment("碩、博士班-日間碩士班-A2理醫");
            entity.Property(e => e.MasterA3).HasComment("碩、博士班-日間碩士班-A3工藝農");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.OjtmasterA1)
                .HasComment("碩、博士班-碩士在職專班-A1文法商管教")
                .HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2)
                .HasComment("碩、博士班-碩士在職專班-A2理醫")
                .HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3)
                .HasComment("碩、博士班-碩士在職專班-A3工藝農")
                .HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1)
                .HasComment("碩、博士班-博士班-A1文法商管教")
                .HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2)
                .HasComment("碩、博士班-博士班-A2理醫")
                .HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3)
                .HasComment("碩、博士班-博士班-A3工藝農")
                .HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.SiJiJinXiuB1).HasComment("大學部-進修部四技-B1文法商管教");
            entity.Property(e => e.SiJiJinXiuB2).HasComment("大學部-進修部四技-B2理醫");
            entity.Property(e => e.SiJiJinXiuB3).HasComment("大學部-進修部四技-B3工藝農");
            entity.Property(e => e.SiJiRiJianB1).HasComment("大學部-日間四技-B1文法商管教");
            entity.Property(e => e.SiJiRiJianB2).HasComment("大學部-日間四技-B2理醫");
            entity.Property(e => e.SiJiRiJianB3).HasComment("大學部-日間四技-B3工藝農");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB1).HasComment("大學部-四技在職專班-B1文法商管教");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB2).HasComment("大學部-四技在職專班-B2理醫");
            entity.Property(e => e.SiJiZaiZhiZhuanBanB3).HasComment("大學部-四技在職專班-B3工藝農");
            entity.Property(e => e.WuZhuanRiJianC1).HasComment("專科部-日間五專-C1商護語");
            entity.Property(e => e.WuZhuanRiJianC2).HasComment("專科部-日間五專-C2醫藥家藝");
            entity.Property(e => e.WuZhuanRiJianC3).HasComment("專科部-日間五專-C3工農海");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZaiZhiZhuanC1).HasComment("專科部-二專在職專班-C1商護語");
            entity.Property(e => e.ZaiZhiZhuanC2).HasComment("專科部-二專在職專班-C2醫藥家藝");
            entity.Property(e => e.ZaiZhiZhuanC3).HasComment("專科部-二專在職專班-C3工農海");
        });

        modelBuilder.Entity<Mform111a20180607>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_1_11A_20180607");

            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OjtmasterA1).HasColumnName("OJTMasterA1");
            entity.Property(e => e.OjtmasterA2).HasColumnName("OJTMasterA2");
            entity.Property(e => e.OjtmasterA3).HasColumnName("OJTMasterA3");
            entity.Property(e => e.PhDa1).HasColumnName("PhDA1");
            entity.Property(e => e.PhDa2).HasColumnName("PhDA2");
            entity.Property(e => e.PhDa3).HasColumnName("PhDA3");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform111b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_1_11B");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform201a>(entity =>
        {
            entity.ToTable("MForm_2_01A");

            entity.HasIndex(e => new { e.Year, e.SchoolNum }, "IX_MForm_2_01A_02");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AreaNum).HasComment("面積數-提供正式學籍學生活動、教學、研究之用");
            entity.Property(e => e.BuildingName)
                .HasMaxLength(256)
                .HasComment("校舍建築名稱");
            entity.Property(e => e.Campus)
                .HasMaxLength(128)
                .HasComment("校區(校本部、分部)");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目(增加、修改(刪除))");
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.LicenseNum)
                .HasMaxLength(128)
                .HasComment("使用執照證號");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.Ownership)
                .HasMaxLength(128)
                .HasComment("權屬別(自有)");
            entity.Property(e => e.Rent)
                .HasMaxLength(256)
                .HasComment("出租(借)情形");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.Status)
                .HasMaxLength(128)
                .HasComment("狀態(已完成)");
            entity.Property(e => e.UseLicense)
                .HasMaxLength(128)
                .HasComment("使用執照取得情形");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform201b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_01B");

            entity.Property(e => e.A1).HasMaxLength(16);
            entity.Property(e => e.A3).HasMaxLength(32);
            entity.Property(e => e.A4).HasMaxLength(128);
        });

        modelBuilder.Entity<Mform202a>(entity =>
        {
            entity.ToTable("MForm_2_02A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AreaNum).HasComment("面積數-提供正式學籍學生活動、教學、研究之用");
            entity.Property(e => e.BuildingName)
                .HasMaxLength(256)
                .HasComment("校舍建築名稱");
            entity.Property(e => e.Campus)
                .HasMaxLength(128)
                .HasComment("校區(校本部、分部)");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目(增加、修改(刪除))");
            entity.Property(e => e.EditTime)
                .HasComment("")
                .HasColumnType("datetime");
            entity.Property(e => e.FinishDate)
                .HasMaxLength(128)
                .HasComment("完工日期");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.Ownership)
                .HasMaxLength(128)
                .HasComment("權屬別(自有)");
            entity.Property(e => e.Rent)
                .HasMaxLength(256)
                .HasComment("出租(借)情形");
            entity.Property(e => e.SafeSituation)
                .HasMaxLength(512)
                .HasComment("建物安全鑑定通過情形(結構與消防均有)");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.Status)
                .HasMaxLength(128)
                .HasComment("狀態(已完成)");
            entity.Property(e => e.UseLicense)
                .HasMaxLength(128)
                .HasComment("使用執照取得情形");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform202b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_02B");

            entity.Property(e => e.BuildingName).HasMaxLength(256);
            entity.Property(e => e.Campus).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.LicenseNum).HasMaxLength(128);
            entity.Property(e => e.Ownership).HasMaxLength(128);
            entity.Property(e => e.Rent).HasMaxLength(256);
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
            entity.Property(e => e.Status).HasMaxLength(128);
            entity.Property(e => e.UseLicense).HasMaxLength(128);
        });

        modelBuilder.Entity<Mform203a>(entity =>
        {
            entity.ToTable("MForm_2_03A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AreaNum).HasComment("面積數-提供正式學籍學生活動、教學、研究之用");
            entity.Property(e => e.BuildingName)
                .HasMaxLength(256)
                .HasComment("校舍建築名稱");
            entity.Property(e => e.Campus)
                .HasMaxLength(128)
                .HasComment("校區(校本部、分部)");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目(增加、修改(刪除))");
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.LicenseNum)
                .HasMaxLength(128)
                .HasComment("使用執照證號");
            entity.Property(e => e.Note).HasComment("修改說明");
            entity.Property(e => e.Ownership)
                .HasMaxLength(128)
                .HasComment("權屬別(自有)");
            entity.Property(e => e.Rent)
                .HasMaxLength(256)
                .HasComment("出租(借)情形");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.Status)
                .HasMaxLength(128)
                .HasComment("狀態(已完成)");
            entity.Property(e => e.UseLicense)
                .HasMaxLength(128)
                .HasComment("使用執照取得情形");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform203b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_03B");

            entity.Property(e => e.BuildingName).HasMaxLength(256);
            entity.Property(e => e.Campus).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.FinishDate).HasMaxLength(128);
            entity.Property(e => e.Ownership).HasMaxLength(128);
            entity.Property(e => e.Rent).HasMaxLength(256);
            entity.Property(e => e.SafeSituation).HasMaxLength(512);
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
            entity.Property(e => e.Status).HasMaxLength(128);
            entity.Property(e => e.UseLicense).HasMaxLength(128);
        });

        modelBuilder.Entity<Mform204a>(entity =>
        {
            entity.ToTable("MForm_2_04A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AreaNum).HasComment("面積數");
            entity.Property(e => e.BuildingName)
                .HasMaxLength(256)
                .HasComment("建築名稱");
            entity.Property(e => e.Contract)
                .HasMaxLength(128)
                .HasComment("是否有合約(有)");
            entity.Property(e => e.ContractEnd)
                .HasMaxLength(128)
                .HasComment("合約期限-租約結束");
            entity.Property(e => e.ContractStart)
                .HasMaxLength(128)
                .HasComment("合約期限-租約始日");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目(增加、修改(刪除))");
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Notarization)
                .HasMaxLength(128)
                .HasComment("是否經法院公證(有)");
            entity.Property(e => e.NotarizationNum)
                .HasMaxLength(128)
                .HasComment("法院公證證明字號(有)");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(32)
                .HasComment("學期");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform204b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_04B");

            entity.Property(e => e.BuildingName).HasMaxLength(256);
            entity.Property(e => e.Campus).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.LicenseNum).HasMaxLength(128);
            entity.Property(e => e.Ownership).HasMaxLength(128);
            entity.Property(e => e.Rent).HasMaxLength(256);
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
            entity.Property(e => e.Status).HasMaxLength(128);
            entity.Property(e => e.UseLicense).HasMaxLength(128);
        });

        modelBuilder.Entity<Mform205b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_05B");

            entity.Property(e => e.BuildingName).HasMaxLength(256);
            entity.Property(e => e.Contract).HasMaxLength(128);
            entity.Property(e => e.ContractEnd).HasMaxLength(128);
            entity.Property(e => e.ContractStart).HasMaxLength(128);
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.Notarization).HasMaxLength(128);
            entity.Property(e => e.NotarizationNum).HasMaxLength(128);
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform206b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_06B");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform207b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_07B");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform208b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_08B");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform209b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_2_09B");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(32);
        });

        modelBuilder.Entity<Mform301a>(entity =>
        {
            entity.ToTable("MForm_3_01A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ChengShuNum)
                .HasMaxLength(128)
                .HasComment("證書字號");
            entity.Property(e => e.ChengShuZhiJi)
                .HasMaxLength(128)
                .HasComment("證書職級(4.30前確定取得職級)");
            entity.Property(e => e.Classification)
                .HasMaxLength(128)
                .HasComment("教師分類");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.GongPinXiSuo)
                .HasMaxLength(256)
                .HasComment("共聘系所");
            entity.Property(e => e.JinXiuTeacher)
                .HasMaxLength(128)
                .HasComment("是否為全時進修教師");
            entity.Property(e => e.JuanJianRen)
                .HasMaxLength(128)
                .HasComment("專、兼任");
            entity.Property(e => e.LieJiZhiJi)
                .HasMaxLength(128)
                .HasComment("列計職級");
            entity.Property(e => e.Note).HasComment("修改註記");
            entity.Property(e => e.PinRenDate)
                .HasMaxLength(128)
                .HasComment("聘任日期");
            entity.Property(e => e.PinShuZhiJi)
                .HasMaxLength(128)
                .HasComment("聘書職級(4.30前確定取得職級)");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(16)
                .HasComment("學期");
            entity.Property(e => e.ShouKeShiShu)
                .HasMaxLength(128)
                .HasComment("兼任教師每週授課時數(每週2小時(含)以上)");
            entity.Property(e => e.TeacherName)
                .HasMaxLength(128)
                .HasComment("教師姓名(中文)");
            entity.Property(e => e.TeacherNum)
                .HasMaxLength(128)
                .HasComment("教師識別號");
            entity.Property(e => e.Year).HasComment("學年度");
            entity.Property(e => e.ZhuPinXiSuo)
                .HasMaxLength(256)
                .HasComment("主聘系所");
        });

        modelBuilder.Entity<Mform301a20180705>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_3_01A_20180705");

            entity.Property(e => e.ChengShuNum).HasMaxLength(128);
            entity.Property(e => e.ChengShuZhiJi).HasMaxLength(128);
            entity.Property(e => e.Classification).HasMaxLength(128);
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasMaxLength(512);
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.GongPinXiSuo).HasMaxLength(256);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.JinXiuTeacher).HasMaxLength(128);
            entity.Property(e => e.JuanJianRen).HasMaxLength(128);
            entity.Property(e => e.LieJiZhiJi).HasMaxLength(128);
            entity.Property(e => e.PinRenDate).HasMaxLength(128);
            entity.Property(e => e.PinShuZhiJi).HasMaxLength(128);
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(16);
            entity.Property(e => e.ShouKeShiShu).HasMaxLength(128);
            entity.Property(e => e.TeacherName).HasMaxLength(128);
            entity.Property(e => e.TeacherNum).HasMaxLength(128);
            entity.Property(e => e.ZhuPinXiSuo).HasMaxLength(256);
        });

        modelBuilder.Entity<Mform301b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_3_01B");

            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(16);
            entity.Property(e => e.ZhuPinXiSuo).HasMaxLength(256);
        });

        modelBuilder.Entity<Mform301c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_3_01C");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(16);
        });

        modelBuilder.Entity<Mform401a>(entity =>
        {
            entity.ToTable("MForm_4_01A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.BiXuanXiu)
                .HasMaxLength(128)
                .HasComment("必選修");
            entity.Property(e => e.CourseName)
                .HasMaxLength(256)
                .HasComment("課程名稱");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.JuanJianRen)
                .HasMaxLength(128)
                .HasComment("專、兼任");
            entity.Property(e => e.KaiKeXueFenShu)
                .HasMaxLength(128)
                .HasComment("開課學分數");
            entity.Property(e => e.Note).HasComment("修正註記");
            entity.Property(e => e.OpenDegree)
                .HasMaxLength(128)
                .HasComment("開課學制");
            entity.Property(e => e.OpenDepartment)
                .HasMaxLength(128)
                .HasComment("開課系所(限學院、學位學程)");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.Semester)
                .HasMaxLength(16)
                .HasComment("學期");
            entity.Property(e => e.ShouKeShiShu).HasComment("授課時數(每週)");
            entity.Property(e => e.SubjetCategy)
                .HasMaxLength(256)
                .HasComment("科目類別(限專業科目、實習)");
            entity.Property(e => e.TeacherName)
                .HasMaxLength(128)
                .HasComment("授課教師");
            entity.Property(e => e.TeacherNum)
                .HasMaxLength(128)
                .HasComment("教師識別號");
            entity.Property(e => e.TeacherZhiJi)
                .HasMaxLength(128)
                .HasComment("教師職級");
            entity.Property(e => e.TeacherZhuPinXiSuo)
                .HasMaxLength(256)
                .HasComment("教師主聘系所");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform402a>(entity =>
        {
            entity.ToTable("MForm_4_02A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Advisor).HasComment("開課教師-軍護教師及護理臨床教師-護理臨床指導教師");
            entity.Property(e => e.ChuPinXiSuo).HasComment("支援開課教師之主聘系所");
            entity.Property(e => e.Degree)
                .HasMaxLength(128)
                .HasComment("學制別");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改項目");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.JiShuAssocProf).HasComment("開課教師-專業技術教師-副教授");
            entity.Property(e => e.JiShuLecturer).HasComment("開課教師-專業技術教師-講師");
            entity.Property(e => e.JiShuPhD).HasComment("開課教師-專業技術教師-教授");
            entity.Property(e => e.JiShuTa)
                .HasComment("開課教師-專業技術教師-助理教授")
                .HasColumnName("JiShuTA");
            entity.Property(e => e.JiaoGuan).HasComment("開課教師-軍護教師及護理臨床教師-教官");
            entity.Property(e => e.Note).HasComment("修改註記");
            entity.Property(e => e.OpenDegree)
                .HasMaxLength(256)
                .HasComment("開課系所(限學院、學位學程)");
            entity.Property(e => e.Rn)
                .HasComment("開課教師-軍護教師及護理臨床教師-部派護理老師")
                .HasColumnName("RN");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼");
            entity.Property(e => e.XianZhiAssocProf).HasComment("開課教師-專任現職教師-副教授");
            entity.Property(e => e.XianZhiJiang).HasComment("開課教師-專任現職教師-講座或客座教授");
            entity.Property(e => e.XianZhiJiuZhiTa)
                .HasComment("開課教師-專任現職教師--舊制助教")
                .HasColumnName("XianZhiJiuZhiTA");
            entity.Property(e => e.XianZhiLecturer).HasComment("開課教師-專任現職教師--講師");
            entity.Property(e => e.XianZhiPhD).HasComment("開課教師-專任現職教師-教授");
            entity.Property(e => e.XianZhiTa)
                .HasComment("開課教師-專任現職教師-助理教授")
                .HasColumnName("XianZhiTA");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Mform501>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_5_01");

            entity.Property(e => e.學校名稱).HasMaxLength(128);
            entity.Property(e => e.校基庫代碼).HasMaxLength(16);
            entity.Property(e => e.系所代碼).HasMaxLength(16);
            entity.Property(e => e.系所名稱).HasMaxLength(128);
        });

        modelBuilder.Entity<Mform502>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_5_02");

            entity.Property(e => e.學校名稱).HasMaxLength(128);
            entity.Property(e => e.學程學院名稱).HasMaxLength(128);
            entity.Property(e => e.校基庫代碼).HasMaxLength(16);
            entity.Property(e => e.系所代碼).HasMaxLength(16);
        });

        modelBuilder.Entity<MformR1>(entity =>
        {
            entity.ToTable("MForm_R_1");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedEnrollment)
                .HasComment("核定招生名額（C）")
                .HasColumnName("approvedEnrollment");
            entity.Property(e => e.Classification)
                .HasMaxLength(128)
                .HasComment("群別（對學校不顯示）");
            entity.Property(e => e.Degree)
                .HasMaxLength(128)
                .HasComment("學制");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasComment("系所領域別")
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("校基庫系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改註記");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.EditType)
                .HasMaxLength(32)
                .HasComment("修改項目(增加、修改(刪除))");
            entity.Property(e => e.GuanKongLeiName)
                .HasMaxLength(128)
                .HasComment("醫事管制類系科（對學校不顯示）");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱")
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼")
                .HasColumnName("schoolNum");
            entity.Property(e => e.Semester)
                .HasMaxLength(8)
                .HasComment("學期");
            entity.Property(e => e.StudentEnrollment)
                .HasComment("新生註冊人數（B）")
                .HasColumnName("studentEnrollment");
            entity.Property(e => e.StudentReserved)
                .HasComment("新生保留入學資格人數（A）")
                .HasColumnName("studentReserved");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<MformR1view>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_R_1View");

            entity.Property(e => e.ApprovedEnrollment)
                .HasComment("核定招生名額（C）")
                .HasColumnName("approvedEnrollment");
            entity.Property(e => e.Classification)
                .HasMaxLength(128)
                .HasComment("群別（對學校不顯示）");
            entity.Property(e => e.Degree)
                .HasMaxLength(128)
                .HasComment("學制");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasComment("系所領域別")
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("校基庫系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote)
                .HasMaxLength(512)
                .HasComment("修改註記");
            entity.Property(e => e.EditType)
                .HasMaxLength(32)
                .HasComment("修改項目(增加、修改(刪除))");
            entity.Property(e => e.GuanKongLeiName)
                .HasMaxLength(128)
                .HasComment("醫事管制類系科（對學校不顯示）");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasComment("PK");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱")
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼")
                .HasColumnName("schoolNum");
            entity.Property(e => e.Semester)
                .HasMaxLength(8)
                .HasComment("學期");
            entity.Property(e => e.StudentEnrollment)
                .HasComment("新生註冊人數（B）")
                .HasColumnName("studentEnrollment");
            entity.Property(e => e.StudentReserved)
                .HasComment("新生保留入學資格人數（A）")
                .HasColumnName("studentReserved");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<MformR2a>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_R_2A");

            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Semester).HasMaxLength(8);
        });

        modelBuilder.Entity<MformR2b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_R_2B");

            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Semester).HasMaxLength(8);
        });

        modelBuilder.Entity<MformR2c>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_R_2C");

            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Semester).HasMaxLength(8);
        });

        modelBuilder.Entity<MformR3>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_R_3");

            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Semester).HasMaxLength(8);
            entity.Property(e => e.Type)
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<MformR4>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_R_4");

            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<MformS01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_S_01");

            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(16);
        });

        modelBuilder.Entity<MformS02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_S_02");

            entity.Property(e => e.Na).HasMaxLength(128);
            entity.Property(e => e.Nu).HasMaxLength(16);
        });

        modelBuilder.Entity<MformS03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_S_03");

            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.代碼)
                .HasMaxLength(2)
                .IsUnicode(false);
        });

        modelBuilder.Entity<MformS03Compute>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_S_03_Compute");

            entity.Property(e => e.A1schoolNum)
                .HasMaxLength(16)
                .HasColumnName("A1SchoolNum");
            entity.Property(e => e.A1year).HasColumnName("A1Year");
            entity.Property(e => e.A2schoolNum)
                .HasMaxLength(16)
                .HasColumnName("A2SchoolNum");
            entity.Property(e => e.A2year).HasColumnName("A2Year");
            entity.Property(e => e.A3schoolNum)
                .HasMaxLength(16)
                .HasColumnName("A3SchoolNum");
            entity.Property(e => e.A3year).HasColumnName("A3Year");
            entity.Property(e => e.A4schoolNum)
                .HasMaxLength(16)
                .HasColumnName("A4SchoolNum");
            entity.Property(e => e.A4year).HasColumnName("A4Year");
            entity.Property(e => e.A5schoolNum)
                .HasMaxLength(16)
                .HasColumnName("A5SchoolNum");
            entity.Property(e => e.A5year).HasColumnName("A5Year");
            entity.Property(e => e.Aa16).HasColumnName("AA16");
            entity.Property(e => e.Ab16).HasColumnName("AB16");
            entity.Property(e => e.Ab17).HasColumnName("AB17");
            entity.Property(e => e.Ab18).HasColumnName("AB18");
            entity.Property(e => e.Ab21).HasColumnName("AB21");
            entity.Property(e => e.Ab22).HasColumnName("AB22");
            entity.Property(e => e.Ac16).HasColumnName("AC16");
            entity.Property(e => e.Ad16).HasColumnName("AD16");
            entity.Property(e => e.Ae16).HasColumnName("AE16");
            entity.Property(e => e.Ae17).HasColumnName("AE17");
            entity.Property(e => e.Ae18).HasColumnName("AE18");
            entity.Property(e => e.Ae21).HasColumnName("AE21");
            entity.Property(e => e.Ae22).HasColumnName("AE22");
            entity.Property(e => e.Af16).HasColumnName("AF16");
            entity.Property(e => e.Ag16).HasColumnName("AG16");
            entity.Property(e => e.Ah16).HasColumnName("AH16");
            entity.Property(e => e.Ah17).HasColumnName("AH17");
            entity.Property(e => e.Ah18).HasColumnName("AH18");
            entity.Property(e => e.Ah21).HasColumnName("AH21");
            entity.Property(e => e.Ah22).HasColumnName("AH22");
            entity.Property(e => e.Ai16).HasColumnName("AI16");
            entity.Property(e => e.Aj16).HasColumnName("AJ16");
            entity.Property(e => e.Ak16).HasColumnName("AK16");
            entity.Property(e => e.Ak17).HasColumnName("AK17");
            entity.Property(e => e.Ak18).HasColumnName("AK18");
            entity.Property(e => e.Ak21).HasColumnName("AK21");
            entity.Property(e => e.Ak22).HasColumnName("AK22");
            entity.Property(e => e.Al16).HasColumnName("AL16");
            entity.Property(e => e.Am16).HasColumnName("AM16");
            entity.Property(e => e.An16).HasColumnName("AN16");
            entity.Property(e => e.An17).HasColumnName("AN17");
            entity.Property(e => e.An18).HasColumnName("AN18");
            entity.Property(e => e.An21).HasColumnName("AN21");
            entity.Property(e => e.An22).HasColumnName("AN22");
            entity.Property(e => e.Ao16).HasColumnName("AO16");
            entity.Property(e => e.Ap16).HasColumnName("AP16");
            entity.Property(e => e.Aq16).HasColumnName("AQ16");
            entity.Property(e => e.Aq17).HasColumnName("AQ17");
            entity.Property(e => e.Aq18).HasColumnName("AQ18");
            entity.Property(e => e.Aq21).HasColumnName("AQ21");
            entity.Property(e => e.Aq22).HasColumnName("AQ22");
            entity.Property(e => e.Ar16).HasColumnName("AR16");
            entity.Property(e => e.As16).HasColumnName("AS16");
            entity.Property(e => e.B1schoolNum)
                .HasMaxLength(16)
                .HasColumnName("B1SchoolNum");
            entity.Property(e => e.B1year).HasColumnName("B1Year");
            entity.Property(e => e.B2schoolNum)
                .HasMaxLength(16)
                .HasColumnName("B2SchoolNum");
            entity.Property(e => e.B2year).HasColumnName("B2Year");
            entity.Property(e => e.B3schoolNum)
                .HasMaxLength(16)
                .HasColumnName("B3SchoolNum");
            entity.Property(e => e.B3year).HasColumnName("B3Year");
            entity.Property(e => e.B4schoolNum)
                .HasMaxLength(16)
                .HasColumnName("B4SchoolNum");
            entity.Property(e => e.B4year).HasColumnName("B4Year");
            entity.Property(e => e.B5schoolNum)
                .HasMaxLength(16)
                .HasColumnName("B5SchoolNum");
            entity.Property(e => e.B5year).HasColumnName("B5Year");
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.代碼a1)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼A1");
            entity.Property(e => e.代碼a2)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼A2");
            entity.Property(e => e.代碼a3)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼A3");
            entity.Property(e => e.代碼a4)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼A4");
            entity.Property(e => e.代碼a5)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼A5");
            entity.Property(e => e.代碼b1)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼B1");
            entity.Property(e => e.代碼b2)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼B2");
            entity.Property(e => e.代碼b3)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼B3");
            entity.Property(e => e.代碼b4)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼B4");
            entity.Property(e => e.代碼b5)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("代碼B5");
        });

        modelBuilder.Entity<MformS04>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_S_04");

            entity.Property(e => e.AllTeacherStudentRatioActual)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DayDivisionTeacherStudentRatioActual)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DbNum).HasMaxLength(32);
            entity.Property(e => e.MasterTeacherStudentRatioActual)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.NewTime國曆).HasColumnName("NewTime_國曆");
            entity.Property(e => e.NewTime西曆)
                .HasMaxLength(128)
                .HasColumnName("NewTime_西曆");
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(16);
            entity.Property(e => e.Taactual)
                .HasMaxLength(31)
                .IsUnicode(false)
                .HasColumnName("TAActual");
            entity.Property(e => e.Tastandard)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("TAStandard");
            entity.Property(e => e.Tos)
                .HasMaxLength(128)
                .HasColumnName("TOS");
        });

        modelBuilder.Entity<MformT01a>(entity =>
        {
            entity.ToTable("MForm_T_01A");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Asy)
                .HasComment("增設停招年度")
                .HasColumnName("ASY");
            entity.Property(e => e.CategyDepartment)
                .HasMaxLength(512)
                .HasComment("系所類別");
            entity.Property(e => e.CategyDepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所類別代碼");
            entity.Property(e => e.DeferGraeutionCollege).HasComment("延畢人數-扣除全年校外實習-日間五專");
            entity.Property(e => e.DeferGraeutionDegree).HasComment("延畢人數-扣除全年校外實習-日間學士班");
            entity.Property(e => e.DeferGraeutionJuniorCollege).HasComment("延畢人數-扣除全年校外實習-日間二專");
            entity.Property(e => e.DeferGraeutionMaster).HasComment("延畢人數-扣除全年校外實習-日間碩士班");
            entity.Property(e => e.DeferGraeutionNightDegree).HasComment("延畢人數-扣除全年校外實習-進修學士班");
            entity.Property(e => e.DeferGraeutionNightJuniorCollege).HasComment("延畢人數-扣除全年校外實習-進修二專");
            entity.Property(e => e.DeferGraeutionOtjmaster)
                .HasComment("延畢人數-扣除全年校外實習-碩士在職專班")
                .HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DeferGraeutionPhD).HasComment("延畢人數-扣除全年校外實習-博士班");
            entity.Property(e => e.DegreeAdvisor).HasComment("所系科教師數-護理臨床指導教師");
            entity.Property(e => e.DegreeAssocProf).HasComment("所系科教師數-現職副教授");
            entity.Property(e => e.DegreeLecturer).HasComment("所系科教師數-現職講師");
            entity.Property(e => e.DegreeProf).HasComment("所系科教師數-現職教授");
            entity.Property(e => e.DegreePtassocProf)
                .HasComment("所系科教師數-兼任副教授")
                .HasColumnName("DegreePTAssocProf");
            entity.Property(e => e.DegreePtlecturer)
                .HasComment("所系科教師數-兼任講師")
                .HasColumnName("DegreePTLecturer");
            entity.Property(e => e.DegreePtporf)
                .HasComment("所系科教師數-兼任教授")
                .HasColumnName("DegreePTPorf");
            entity.Property(e => e.DegreePtta)
                .HasComment("所系科教師數-兼任助教")
                .HasColumnName("DegreePTTA");
            entity.Property(e => e.DegreeRn)
                .HasComment("所系科教師數-部派護理老師")
                .HasColumnName("DegreeRN");
            entity.Property(e => e.DegreeTa)
                .HasComment("所系科教師數-現職助理教授")
                .HasColumnName("DegreeTA");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(512)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasComment("檢核及修正");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.InSchoolCollege).HasComment("在學學生數-扣除全年校外實習-日間五專");
            entity.Property(e => e.InSchoolDegree).HasComment("在學學生數-扣除全年校外實習-日間學士班");
            entity.Property(e => e.InSchoolJuniorCollege).HasComment("在學學生數-扣除全年校外實習-日間二專");
            entity.Property(e => e.InSchoolMaster).HasComment("在學學生數-扣除全年校外實習-日間碩士班");
            entity.Property(e => e.InSchoolNightDegree).HasComment("在學學生數-扣除全年校外實習-進修學士班");
            entity.Property(e => e.InSchoolNightJuniorCollege).HasComment("在學學生數-扣除全年校外實習-進修二專");
            entity.Property(e => e.InSchoolOtjmaster)
                .HasComment("在學學生數-扣除全年校外實習-碩士在職專班")
                .HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.InSchoolPhD).HasComment("在學學生數-扣除全年校外實習-博士班");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasComment("學校名稱")
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫代碼")
                .HasColumnName("schoolNum");
            entity.Property(e => e.Total)
                .HasComment("碩士班核定招生名額(日、夜合計)")
                .HasColumnName("total");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<MformT01a20180703>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_T_01A_20180703");

            entity.Property(e => e.Asy).HasColumnName("ASY");
            entity.Property(e => e.CategyDepartment).HasMaxLength(512);
            entity.Property(e => e.CategyDepartmentNum).HasMaxLength(16);
            entity.Property(e => e.DeferGraeutionOtjmaster).HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DegreePtassocProf).HasColumnName("DegreePTAssocProf");
            entity.Property(e => e.DegreePtlecturer).HasColumnName("DegreePTLecturer");
            entity.Property(e => e.DegreePtporf).HasColumnName("DegreePTPorf");
            entity.Property(e => e.DegreePtta).HasColumnName("DegreePTTA");
            entity.Property(e => e.DegreeRn).HasColumnName("DegreeRN");
            entity.Property(e => e.DegreeTa).HasColumnName("DegreeTA");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(512)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.InSchoolOtjmaster).HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Total).HasColumnName("total");
        });

        modelBuilder.Entity<MformT01a20180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_T_01A_20180706");

            entity.Property(e => e.Asy).HasColumnName("ASY");
            entity.Property(e => e.CategyDepartment).HasMaxLength(512);
            entity.Property(e => e.CategyDepartmentNum).HasMaxLength(16);
            entity.Property(e => e.DeferGraeutionOtjmaster).HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DegreePtassocProf).HasColumnName("DegreePTAssocProf");
            entity.Property(e => e.DegreePtlecturer).HasColumnName("DegreePTLecturer");
            entity.Property(e => e.DegreePtporf).HasColumnName("DegreePTPorf");
            entity.Property(e => e.DegreePtta).HasColumnName("DegreePTTA");
            entity.Property(e => e.DegreeRn).HasColumnName("DegreeRN");
            entity.Property(e => e.DegreeTa).HasColumnName("DegreeTA");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(512)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.InSchoolOtjmaster).HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Total).HasColumnName("total");
        });

        modelBuilder.Entity<MformT01b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_T_01B");

            entity.Property(e => e.Asy).HasColumnName("ASY");
            entity.Property(e => e.ConformOrNot)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.DbNum).HasMaxLength(32);
            entity.Property(e => e.DeferGraeutionOtjmaster).HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DegreePtassocProf).HasColumnName("DegreePTAssocProf");
            entity.Property(e => e.DegreePtlecturer).HasColumnName("DegreePTLecturer");
            entity.Property(e => e.DegreePtporf).HasColumnName("DegreePTPorf");
            entity.Property(e => e.DegreePtta).HasColumnName("DegreePTTA");
            entity.Property(e => e.DegreePttotal).HasColumnName("DegreePTTotal");
            entity.Property(e => e.DegreeRn).HasColumnName("DegreeRN");
            entity.Property(e => e.DegreeTa).HasColumnName("DegreeTA");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(512)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.InSchoolOtjmaster).HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.NewCategyDepartmentNum)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.NotConformItem)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum).HasMaxLength(32);
            entity.Property(e => e.TheActualProportionOfLecturer)
                .HasMaxLength(51)
                .IsUnicode(false);
            entity.Property(e => e.TheProportionOfFullTimeLecturersStandard)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.Total).HasColumnName("total");
        });

        modelBuilder.Entity<MformT02a>(entity =>
        {
            entity.ToTable("MForm_T_02A");

            entity.HasIndex(e => new { e.Year, e.SchoolNum }, "IX_MForm_T_02A_02");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Asy)
                .HasComment("增設停招年度")
                .HasColumnName("ASY");
            entity.Property(e => e.CategoryDepartment)
                .HasMaxLength(512)
                .HasComment("系所類別");
            entity.Property(e => e.CategoryDepartmentNum)
                .HasMaxLength(50)
                .HasComment("系所類別代碼");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(512)
                .HasComment("學程、學院名稱");
            entity.Property(e => e.DeferGraeutionCollege).HasComment("延畢人數-扣除全年校外實習(本學程)-日間五專");
            entity.Property(e => e.DeferGraeutionDegree).HasComment("延畢人數-扣除全年校外實習(本學程)-日間學士班");
            entity.Property(e => e.DeferGraeutionJuniorCollege).HasComment("延畢人數-扣除全年校外實習(本學程)-日間二專");
            entity.Property(e => e.DeferGraeutionMaster).HasComment("延畢人數-扣除全年校外實習(本學程)-日間碩士班");
            entity.Property(e => e.DeferGraeutionNightDegree).HasComment("延畢人數-扣除全年校外實習(本學程)-進修學士班");
            entity.Property(e => e.DeferGraeutionNightJuniorCollege).HasComment("延畢人數-扣除全年校外實習(本學程)-進修二專");
            entity.Property(e => e.DeferGraeutionOtjmaster)
                .HasComment("延畢人數-扣除全年校外實習(本學程)-碩士在職專班")
                .HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DeferGraeutionPhD).HasComment("延畢人數-扣除全年校外實習(本學程)-博士班");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(50)
                .HasComment("系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditNote).HasComment("檢核修正註記");
            entity.Property(e => e.EditTime)
                .HasComment("修改時間")
                .HasColumnType("datetime");
            entity.Property(e => e.EmployTeacherNum).HasComment("本學程主聘教師數");
            entity.Property(e => e.InSchoolCollege).HasComment("在學學生數-扣除全年校外實習(本學程)-日間五專");
            entity.Property(e => e.InSchoolDegree).HasComment("在學學生數-扣除全年校外實習(本學程)-日間學士班");
            entity.Property(e => e.InSchoolJuniorCollege).HasComment("在學學生數-扣除全年校外實習(本學程)-日間二專");
            entity.Property(e => e.InSchoolMaster).HasComment("在學學生數-扣除全年校外實習(本學程)-日間碩士班");
            entity.Property(e => e.InSchoolNightDegree).HasComment("在學學生數-扣除全年校外實習(本學程)-進修學士班");
            entity.Property(e => e.InSchoolNightJuniorCollege).HasComment("在學學生數-扣除全年校外實習(本學程)-進修二專");
            entity.Property(e => e.InSchoolOtjmaster)
                .HasComment("在學學生數-扣除全年校外實習(本學程)-碩士在職專班")
                .HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.InSchoolPhD).HasComment("在學學生數-扣除全年校外實習(本學程)-博士班");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasComment("學校名稱")
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .IsFixedLength()
                .HasComment("校基庫代碼")
                .HasColumnName("schoolNum");
            entity.Property(e => e.SupportAdvisor).HasComment("支援開課教師人數(含本學程主聘)-護理臨床指導教師");
            entity.Property(e => e.SupportAssocProf).HasComment("支援開課教師人數(含本學程主聘)-現職副教授");
            entity.Property(e => e.SupportDeferTotal).HasComment("支援開辦支系所-延畢生總計");
            entity.Property(e => e.SupportLecturer).HasComment("支援開課教師人數(含本學程主聘)-現職講師");
            entity.Property(e => e.SupportOpen).HasComment("支援開辦之系所");
            entity.Property(e => e.SupportProf).HasComment("支援開課教師人數(含本學程主聘)-現職教授");
            entity.Property(e => e.SupportRn)
                .HasComment("支援開課教師人數(含本學程主聘)-部派護理老師")
                .HasColumnName("SupportRN");
            entity.Property(e => e.SupportStudentTotal).HasComment("支援開辦支系所-在學學生數總計");
            entity.Property(e => e.SupportTa)
                .HasComment("支援開課教師人數(含本學程主聘)-現職助理教授")
                .HasColumnName("SupportTA");
            entity.Property(e => e.SupportTeacherTotal).HasComment("支援開辦支系所-專任教師總計");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<MformT02a20180703>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_T_02A_20180703");

            entity.Property(e => e.Asy).HasColumnName("ASY");
            entity.Property(e => e.CategoryDepartment).HasMaxLength(512);
            entity.Property(e => e.CategoryDepartmentNum).HasMaxLength(50);
            entity.Property(e => e.CollegeName).HasMaxLength(512);
            entity.Property(e => e.DeferGraeutionOtjmaster).HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(50)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.InSchoolOtjmaster).HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .IsFixedLength()
                .HasColumnName("schoolNum");
            entity.Property(e => e.SupportRn).HasColumnName("SupportRN");
            entity.Property(e => e.SupportTa).HasColumnName("SupportTA");
        });

        modelBuilder.Entity<MformT02a20180706>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MForm_T_02A_20180706");

            entity.Property(e => e.Asy).HasColumnName("ASY");
            entity.Property(e => e.CategoryDepartment).HasMaxLength(512);
            entity.Property(e => e.CategoryDepartmentNum).HasMaxLength(50);
            entity.Property(e => e.CollegeName).HasMaxLength(512);
            entity.Property(e => e.DeferGraeutionOtjmaster).HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(50)
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.InSchoolOtjmaster).HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .IsFixedLength()
                .HasColumnName("schoolNum");
            entity.Property(e => e.SupportRn).HasColumnName("SupportRN");
            entity.Property(e => e.SupportTa).HasColumnName("SupportTA");
        });

        modelBuilder.Entity<MformT02b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_T_02B");

            entity.Property(e => e.Asy)
                .HasMaxLength(256)
                .HasColumnName("ASY");
            entity.Property(e => e.CollegeName).HasMaxLength(128);
            entity.Property(e => e.ConformOrNot)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.DbNum).HasMaxLength(32);
            entity.Property(e => e.DeferGraeutionOtjmaster).HasColumnName("DeferGraeutionOTJMaster");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(50)
                .HasColumnName("departmentNum");
            entity.Property(e => e.InSchoolOtjmaster).HasColumnName("InSchoolOTJMaster");
            entity.Property(e => e.NewCategoryDepartmentNum)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.NotConformItem)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.PhdMasterStudentTeacherRatio)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .IsFixedLength()
                .HasColumnName("schoolNum");
            entity.Property(e => e.SupportRn).HasColumnName("SupportRN");
            entity.Property(e => e.SupportTa).HasColumnName("SupportTA");
            entity.Property(e => e.TheActualProportionOfLecturer)
                .HasMaxLength(51)
                .IsUnicode(false);
            entity.Property(e => e.TheProportionOfFullTimeLecturersStandard)
                .HasMaxLength(3)
                .IsUnicode(false);
        });

        modelBuilder.Entity<MformT03b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_T_03B");

            entity.Property(e => e.Asy).HasColumnName("ASY");
            entity.Property(e => e.ConformOrNot)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.DbNum).HasMaxLength(32);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(512)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(50)
                .HasColumnName("departmentNum");
            entity.Property(e => e.NewCategyDepartmentNum)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.NotConformItem)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.PhdMasterStudentTeacherRatio)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasColumnName("schoolName");
            entity.Property(e => e.TheActualProportionOfLecturer)
                .HasMaxLength(51)
                .IsUnicode(false);
            entity.Property(e => e.TheProportionOfFullTimeLecturersStandard)
                .HasMaxLength(3)
                .IsUnicode(false);
        });

        modelBuilder.Entity<MformT04b>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("MForm_T_04B");

            entity.Property(e => e.CurrentYear).HasColumnName("currentYear");
            entity.Property(e => e.CurrentYearAsy)
                .HasMaxLength(256)
                .HasColumnName("currentYearASY");
            entity.Property(e => e.CurrentYearConformOrNot)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("currentYearConformOrNot");
            entity.Property(e => e.CurrentYearDbNum)
                .HasMaxLength(32)
                .HasColumnName("currentYearDbNum");
            entity.Property(e => e.CurrentYearEditNote).HasColumnName("currentYearEditNote");
            entity.Property(e => e.CurrentYearNewCategyDepartmentNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("currentYearNewCategyDepartmentNum");
            entity.Property(e => e.CurrentYearNotConformItem)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("currentYearNotConformItem");
            entity.Property(e => e.CurrentYearNumberOfFullTimeTeachersStandard).HasColumnName("currentYearNumberOfFullTimeTeachersStandard");
            entity.Property(e => e.CurrentYearPhdMasterStudentTeacherRatio)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("currentYearPhdMasterStudentTeacherRatio");
            entity.Property(e => e.CurrentYearStudentTeacherRatio).HasColumnName("currentYearStudentTeacherRatio");
            entity.Property(e => e.CurrentYearTheActualNumber).HasColumnName("currentYearTheActualNumber");
            entity.Property(e => e.CurrentYearTheActualProportionOfLecturer)
                .HasMaxLength(51)
                .IsUnicode(false)
                .HasColumnName("currentYearTheActualProportionOfLecturer");
            entity.Property(e => e.CurrentYearTheProportionOfFullTimeLecturersStandard)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("currentYearTheProportionOfFullTimeLecturersStandard");
            entity.Property(e => e.CurrentYeardepartmentName)
                .HasMaxLength(128)
                .HasColumnName("currentYeardepartmentName");
            entity.Property(e => e.CurrentYeardepartmentNum)
                .HasMaxLength(50)
                .HasColumnName("currentYeardepartmentNum");
            entity.Property(e => e.CurrentYearschoolName)
                .HasMaxLength(128)
                .HasColumnName("currentYearschoolName");
            entity.Property(e => e.LastYear).HasColumnName("lastYear");
            entity.Property(e => e.LastYearAsy)
                .HasMaxLength(256)
                .HasColumnName("lastYearASY");
            entity.Property(e => e.LastYearConformOrNot)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("lastYearConformOrNot");
            entity.Property(e => e.LastYearEditNote).HasColumnName("lastYearEditNote");
            entity.Property(e => e.LastYearNewCategyDepartmentNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("lastYearNewCategyDepartmentNum");
            entity.Property(e => e.LastYearNotConformItem)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("lastYearNotConformItem");
            entity.Property(e => e.LastYearNumberOfFullTimeTeachersStandard).HasColumnName("lastYearNumberOfFullTimeTeachersStandard");
            entity.Property(e => e.LastYearPhdMasterStudentTeacherRatio)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("lastYearPhdMasterStudentTeacherRatio");
            entity.Property(e => e.LastYearStudentTeacherRatio).HasColumnName("lastYearStudentTeacherRatio");
            entity.Property(e => e.LastYearTheActualNumber).HasColumnName("lastYearTheActualNumber");
            entity.Property(e => e.LastYearTheActualProportionOfLecturer)
                .HasMaxLength(51)
                .IsUnicode(false)
                .HasColumnName("lastYearTheActualProportionOfLecturer");
            entity.Property(e => e.LastYearTheProportionOfFullTimeLecturersStandard)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("lastYearTheProportionOfFullTimeLecturersStandard");
            entity.Property(e => e.LastYeardepartmentName)
                .HasMaxLength(128)
                .HasColumnName("lastYeardepartmentName");
            entity.Property(e => e.LastYeardepartmentNum)
                .HasMaxLength(50)
                .HasColumnName("lastYeardepartmentNum");
            entity.Property(e => e.TwoYearNotConformItem)
                .HasMaxLength(7)
                .IsUnicode(false);
        });

        modelBuilder.Entity<MschoolCtrl001>(entity =>
        {
            entity.ToTable("MSchoolCtrl001");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Address)
                .HasMaxLength(512)
                .HasComment("地址");
            entity.Property(e => e.CityArea)
                .HasMaxLength(128)
                .HasComment("縣市別");
            entity.Property(e => e.DbNum)
                .HasMaxLength(32)
                .HasComment("校碼");
            entity.Property(e => e.Note)
                .HasMaxLength(512)
                .HasComment("備註");
            entity.Property(e => e.Pap)
                .HasMaxLength(128)
                .HasComment("公私立public and private")
                .HasColumnName("PAP");
            entity.Property(e => e.RecentTime)
                .HasMaxLength(128)
                .HasComment("最近一次改名、改制時間");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("校名");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(32)
                .HasComment("資料庫代碼");
            entity.Property(e => e.Tos)
                .HasMaxLength(128)
                .HasComment("校院類型tapes of school")
                .HasColumnName("TOS");
        });

        modelBuilder.Entity<Mstate001>(entity =>
        {
            entity.ToTable("MState001");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Type).HasMaxLength(32);
        });

        modelBuilder.Entity<Nform000>(entity =>
        {
            entity.ToTable("NForm000", tb => tb.HasTrigger("TR_NForm000_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者Id");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("記錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EduNote).HasComment("教育部備註");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校ID");
            entity.Property(e => e.SchoolNote).HasComment("學校備註");
            entity.Property(e => e.State001Id).HasComment("FK State001 狀態Id");
            entity.Property(e => e.TotalNote).HasComment("總量備註");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年度");
        });

        modelBuilder.Entity<Nform000State001SchoolCtrl001>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("NForm000_State001_SchoolCtrl001");

            entity.Property(e => e.EduNote).HasColumnType("text");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNote).HasColumnType("text");
            entity.Property(e => e.StateName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.StatePhase)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.TotalNote).HasColumnType("text");
        });

        modelBuilder.Entity<Nform001>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_F_FormB");

            entity.ToTable("NForm001", tb => tb.HasTrigger("TR_NForm001_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ABoShiBanJqs)
                .HasComment("博士班")
                .HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs)
                .HasComment("碩士班")
                .HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs)
                .HasComment("碩士在職專班")
                .HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.BErJiJinXiuBuJqs)
                .HasComment("二技進修部")
                .HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs)
                .HasComment("進修學院")
                .HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs)
                .HasComment("二技日間部")
                .HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs)
                .HasComment("四技進修部")
                .HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs)
                .HasComment("四技日間部高職")
                .HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs)
                .HasComment("四技日間部原內高中生")
                .HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs)
                .HasComment("四技日間部原外加高中生")
                .HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs)
                .HasComment("四技在職專班")
                .HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs)
                .HasComment("二專進修專校")
                .HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs)
                .HasComment("二專日間部")
                .HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs)
                .HasComment("二專夜間部")
                .HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs)
                .HasComment("二專在職專班")
                .HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs)
                .HasComment("五專")
                .HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK  SchoolCtrl001Id 學校代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年度");
        });

        modelBuilder.Entity<Nform002>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_F_FormBhistory");

            entity.ToTable("NForm002", tb => tb.HasTrigger("TR_NForm002_Modify"));

            entity.HasIndex(e => new { e.Year, e.SchoolCtrl001Id }, "IX_NForm002_02");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ABoShiBanJqs)
                .HasComment("博士班")
                .HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs)
                .HasComment("碩士班")
                .HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs)
                .HasComment("碩士在職專班")
                .HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.BErJiJinXiuBuJqs)
                .HasComment("二技進修部")
                .HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs)
                .HasComment("進修學院")
                .HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs)
                .HasComment("二技日間部")
                .HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs)
                .HasComment("四技進修部")
                .HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs)
                .HasComment("四技日間部高職")
                .HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs)
                .HasComment("四技日間部原內高中生")
                .HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs)
                .HasComment("四技日間部原外加高中生")
                .HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs)
                .HasComment("四技在職專班")
                .HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs)
                .HasComment("二專進修專校")
                .HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs)
                .HasComment("二專日間部")
                .HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs)
                .HasComment("二專夜間部")
                .HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs)
                .HasComment("二專在職專班")
                .HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs)
                .HasComment("五專")
                .HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.DocNum)
                .HasMaxLength(128)
                .HasComment("核定文號");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK  SchoolCtrl001Id 學校代碼");
            entity.Property(e => e.State004Id).HasComment("FK State004Id 調整類型");
            entity.Property(e => e.UserNote).HasComment("備註");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年度");
        });

        modelBuilder.Entity<Nform002State004>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("NForm002_State004");

            entity.Property(e => e.ABoShiBanJqs).HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs).HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs).HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs).HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.Category).HasMaxLength(16);
            entity.Property(e => e.CategoryName).HasMaxLength(256);
            entity.Property(e => e.DocNum).HasMaxLength(128);
            entity.Property(e => e.Nform002Id).HasColumnName("NForm002Id");
            entity.Property(e => e.UserNote).HasColumnType("text");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<Nform003>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_F_FormB_history");

            entity.ToTable("NForm003", tb => tb.HasTrigger("TR_NForm003_Modify"));

            entity.HasIndex(e => new { e.Year, e.SchoolCtrl001Id }, "IX_NForm003_02");

            entity.Property(e => e.Id).HasComment("Pk");
            entity.Property(e => e.ABoShiBanJqs)
                .HasComment("博士班")
                .HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs)
                .HasComment("碩士班")
                .HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs)
                .HasComment("碩士在職專班")
                .HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.BErJiJinXiuBuJqs)
                .HasComment("二技進修部")
                .HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs)
                .HasComment("進修學院")
                .HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs)
                .HasComment("二技日間部")
                .HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs)
                .HasComment("四技進修部")
                .HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs)
                .HasComment("四技日間部高職")
                .HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs)
                .HasComment("四技日間部原內高中生")
                .HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs)
                .HasComment("四技日間部原外加高中生")
                .HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs)
                .HasComment("四技在職專班")
                .HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs)
                .HasComment("二專進修專校")
                .HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs)
                .HasComment("二專日間部")
                .HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs)
                .HasComment("二專夜間部")
                .HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs)
                .HasComment("二專在職專班")
                .HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs)
                .HasComment("五專")
                .HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.DocNum)
                .HasMaxLength(128)
                .HasComment("核定文號");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK  SchoolCtrl001Id 學校代碼");
            entity.Property(e => e.State004Id).HasComment("FK State004Id 調整類型");
            entity.Property(e => e.UserNote).HasComment("備註");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年度");
        });

        modelBuilder.Entity<Nform003State004>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("NForm003_State004");

            entity.Property(e => e.ABoShiBanJqs).HasColumnName("A_BoShiBanJQS");
            entity.Property(e => e.AShuoShiBanJqs).HasColumnName("A_ShuoShiBanJQS");
            entity.Property(e => e.AShuoShiZaiZhiZhuanBanJqs).HasColumnName("A_ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.BErJiJinXiuBuJqs).HasColumnName("B_ErJiJinXiuBuJQS");
            entity.Property(e => e.BErJiJinXiuXueYuanJqs).HasColumnName("B_ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.BErJiRiJianBuJqs).HasColumnName("B_ErJiRiJianBuJQS");
            entity.Property(e => e.BSiJiJinXiuBuJqs).HasColumnName("B_SiJiJinXiuBuJQS");
            entity.Property(e => e.BSiJiRiJianBuGauJrJqs).HasColumnName("B_SiJiRiJianBuGauJrJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanNeiGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanNeiGaoZhongShengJQS");
            entity.Property(e => e.BSiJiRiJianBuGauYuanWaiJiaGaoZhongShengJqs).HasColumnName("B_SiJiRiJianBuGauYuanWaiJiaGaoZhongShengJQS");
            entity.Property(e => e.BSiJiZaiZhiZhuanBanJqs).HasColumnName("B_SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.CErZhuanJinXiuZhuanXiaoJqs).HasColumnName("C_ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.CErZhuanRiJianBuJqs).HasColumnName("C_ErZhuanRiJianBuJQS");
            entity.Property(e => e.CErZhuanYeJianBuJqs).HasColumnName("C_ErZhuanYeJianBuJQS");
            entity.Property(e => e.CErZhuanZaiZhiZhuanBanJqs).HasColumnName("C_ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.CWuZhuanJqs).HasColumnName("C_WuZhuanJQS");
            entity.Property(e => e.Category).HasMaxLength(16);
            entity.Property(e => e.CategoryName).HasMaxLength(256);
            entity.Property(e => e.DocNum).HasMaxLength(128);
            entity.Property(e => e.Nform003Id).HasColumnName("NForm003Id");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<Nform004>(entity =>
        {
            entity.ToTable("NForm004", tb => tb.HasTrigger("TR_NForm004_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.BoShiBanJqs)
                .HasComment("博士班招生名額")
                .HasColumnName("BoShiBanJQS");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl004Id).HasComment("FK SchoolCtrl004 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform005>(entity =>
        {
            entity.ToTable("NForm005", tb => tb.HasTrigger("TR_NForm005_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl004Id).HasComment("FK SchoolCtrl004 ID 系所代碼");
            entity.Property(e => e.ShuoShiBanJqs)
                .HasComment("碩士班招生名額")
                .HasColumnName("ShuoShiBanJQS");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform006>(entity =>
        {
            entity.ToTable("NForm006", tb => tb.HasTrigger("TR_NForm006_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl004Id).HasComment("FK SchoolCtrl004 ID 系所代碼");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanJqs)
                .HasComment("碩士在職專班招生名額")
                .HasColumnName("ShuoShiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform007>(entity =>
        {
            entity.ToTable("NForm007", tb => tb.HasTrigger("TR_NForm007_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.SiJiJinXiuBuJqs)
                .HasComment("四技進修部招生名額")
                .HasColumnName("SiJiJinXiuBuJQS");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform008>(entity =>
        {
            entity.ToTable("NForm008", tb => tb.HasTrigger("TR_NForm008_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.SiJiZaiZhiZhuanBanJqs)
                .HasComment("四技在職專班招生名額")
                .HasColumnName("SiJiZaiZhiZhuanBanJQS");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform009>(entity =>
        {
            entity.ToTable("NForm009", tb => tb.HasTrigger("TR_NForm009_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiRiJianBuJqs)
                .HasComment("二技日間部招生名額")
                .HasColumnName("ErJiRiJianBuJQS");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform010>(entity =>
        {
            entity.ToTable("NForm010", tb => tb.HasTrigger("TR_NForm010_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiJinXiuBuJqs)
                .HasComment("二技進修部招生名額")
                .HasColumnName("ErJiJinXiuBuJQS");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform011>(entity =>
        {
            entity.ToTable("NForm011", tb => tb.HasTrigger("TR_NForm011_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiJinXiuXueYuanJqs)
                .HasComment("二技進修學院招生名額")
                .HasColumnName("ErJiJinXiuXueYuanJQS");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform012>(entity =>
        {
            entity.ToTable("NForm012", tb => tb.HasTrigger("TR_NForm012_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrShengJqsA)
                .HasComment("高職生_A招生名額")
                .HasColumnName("GauJrShengJQS_A");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform013>(entity =>
        {
            entity.ToTable("NForm013", tb => tb.HasTrigger("TR_NForm013_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiJosB1)
                .HasComment("高中生化工土木建築類_B1招生名額")
                .HasColumnName("GauJungShengHuaGungTuMuJianJuLeiJOS_B1");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform014>(entity =>
        {
            entity.ToTable("NForm014", tb => tb.HasTrigger("TR_NForm014_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengWuGauJrDueiYingLeiB2)
                .HasComment("無高職對應類科_B2招生名額")
                .HasColumnName("GauJungShengWuGauJrDueiYingLei_B2");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform015>(entity =>
        {
            entity.ToTable("NForm015", tb => tb.HasTrigger("TR_NForm015_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengHuLiLeiB3)
                .HasComment("護理類_B3招生名額")
                .HasColumnName("GauJungShengHuLiLei_B3");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform016>(entity =>
        {
            entity.ToTable("NForm016", tb => tb.HasTrigger("TR_NForm016_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungShengYaoXueYuWenLeiB4)
                .HasComment("藥學語文類_B4招生名額")
                .HasColumnName("GauJungShengYaoXueYuWenLei_B4");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform017>(entity =>
        {
            entity.ToTable("NForm017", tb => tb.HasTrigger("TR_NForm017_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
            entity.Property(e => e.YiBanWaiJiaMingAjqsC1)
                .HasComment("外加一般_C1招生名額")
                .HasColumnName("YiBanWaiJiaMingAJQS_C1");
        });

        modelBuilder.Entity<Nform018>(entity =>
        {
            entity.ToTable("NForm018", tb => tb.HasTrigger("TR_NForm018_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsC2)
                .HasComment("外加專班_C2招生名額")
                .HasColumnName("JuanKeWaiJiaMingAJQS_C2");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform019>(entity =>
        {
            entity.ToTable("NForm019", tb => tb.HasTrigger("TR_NForm019_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 ID 系所代碼");
            entity.Property(e => e.WuZhuanJqs)
                .HasComment("五專部招生名額")
                .HasColumnName("WuZhuanJQS");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform020>(entity =>
        {
            entity.ToTable("NForm020", tb => tb.HasTrigger("TR_NForm020_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanRiJianBuJqs)
                .HasComment("二專日間部招生名額")
                .HasColumnName("ErZhuanRiJianBuJQS");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform021>(entity =>
        {
            entity.ToTable("NForm021", tb => tb.HasTrigger("TR_NForm021_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanYeJianBuJqs)
                .HasComment("二專夜間部招生名額")
                .HasColumnName("ErZhuanYeJianBuJQS");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform022>(entity =>
        {
            entity.ToTable("NForm022", tb => tb.HasTrigger("TR_NForm022_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanJqs)
                .HasComment("二專在職專班招生名額")
                .HasColumnName("ErZhuanZaiZhiZhuanBanJQS");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform023>(entity =>
        {
            entity.ToTable("NForm023", tb => tb.HasTrigger("TR_NForm023_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoJqs)
                .HasComment("二專進修專校招生名額")
                .HasColumnName("ErZhuanJinXiuZhuanXiaoJQS");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform024>(entity =>
        {
            entity.ToTable("NForm024", tb => tb.HasTrigger("TR_NForm024_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrShengJqs)
                .HasComment("高職部招生名額")
                .HasColumnName("GauJrShengJQS");
            entity.Property(e => e.SchoolCtrl008Id).HasComment("FK SchoolCtrl008 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform025>(entity =>
        {
            entity.ToTable("NForm025", tb => tb.HasTrigger("TR_NForm025_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GuoJungShengJqs)
                .HasComment("國中部招生名額")
                .HasColumnName("GuoJungShengJQS");
            entity.Property(e => e.SchoolCtrl008Id).HasComment("FK SchoolCtrl008 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform026>(entity =>
        {
            entity.ToTable("NForm026", tb => tb.HasTrigger("TR_NForm026_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.Deposit).HasComment("寄存名額");
            entity.Property(e => e.DepositRecover).HasComment("寄存回復名額");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GuoShiauShengJqs)
                .HasComment("國小部招生名額")
                .HasColumnName("GuoShiauShengJQS");
            entity.Property(e => e.SchoolCtrl008Id).HasComment("FK SchoolCtrl008 ID 系所代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform027>(entity =>
        {
            entity.ToTable("NForm027", tb => tb.HasTrigger("TR_NForm027_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 大學系所代碼");
            entity.Property(e => e.ShuangGuiJqs)
                .HasComment("雙軌招生名額")
                .HasColumnName("ShuangGuiJQS");
            entity.Property(e => e.State003Id).HasComment("FK State003 ID 學制代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform028>(entity =>
        {
            entity.ToTable("NForm028", tb => tb.HasTrigger("TR_NForm028_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 ID 五專系所代碼");
            entity.Property(e => e.ShuangGuiJqs)
                .HasComment("雙軌招生名額")
                .HasColumnName("ShuangGuiJQS");
            entity.Property(e => e.State003Id).HasComment("FK State003 ID 學制代碼");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年期");
        });

        modelBuilder.Entity<Nform029>(entity =>
        {
            entity.ToTable("NForm029", tb => tb.HasTrigger("TR_NForm029_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasComment("專班名稱")
                .HasColumnName("className");
            entity.Property(e => e.DocNum)
                .HasMaxLength(128)
                .HasComment("教育部核定文號");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ProjectNum)
                .HasMaxLength(128)
                .HasComment("計畫編號");
            entity.Property(e => e.ProjectYear).HasComment("計畫核定學年度");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 ID 大學系所代碼");
            entity.Property(e => e.State003Id).HasComment("FK State003 ID 學制代碼");
            entity.Property(e => e.XiShouJqs)
                .HasComment("攜手計畫之招生名額")
                .HasColumnName("XiShouJQS");
            entity.Property(e => e.Year).HasComment("學年期");
        });

        modelBuilder.Entity<Nform030>(entity =>
        {
            entity.ToTable("NForm030", tb => tb.HasTrigger("TR_NForm030_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 填寫者");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasComment("專班名稱")
                .HasColumnName("className");
            entity.Property(e => e.DocNum)
                .HasMaxLength(128)
                .HasComment("教育部核定文號");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("紀錄時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ProjectNum)
                .HasMaxLength(128)
                .HasComment("計畫編號");
            entity.Property(e => e.ProjectYear).HasComment("計畫核定學年度");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 ID 五專系所代碼");
            entity.Property(e => e.State003Id).HasComment("FK State003 ID 學制代碼");
            entity.Property(e => e.XiShouJqs)
                .HasComment("攜手計畫之招生名額")
                .HasColumnName("XiShouJQS");
            entity.Property(e => e.Year).HasComment("學年期");
        });

        modelBuilder.Entity<Nform031>(entity =>
        {
            entity.ToTable("NForm031");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AreaName)
                .HasMaxLength(128)
                .HasComment("領域別");
            entity.Property(e => e.Classification)
                .HasMaxLength(128)
                .HasComment("群別");
            entity.Property(e => e.CurrentJqs)
                .HasMaxLength(128)
                .HasComment("既有學制")
                .HasColumnName("CurrentJQS");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("系所名稱")
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("校基庫系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.GuanKongLeiName)
                .HasMaxLength(128)
                .HasComment("醫事管制類系科");
            entity.Property(e => e.NewJqs)
                .HasMaxLength(128)
                .HasComment("開設學制")
                .HasColumnName("NewJQS");
            entity.Property(e => e.Results)
                .HasMaxLength(128)
                .HasComment("審核結果")
                .HasColumnName("results");
            entity.Property(e => e.Revision)
                .HasMaxLength(128)
                .HasComment("調整別")
                .HasColumnName("revision");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校")
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校碼")
                .HasColumnName("schoolNum");
            entity.Property(e => e.UserNote)
                .HasMaxLength(512)
                .HasComment("備註");
            entity.Property(e => e.Year).HasComment("學年度");
        });

        modelBuilder.Entity<Nform032>(entity =>
        {
            entity.ToTable("NForm032");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AgainDeposit)
                .HasComment("招生名額再次寄存(學校填寫)")
                .HasColumnName("againDeposit");
            entity.Property(e => e.Auth001Id).HasComment("創建者");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("創建時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl005Id).HasComment("FK SchoolCtrl005 Id 系所代碼");
            entity.Property(e => e.TolalShortfall)
                .HasComment("甄選管道招生名額缺額(總量填寫)")
                .HasColumnName("tolalShortfall");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年度");
        });

        modelBuilder.Entity<Nform032AgainDeposit>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("NForm032_AgainDeposit");

            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(128);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.GauJrShengAstate)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJrSheng_AState");
            entity.Property(e => e.GauJrShengJqsAAgainDeposit).HasColumnName("GauJrShengJQS_A_againDeposit");
            entity.Property(e => e.GauJrShengJqsATolalShortfall).HasColumnName("GauJrShengJQS_A_tolalShortfall");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.NewGauJrShengAdeposit).HasColumnName("newGauJrSheng_ADeposit");
            entity.Property(e => e.NewGauJrShengJqsA).HasColumnName("newGauJrShengJQS_A");
            entity.Property(e => e.OldGauJrShengJqsA).HasColumnName("oldGauJrShengJQS_A");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
        });

        modelBuilder.Entity<Nform033>(entity =>
        {
            entity.ToTable("NForm033");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AgainDeposit)
                .HasComment("招生名額再次寄存(學校填寫)")
                .HasColumnName("againDeposit");
            entity.Property(e => e.Auth001Id).HasComment("創建者");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("創建時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.SchoolCtrl007Id).HasComment("FK SchoolCtrl007 Id 系所代碼");
            entity.Property(e => e.TolalShortfall)
                .HasComment("甄選管道招生名額缺額(總量填寫)")
                .HasColumnName("tolalShortfall");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("學年度");
        });

        modelBuilder.Entity<Nform033AgainDeposit>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("NForm033_AgainDeposit");

            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.ErZhuanRiJianBuAgainDeposit).HasColumnName("ErZhuanRiJianBu_againDeposit");
            entity.Property(e => e.ErZhuanRiJianBuState)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ErZhuanRiJianBuTolalShortfall).HasColumnName("ErZhuanRiJianBu_tolalShortfall");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.JuanKeBuName).HasMaxLength(128);
            entity.Property(e => e.NewErZhuanRiJianBuDeposit).HasColumnName("newErZhuanRiJianBuDeposit");
            entity.Property(e => e.NewErZhuanRiJianBuDepositRecover).HasColumnName("newErZhuanRiJianBuDepositRecover");
            entity.Property(e => e.NewErZhuanRiJianBuJqs).HasColumnName("newErZhuanRiJianBuJQS");
            entity.Property(e => e.OldErZhuanRiJianBuJqs).HasColumnName("oldErZhuanRiJianBuJQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SumErZhuanRiJianBuDeposit).HasColumnName("sumErZhuanRiJianBuDeposit");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
        });

        modelBuilder.Entity<Nform034ClassSize>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("NForm034_ClassSize");

            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.Degree)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DivideClassInfo).HasMaxLength(20);
            entity.Property(e => e.Fpk)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasColumnName("FPK");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.Jqs).HasColumnName("JQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.TotalName)
                .HasMaxLength(128)
                .HasColumnName("totalName");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<Nform034ClassSizeManage>(entity =>
        {
            entity.ToTable("NForm034_ClassSizeManage");

            entity.Property(e => e.Degree).HasMaxLength(16);
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.DivideClassInfo).HasMaxLength(20);
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<NformAnnex7>(entity =>
        {
            entity.ToTable("NFormAnnex7");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.A1).HasMaxLength(50);
            entity.Property(e => e.A10).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A11).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A12).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A13).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A14).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A15).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A16).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A17).HasMaxLength(50);
            entity.Property(e => e.A18).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A19).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A2).HasMaxLength(50);
            entity.Property(e => e.A20).HasMaxLength(50);
            entity.Property(e => e.A21).HasMaxLength(50);
            entity.Property(e => e.A22).HasMaxLength(50);
            entity.Property(e => e.A23).HasMaxLength(50);
            entity.Property(e => e.A3).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A4).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A5).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A6).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A7).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.A8).HasMaxLength(50);
            entity.Property(e => e.A9).HasColumnType("decimal(6, 2)");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.B11).HasMaxLength(50);
            entity.Property(e => e.B13).HasMaxLength(50);
            entity.Property(e => e.B3).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.B9).HasMaxLength(50);
            entity.Property(e => e.C11).HasMaxLength(50);
            entity.Property(e => e.C12).HasMaxLength(50);
            entity.Property(e => e.C13).HasMaxLength(50);
            entity.Property(e => e.C14).HasMaxLength(50);
            entity.Property(e => e.C2).HasColumnType("decimal(6, 2)");
            entity.Property(e => e.C3).HasColumnType("decimal(6, 2)");
            entity.Property(e => e.C4).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.C5).HasColumnType("decimal(6, 2)");
            entity.Property(e => e.C6).HasColumnType("decimal(6, 2)");
            entity.Property(e => e.C7).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.C8).HasMaxLength(50);
            entity.Property(e => e.C9).HasMaxLength(50);
            entity.Property(e => e.CollegeName).HasMaxLength(50);
            entity.Property(e => e.DepartmentName).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(50);
            entity.Property(e => e.EductionSystemName).HasMaxLength(50);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(50)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum).HasColumnName("schoolNum");
            entity.Property(e => e.StatisticDepartmentNum).HasMaxLength(50);
            entity.Property(e => e.Tclnum).HasColumnName("TCLNum");
            entity.Property(e => e.TotalDepartmentNum).HasMaxLength(50);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<NformAnnex7Step1>(entity =>
        {
            entity.ToTable("NFormAnnex7_Step1");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.EducationSystemCode)
                .HasMaxLength(50)
                .HasComment("學制代碼");
            entity.Property(e => e.EducationSystemName)
                .HasMaxLength(50)
                .HasComment("總量學制");
            entity.Property(e => e.ExpansionRatio)
                .HasComment("擴充比率")
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("expansionRatio");
            entity.Property(e => e.ExternalWeighted)
                .HasComment("外加時學制加權")
                .HasColumnName("externalWeighted");
            entity.Property(e => e.NationalOrPrivate).HasMaxLength(50);
            entity.Property(e => e.SystemOne)
                .HasMaxLength(50)
                .HasComment("學制1");
            entity.Property(e => e.SystemTwo)
                .HasMaxLength(50)
                .HasComment("學制2");
            entity.Property(e => e.Weighted)
                .HasComment("生師比加權數")
                .HasColumnType("decimal(5, 2)");
        });

        modelBuilder.Entity<NformAnnex7Step12>(entity =>
        {
            entity.ToTable("NFormAnnex7_Step1_2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ExternalMinimum).HasComment("外加名額最少數");
            entity.Property(e => e.TeacherRatioStandard).HasComment("生師比值基準");
        });

        modelBuilder.Entity<NformAnnex7Step2>(entity =>
        {
            entity.ToTable("NFormAnnex7_Step2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.BoShiBanExist).HasComment("博士班學制是否存在");
            entity.Property(e => e.BoShiBanQuota)
                .HasMaxLength(50)
                .HasComment("博士班擴充名額");
            entity.Property(e => e.DepartmentName).HasMaxLength(50);
            entity.Property(e => e.ErJiJinXiuBuExist).HasComment("二技進修部學制是否存在");
            entity.Property(e => e.ErJiJinXiuBuQuota)
                .HasMaxLength(50)
                .HasComment("二技進修部擴充名額");
            entity.Property(e => e.ErJiJinXiuXueYuanExist).HasComment("進修學院學制是否存在");
            entity.Property(e => e.ErJiJinXiuXueYuanQuota)
                .HasMaxLength(50)
                .HasComment("進修學院擴充名額");
            entity.Property(e => e.ErJiRiJianBuExist).HasComment("二技日間部學制是否存在");
            entity.Property(e => e.ErJiRiJianBuQuota)
                .HasMaxLength(50)
                .HasComment("二技日間部擴充名額");
            entity.Property(e => e.GauJrShengAexist)
                .HasComment("四技日間部-高職生學制是否存在")
                .HasColumnName("GauJrSheng_AExist");
            entity.Property(e => e.GauJrShengAquota)
                .HasMaxLength(50)
                .HasComment("四技日間部-高職生擴充名額")
                .HasColumnName("GauJrSheng_AQuota");
            entity.Property(e => e.GauJungShengExist).HasComment("四技日間部-高中生學制是否存在");
            entity.Property(e => e.GauJungShengQuota)
                .HasMaxLength(50)
                .HasComment("四技日間部-高中生擴充名額");
            entity.Property(e => e.NformAnnex7A7)
                .HasComment("系所生師比値")
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("NFormAnnex7_A7");
            entity.Property(e => e.NformAnnex7C8)
                .HasMaxLength(50)
                .HasComment("最多可再外加名額數(加權後)")
                .HasColumnName("NFormAnnex7_C8");
            entity.Property(e => e.ShuoShiBanExist).HasComment("碩士班學制是否存在");
            entity.Property(e => e.ShuoShiBanQuota)
                .HasMaxLength(50)
                .HasComment("碩士班擴充名額");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanExist).HasComment("碩士在職專班學制是否存在");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanQuota)
                .HasMaxLength(50)
                .HasComment("碩士在職專班擴充名額");
            entity.Property(e => e.SiJiJinXiuBuExist).HasComment("四技進修部學制是否存在");
            entity.Property(e => e.SiJiJinXiuBuQuota)
                .HasMaxLength(50)
                .HasComment("四技進修部擴充名額");
            entity.Property(e => e.SiJiZaiZhiZhuanBanExist).HasComment("四技在職專班學制是否存在");
            entity.Property(e => e.SiJiZaiZhiZhuanBanQuota)
                .HasMaxLength(50)
                .HasComment("四技在職專班擴充名額");
            entity.Property(e => e.StateStep02)
                .HasDefaultValueSql("((1))")
                .HasColumnName("State_Step02");
        });

        modelBuilder.Entity<NformUpload>(entity =>
        {
            entity.ToTable("NFormUpload");

            entity.Property(e => e.Id).HasComment("PK 總量三階上傳 編碼");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid)
                .HasMaxLength(50)
                .HasComment("檔案實存名稱");
            entity.Property(e => e.FileName).HasComment("檔案名稱");
            entity.Property(e => e.FilePath).HasComment("檔案路徑");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasComment("學年度");
        });

        modelBuilder.Entity<Nlog>(entity =>
        {
            entity.ToTable("Nlog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ClientIp)
                .HasMaxLength(80)
                .HasColumnName("ClientIP");
            entity.Property(e => e.Detail).HasMaxLength(80);
            entity.Property(e => e.Host)
                .HasMaxLength(80)
                .HasColumnName("host");
            entity.Property(e => e.Level)
                .HasMaxLength(80)
                .HasColumnName("level");
            entity.Property(e => e.Logger)
                .HasMaxLength(80)
                .HasColumnName("logger");
            entity.Property(e => e.Message)
                .HasColumnType("text")
                .HasColumnName("message");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.Source)
                .HasMaxLength(80)
                .HasColumnName("source");
            entity.Property(e => e.Stacktrace)
                .HasMaxLength(80)
                .HasColumnName("stacktrace");
            entity.Property(e => e.TimeStamp)
                .HasColumnType("datetime")
                .HasColumnName("time_stamp");
            entity.Property(e => e.Type)
                .HasMaxLength(80)
                .HasColumnName("type");
            entity.Property(e => e.Username).HasMaxLength(128);
        });

        modelBuilder.Entity<Oe領域>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("OE領域");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.學制代碼).HasMaxLength(255);
            entity.Property(e => e.學制名稱).HasMaxLength(255);
            entity.Property(e => e.學期).HasMaxLength(255);
            entity.Property(e => e.學校名稱).HasMaxLength(255);
            entity.Property(e => e.學院名稱).HasMaxLength(255);
            entity.Property(e => e.系所名稱).HasMaxLength(255);
            entity.Property(e => e.系所類別).HasMaxLength(255);
            entity.Property(e => e.系所類別代碼).HasMaxLength(255);
            entity.Property(e => e.領域類型原oe)
                .HasMaxLength(255)
                .HasColumnName("領域類型(原OE)");
        });

        modelBuilder.Entity<OneExamine001>(entity =>
        {
            entity.ToTable("OneExamine001");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.EditAuth001Id)
                .HasComment("FK_Auth001 創建/編輯")
                .HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("創建/編輯時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Examine01Auth001Id).HasComment("FK_Auth001 審查委員01");
            entity.Property(e => e.Examine02Auth001Id).HasComment("FK_Auth001 審查委員02");
            entity.Property(e => e.Examine03Auth001Id).HasComment("FK_Auth001 審查委員03");
            entity.Property(e => e.Examine04Auth001Id).HasComment("FK_Auth001 審查委員04");
            entity.Property(e => e.Examine05Auth001Id).HasComment("FK_Auth001 審查委員05");
            entity.Property(e => e.ExamineState001).HasComment("審查進度狀態");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformId)
                .HasComment("FK_OneNFormId 一階表件編號")
                .HasColumnName("OneNFormId");
            entity.Property(e => e.OneNformTypeId)
                .HasComment("FK_OneNFormTypeId 一階表件分類")
                .HasColumnName("OneNFormTypeId");
            entity.Property(e => e.RecruitAuth001Id).HasComment("FK_Auth001 審查招集人");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SerialName)
                .HasMaxLength(200)
                .HasComment("序號，提供總量整理文件參考用，由總量人員決定&輸入");
        });

        modelBuilder.Entity<OneExamine002>(entity =>
        {
            entity.ToTable("OneExamine002");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.EditAuth001Id)
                .HasComment("FK_Auth001 創建/編輯")
                .HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("創建/編輯時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineContent11)
                .HasComment("開設理由、開設必要性")
                .HasColumnName("ExamineContent1_1");
            entity.Property(e => e.ExamineContent12).HasColumnName("ExamineContent1_2");
            entity.Property(e => e.ExamineContent13).HasColumnName("ExamineContent1_3");
            entity.Property(e => e.ExamineContent14).HasColumnName("ExamineContent1_4");
            entity.Property(e => e.ExamineContent15).HasColumnName("ExamineContent1_5");
            entity.Property(e => e.ExamineContent21)
                .HasComment("課程規劃")
                .HasColumnName("ExamineContent2_1");
            entity.Property(e => e.ExamineContent22).HasColumnName("ExamineContent2_2");
            entity.Property(e => e.ExamineContent23).HasColumnName("ExamineContent2_3");
            entity.Property(e => e.ExamineContent24).HasColumnName("ExamineContent2_4");
            entity.Property(e => e.ExamineContent25).HasColumnName("ExamineContent2_5");
            entity.Property(e => e.ExamineContent31)
                .HasComment("師資規劃")
                .HasColumnName("ExamineContent3_1");
            entity.Property(e => e.ExamineContent32).HasColumnName("ExamineContent3_2");
            entity.Property(e => e.ExamineContent33).HasColumnName("ExamineContent3_3");
            entity.Property(e => e.ExamineContent34).HasColumnName("ExamineContent3_4");
            entity.Property(e => e.ExamineContent35).HasColumnName("ExamineContent3_5");
            entity.Property(e => e.ExamineContent41)
                .HasComment("產學合作學術表現")
                .HasColumnName("ExamineContent4_1");
            entity.Property(e => e.ExamineContent42).HasColumnName("ExamineContent4_2");
            entity.Property(e => e.ExamineContent43).HasColumnName("ExamineContent4_3");
            entity.Property(e => e.ExamineContent44).HasColumnName("ExamineContent4_4");
            entity.Property(e => e.ExamineContent45).HasColumnName("ExamineContent4_5");
            entity.Property(e => e.ExamineContent51)
                .HasComment("圖書、儀器、設備與空間規劃")
                .HasColumnName("ExamineContent5_1");
            entity.Property(e => e.ExamineContent52).HasColumnName("ExamineContent5_2");
            entity.Property(e => e.ExamineContent53).HasColumnName("ExamineContent5_3");
            entity.Property(e => e.ExamineContent54).HasColumnName("ExamineContent5_4");
            entity.Property(e => e.ExamineContent55).HasColumnName("ExamineContent5_5");
            entity.Property(e => e.ExamineContent61)
                .HasComment("其他")
                .HasColumnName("ExamineContent6_1");
            entity.Property(e => e.ExamineContent62).HasColumnName("ExamineContent6_2");
            entity.Property(e => e.ExamineContent63).HasColumnName("ExamineContent6_3");
            entity.Property(e => e.ExamineContent64).HasColumnName("ExamineContent6_4");
            entity.Property(e => e.ExamineContent65).HasColumnName("ExamineContent6_5");
            entity.Property(e => e.ExamineContent71).HasColumnName("ExamineContent7_1");
            entity.Property(e => e.ExamineContent72).HasColumnName("ExamineContent7_2");
            entity.Property(e => e.ExamineContent73).HasColumnName("ExamineContent7_3");
            entity.Property(e => e.ExamineContent74).HasColumnName("ExamineContent7_4");
            entity.Property(e => e.ExamineContent75).HasColumnName("ExamineContent7_5");
            entity.Property(e => e.ExamineContentResult)
                .HasMaxLength(50)
                .HasComment("審查結果(推薦/不推薦)");
            entity.Property(e => e.ExamineContentTotal1)
                .HasComment("綜合審查意見/非碩士班增設時之審查意見欄位")
                .HasColumnName("ExamineContentTotal_1");
            entity.Property(e => e.ExamineContentTotal2).HasColumnName("ExamineContentTotal_2");
            entity.Property(e => e.ExamineContentTotal3).HasColumnName("ExamineContentTotal_3");
            entity.Property(e => e.ExamineContentTotal4).HasColumnName("ExamineContentTotal_4");
            entity.Property(e => e.ExamineContentTotal5).HasColumnName("ExamineContentTotal_5");
            entity.Property(e => e.ExamineDeadLine)
                .HasMaxLength(32)
                .HasComment("審查到期時間");
            entity.Property(e => e.ExamineFinishDate)
                .HasMaxLength(32)
                .HasComment("審查完成時間");
            entity.Property(e => e.ExamineNum).HasComment("1=審查招集人，2=審查委員");
            entity.Property(e => e.ExamineState002).HasComment("審查狀態");
            entity.Property(e => e.OneExamine001Id).HasComment("FK_OneExamine001Id 第一階段審查分配進度表 編號");
            entity.Property(e => e.WriterAuth001Id).HasComment("FK_Auth001 審查者");
        });

        modelBuilder.Entity<OneExamine002StateName>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneExamineStateName");

            entity.ToTable("OneExamine002StateName");

            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
        });

        modelBuilder.Entity<OneExamineExamineFormList>(entity =>
        {
            entity.ToTable("OneExamine_ExamineFormList");

            entity.Property(e => e.ExamineFormName).HasMaxLength(50);
        });

        modelBuilder.Entity<OneExamineFormTypeRelation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ExaminationFormTypeRelation");

            entity.ToTable("OneExamineFormTypeRelation");

            entity.Property(e => e.ExamineFormat).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.RecruitFormat).HasMaxLength(50);
        });

        modelBuilder.Entity<OneExamineRecruitFormList>(entity =>
        {
            entity.ToTable("OneExamine_RecruitFormList");

            entity.Property(e => e.RecriutFormName).HasMaxLength(50);
        });

        modelBuilder.Entity<OneForm000>(entity =>
        {
            entity.ToTable("OneForm000", tb => tb.HasTrigger("TR_OneForm000_Modify"));

            entity.Property(e => e.Id).HasComment("PK 一階申請書名稱 編碼");
            entity.Property(e => e.FormFileNum)
                .HasMaxLength(256)
                .HasComment("一階上傳檔案分類");
            entity.Property(e => e.FormName)
                .HasMaxLength(256)
                .HasComment("一階申請書名稱");
        });

        modelBuilder.Entity<OneForm001>(entity =>
        {
            entity.ToTable("OneForm001", tb => tb.HasTrigger("TR_OneForm001_Modify"));

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasComment("PK 表1 編碼");
            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasComment("申請聯絡人1")
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasComment("申請聯絡人2")
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasComment("申請聯絡人3")
                .HasColumnName("Applicant_3");
            entity.Property(e => e.C1).HasComment("全校日夜生師比值");
            entity.Property(e => e.C2).HasComment("全校日間生師比值");
            entity.Property(e => e.C3).HasComment("全校研究生生師比值");
            entity.Property(e => e.C4).HasComment("全校專任助理教授以上師資結構");
            entity.Property(e => e.DegreeName)
                .HasMaxLength(128)
                .HasComment("授予學位名稱");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasComment("E-mail1")
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasComment("E-mail2")
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasComment("E-mail3")
                .HasColumnName("Email_3");
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasComment("職稱/單位1")
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasComment("職稱/單位2")
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasComment("職稱/單位2")
                .HasColumnName("Job_3");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasComment("電話1")
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasComment("電話2")
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasComment("電話2")
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(128)
                .HasComment("表1計畫書 申請案名稱");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.SchoolCtrl002Id).HasComment("FK SchoolCtrl002 學院 編碼");
            entity.Property(e => e.State011Id).HasComment("FK State011 增設/申請類別 編碼");
            entity.Property(e => e.State012Id).HasComment("FK State012 招生學制 編碼");
            entity.Property(e => e.State013Id).HasComment("FK State013 建議送審類別 編碼");
            entity.Property(e => e.State014Id).HasComment("FK State014 本案是否曾申請過 編碼");
            entity.Property(e => e.State014Year)
                .HasMaxLength(128)
                .HasComment("本案曾申請未通過，前次申請之增設學年度");
            entity.Property(e => e.State015Id).HasComment("FK State015 系所類別 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm0011>(entity =>
        {
            entity.ToTable("OneForm001_1", tb => tb.HasTrigger("TR_OneForm001_1_Modify"));

            entity.Property(e => e.Id).HasComment("PK 獨立研究所 編碼");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("評鑑名稱");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("評鑑年度");
            entity.Property(e => e.C3)
                .HasMaxLength(128)
                .HasComment("評鑑結果");
            entity.Property(e => e.C4).HasComment("專任師資人數，教授");
            entity.Property(e => e.C5).HasComment("專任師資人數，副教授");
            entity.Property(e => e.C6).HasComment("專任師資人數，助理教授");
            entity.Property(e => e.OneForm001Id)
                .HasMaxLength(50)
                .HasComment("FK OneForm001 表1 編碼");
            entity.Property(e => e.State016Id).HasComment("FK State016 評鑑成績 編碼");
            entity.Property(e => e.State017Id).HasComment("FK State017 設立年限 編碼");
            entity.Property(e => e.State018Id).HasComment("是/否。申請時，碩士在職專班已設立");
            entity.Property(e => e.State018Year)
                .HasMaxLength(128)
                .HasComment("碩士在職專班/日間碩士班已設立滿?年");
        });

        modelBuilder.Entity<OneForm0012>(entity =>
        {
            entity.ToTable("OneForm001_2", tb => tb.HasTrigger("TR_OneForm001_2_Modify"));

            entity.Property(e => e.Id).HasComment("PK 系設立碩士班  編碼");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("評鑑名稱");
            entity.Property(e => e.C10).HasComment("專任師資人數，講師");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("評鑑年度");
            entity.Property(e => e.C3)
                .HasMaxLength(128)
                .HasComment("評鑑結果");
            entity.Property(e => e.C4)
                .HasMaxLength(128)
                .HasComment("日間碩士班名稱");
            entity.Property(e => e.C5)
                .HasMaxLength(128)
                .HasComment("系增設學年度");
            entity.Property(e => e.C6)
                .HasMaxLength(128)
                .HasComment("申請時已設立滿?年");
            entity.Property(e => e.C7).HasComment("專任師資人數，教授");
            entity.Property(e => e.C8).HasComment("專任師資人數，副教授");
            entity.Property(e => e.C9).HasComment("專任師資人數，助理教授");
            entity.Property(e => e.OneForm001Id)
                .HasMaxLength(50)
                .HasComment("FK OneForm001 表1 編碼");
            entity.Property(e => e.State016Id).HasComment("FK State016 評鑑成績 編碼");
            entity.Property(e => e.State017Id).HasComment("FK State017 設立年限 編碼");
        });

        modelBuilder.Entity<OneForm0013>(entity =>
        {
            entity.ToTable("OneForm001_3", tb => tb.HasTrigger("TR_OneForm001_3_Modify"));

            entity.Property(e => e.Id).HasComment("PK 碩士學位學程  編碼");
            entity.Property(e => e.C1).HasComment("專任師資人數，教授");
            entity.Property(e => e.C2).HasComment("專任師資人數，副教授");
            entity.Property(e => e.C3).HasComment("專任師資人數，助理教授");
            entity.Property(e => e.C4).HasComment("專任師資人數，講師");
            entity.Property(e => e.OneForm001Id)
                .HasMaxLength(50)
                .HasComment("FK OneForm001 表1 編碼");
            entity.Property(e => e.SupportNum).HasComment("支援開設之系所 數量");
        });

        modelBuilder.Entity<OneForm0013Support>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneForm001_3annex");

            entity.ToTable("OneForm001_3_support", tb => tb.HasTrigger("TR_OneForm001_3_support_Modify"));

            entity.Property(e => e.Id).HasComment("PK Form001_3_支援開設之系所資料");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("評鑑名稱");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("評鑑年度");
            entity.Property(e => e.C3)
                .HasMaxLength(128)
                .HasComment("評鑑結果");
            entity.Property(e => e.C4).HasComment("支援系所之專任師資人數，教授");
            entity.Property(e => e.C5).HasComment("支援系所之專任師資人數，副教授");
            entity.Property(e => e.C6).HasComment("支援系所之專任師資人數，助理教授");
            entity.Property(e => e.C7).HasComment("支援系所之專任師資人數，講師");
            entity.Property(e => e.OneForm0013id)
                .HasComment("FK 碩士學位學程之增設  編碼")
                .HasColumnName("OneForm001_3Id");
            entity.Property(e => e.SchoolCtrl004Id).HasComment("FK 支援開設之系所  編碼");
            entity.Property(e => e.State016Id).HasComment("FK State016 評鑑成績 編碼");
            entity.Property(e => e.State017Id).HasComment("FK State017 設立年限 編碼");
            entity.Property(e => e.State017Year)
                .HasMaxLength(128)
                .HasComment("碩士班設立學年度");
        });

        modelBuilder.Entity<OneForm0014>(entity =>
        {
            entity.ToTable("OneForm001_4", tb => tb.HasTrigger("TR_OneForm001_4_Modify"));

            entity.Property(e => e.Id).HasComment("PK 學院申請增設碩士班 編碼");
            entity.Property(e => e.C1).HasComment("專任師資人數，(A)教授");
            entity.Property(e => e.C2).HasComment("專任師資人數，(A)副教授");
            entity.Property(e => e.C3).HasComment("專任師資人數，(A)助理教授");
            entity.Property(e => e.C4).HasComment("專任師資人數，(A)講師");
            entity.Property(e => e.C5).HasComment("專任師資人數，(B)教授");
            entity.Property(e => e.C6).HasComment("專任師資人數，(B)副教授");
            entity.Property(e => e.C7).HasComment("專任師資人數，(B)助理教授");
            entity.Property(e => e.C8).HasComment("專任師資人數，(B)講師");
            entity.Property(e => e.OneForm001Id)
                .HasMaxLength(50)
                .HasComment("FK OneForm001 表1 編碼");
            entity.Property(e => e.SupportNum).HasComment("支援開設之系所 數量");
        });

        modelBuilder.Entity<OneForm0014Support>(entity =>
        {
            entity.ToTable("OneForm001_4_support", tb => tb.HasTrigger("TR_OneForm001_4_support_Modify"));

            entity.Property(e => e.Id).HasComment("PK Form001_4_支援開設之系所資料");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("評鑑名稱");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("評鑑年度");
            entity.Property(e => e.C3)
                .HasMaxLength(128)
                .HasComment("評鑑結果");
            entity.Property(e => e.OneForm0014id)
                .HasComment("FK 學院申請增設碩士班  編碼")
                .HasColumnName("OneForm001_4Id");
            entity.Property(e => e.SchoolCtrl004Id).HasComment("FK 支援開設之系所  編碼");
            entity.Property(e => e.State016Id).HasComment("FK 支援開設之系所  編碼");
            entity.Property(e => e.State017Id).HasComment("FK State017 設立年限 編碼");
            entity.Property(e => e.State017Year)
                .HasMaxLength(128)
                .HasComment("碩士班設立學年度");
        });

        modelBuilder.Entity<OneForm002>(entity =>
        {
            entity.ToTable("OneForm002", tb => tb.HasTrigger("TR_OneForm002_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表2 編碼");
            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasComment("申請聯絡人1")
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasComment("申請聯絡人2")
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasComment("申請聯絡人2")
                .HasColumnName("Applicant_3");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("本系所科系現有招生學制");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("本所系科增設之學年度");
            entity.Property(e => e.C3)
                .HasMaxLength(128)
                .HasComment("是。學年度");
            entity.Property(e => e.C4)
                .HasMaxLength(128)
                .HasComment("是。原名稱");
            entity.Property(e => e.C5)
                .HasMaxLength(128)
                .HasComment("評鑑學年度");
            entity.Property(e => e.C6)
                .HasMaxLength(128)
                .HasComment("評鑑名稱");
            entity.Property(e => e.C7)
                .HasMaxLength(128)
                .HasComment("評鑑結果");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasComment("E-mail1")
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasComment("E-mail2")
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasComment("E-mail3")
                .HasColumnName("Email_3");
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasComment("職稱/單位1")
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasComment("職稱/單位2")
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasComment("職稱/單位2")
                .HasColumnName("Job_3");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasComment("電話1")
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasComment("電話2")
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasComment("電話2")
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(128)
                .HasComment("表2計畫書 申請案名稱");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.State011Id).HasComment("申請別");
            entity.Property(e => e.State018Id).HasComment("最近三學年度（105~107學年度）是否曾核定改名、整併過");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm003>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneForm003_1");

            entity.ToTable("OneForm003", tb => tb.HasTrigger("TR_OneForm003_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表3編碼");
            entity.Property(e => e.C1).HasComment("申請學制名額");
            entity.Property(e => e.C2).HasComment("申請學制及名額，核定招生名額");
            entity.Property(e => e.C3).HasComment("現有招生規模");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("申請之所科系");
            entity.Property(e => e.E1).HasComment("現有在學學生總人數");
            entity.Property(e => e.E2).HasComment("申請增招之所系科之現有在學學生數");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.F1).HasComment("現在專任師資人數，教授");
            entity.Property(e => e.F2).HasComment("現在專任師資人數，副教授");
            entity.Property(e => e.F3).HasComment("現在專任師資人數，助理教授");
            entity.Property(e => e.F4).HasComment("現在專任師資人數，講師");
            entity.Property(e => e.G1).HasComment("申請時師生比值");
            entity.Property(e => e.G2).HasComment("師生比值，預估");
            entity.Property(e => e.H1).HasComment("擬增招／任一學制增設之既有學制註冊率，106核定招生名額");
            entity.Property(e => e.H10).HasComment("本所系科總註冊率，106核定招生名額");
            entity.Property(e => e.H11).HasComment("106新生註冊人數");
            entity.Property(e => e.H12).HasComment("106新生註冊率");
            entity.Property(e => e.H13).HasComment("105核定招生名額");
            entity.Property(e => e.H14).HasComment("105新生註冊人數");
            entity.Property(e => e.H15).HasComment("105新生註冊率");
            entity.Property(e => e.H16).HasComment("104核定招生名額");
            entity.Property(e => e.H17).HasComment("104新生註冊人數");
            entity.Property(e => e.H18).HasComment("104新生註冊率");
            entity.Property(e => e.H2).HasComment("106新生註冊人數");
            entity.Property(e => e.H3).HasComment("106新生註冊率");
            entity.Property(e => e.H4).HasComment("105核定招生名額");
            entity.Property(e => e.H5).HasComment("105新生註冊人數");
            entity.Property(e => e.H6).HasComment("105新生註冊率");
            entity.Property(e => e.H7).HasComment("104核定招生名額");
            entity.Property(e => e.H8).HasComment("104新生註冊人數");
            entity.Property(e => e.H9).HasComment("104新生註冊率");
            entity.Property(e => e.I1).HasComment("106證照考取率");
            entity.Property(e => e.I2).HasComment("105證照考取率");
            entity.Property(e => e.I3).HasComment("104證照考取率");
            entity.Property(e => e.J1)
                .HasMaxLength(128)
                .HasComment("評鑑學年度");
            entity.Property(e => e.J2)
                .HasMaxLength(128)
                .HasComment("評鑑名稱");
            entity.Property(e => e.J3)
                .HasMaxLength(128)
                .HasComment("評鑑結果");
            entity.Property(e => e.K1).HasComment("107學年度核定增招名額");
            entity.Property(e => e.K2).HasComment("106學年度核定增招名額");
            entity.Property(e => e.K3).HasComment("105學年度核定增招名額");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.State011Id1)
                .HasComment("FK State011 增設/申請類別 編碼")
                .HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2)
                .HasComment("FK State011 增設/申請類別 編碼")
                .HasColumnName("State011Id_2");
            entity.Property(e => e.State012Id1)
                .HasComment("FK State012 學制 編碼")
                .HasColumnName("State012Id_1");
            entity.Property(e => e.State012Id4)
                .HasComment("FK State012 學制 編碼 107學年度增招情形")
                .HasColumnName("State012Id_4");
            entity.Property(e => e.State012Id5)
                .HasComment("FK State012 學制 編碼 106學年度增招情形")
                .HasColumnName("State012Id_5");
            entity.Property(e => e.State012Id6)
                .HasComment("FK State012 學制 編碼 105學年度增招情形")
                .HasColumnName("State012Id_6");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm004>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneForm006");

            entity.ToTable("OneForm004", tb => tb.HasTrigger("TR_OneForm004_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表4 編碼");
            entity.Property(e => e.C1).HasComment("當學年度核定名額");
            entity.Property(e => e.C10).HasComment("停招後之學生就學配套措施-對尚未畢業學生之輔導與其他配套措施規劃：");
            entity.Property(e => e.C11).HasComment("原有師資調整計劃");
            entity.Property(e => e.C12).HasComment("停招名額之流用規劃");
            entity.Property(e => e.C13).HasComment("本所系科現有學制及核定招生名額-107學年度核定招生名額： 名");
            entity.Property(e => e.C14).HasComment("本所系科現有學制及核定招生名額-107學年度核定招生名額： 名");
            entity.Property(e => e.C15).HasComment("本所系科現有學制及核定招生名額-107學年度核定招生名額： 名");
            entity.Property(e => e.C16).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-106學年度，核定招生名額 名");
            entity.Property(e => e.C17).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-106學年度，新生註冊人數 人");
            entity.Property(e => e.C18).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-106學年度，新生註冊率 ％。");
            entity.Property(e => e.C19).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-105學年度，核定招生名額 名");
            entity.Property(e => e.C2).HasComment("停招理由");
            entity.Property(e => e.C20).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-105學年度，新生註冊人數 人");
            entity.Property(e => e.C21).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-105學年度，新生註冊率 ％。");
            entity.Property(e => e.C22).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-104學年度，核定招生名額 名");
            entity.Property(e => e.C23).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-104學年度，新生註冊人數 人");
            entity.Property(e => e.C24).HasComment("本所系科停招學制近三學年新生註冊率（小數點第一位四捨五入）-104學年度，新生註冊率 ％。");
            entity.Property(e => e.C25).HasComment("本所系科停招學制近三學年報名及錄取人數-106學年度，報名人數 名");
            entity.Property(e => e.C26).HasComment("本所系科停招學制近三學年報名及錄取人數-106學年度，錄取人數 名");
            entity.Property(e => e.C27).HasComment("本所系科停招學制近三學年報名及錄取人數-105學年度，報名人數 名");
            entity.Property(e => e.C28).HasComment("本所系科停招學制近三學年報名及錄取人數-105學年度，錄取人數 名");
            entity.Property(e => e.C29).HasComment("本所系科停招學制近三學年報名及錄取人數-104學年度，報名人數 名");
            entity.Property(e => e.C3).HasComment("停招符合條件-擬停招之學制系科:測驗中心已核准公告取消考科之系科。");
            entity.Property(e => e.C30).HasComment("本所系科停招學制近三學年報名及錄取人數-104學年度，錄取人數 名");
            entity.Property(e => e.C31).HasComment("105〜107學年度所系科停招核定情形");
            entity.Property(e => e.C32)
                .HasComment("會議日期")
                .HasColumnType("datetime");
            entity.Property(e => e.C33).HasComment("校內相關程序說明：");
            entity.Property(e => e.C4).HasComment("停招符合條件-擬停招之學制系科:該學制系科之招生人數大於（或相近）報名人數。");
            entity.Property(e => e.C5).HasComment("停招符合條件-擬停招之學制系科:系科停招之名額，調整於重點人才培育之系科，或與產學合作密切相關之系科。");
            entity.Property(e => e.C6).HasComment("已研提配套措施，不致影響師生權益-本校仍有其他具可替代性之招生管道、學制");
            entity.Property(e => e.C7).HasComment("已研提配套措施，不致影響師生權益-其他國立學校仍設有相近領域且具可替代性之學制系科");
            entity.Property(e => e.C8).HasComment("佐證說明");
            entity.Property(e => e.C9)
                .HasComment("日期")
                .HasColumnType("datetime");
            entity.Property(e => e.C99).HasComment("本所系科現有學制及核定招生名額");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(512)
                .HasComment("表4說明表申請案名稱");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.State012Id1)
                .HasMaxLength(128)
                .HasComment("本所系科現有學制及核定招生名額-學制:")
                .HasColumnName("State012Id_1");
            entity.Property(e => e.State012Id2)
                .HasMaxLength(128)
                .HasComment("本所系科現有學制及核定招生名額-學制:")
                .HasColumnName("State012Id_2");
            entity.Property(e => e.State012Id3)
                .HasMaxLength(128)
                .HasComment("本所系科現有學制及核定招生名額-學制:")
                .HasColumnName("State012Id_3");
            entity.Property(e => e.State018Id1)
                .HasComment("停招後之學生就學配套措施-是否已對停招所系科之學生妥善溝通與宣導:是/否")
                .HasColumnName("State018Id_1");
            entity.Property(e => e.State018Id2)
                .HasComment("校內審查及行政流程簡述-是否已經校務會議決議通過：是/否")
                .HasColumnName("State018Id_2");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm005>(entity =>
        {
            entity.ToTable("OneForm005", tb => tb.HasTrigger("TR_OneForm005_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表5 編碼");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("擬開設學制");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("所屬學院");
            entity.Property(e => e.C3).HasComment("校內相關領域系所");
            entity.Property(e => e.C4).HasComment("開設學位學程之全部支援系所");
            entity.Property(e => e.C5).HasComment("設立理由");
            entity.Property(e => e.C6).HasComment("發展重點及課程規劃");
            entity.Property(e => e.C7)
                .HasMaxLength(128)
                .HasComment("會議日期");
            entity.Property(e => e.C8).HasComment("校內相關程序說明");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(128)
                .HasComment("表2計畫書 申請案名稱");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.State011Id).HasComment("增設別");
            entity.Property(e => e.State018Id).HasComment("是否已經校務會議決議通過");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm006>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneForm006_1");

            entity.ToTable("OneForm006", tb => tb.HasTrigger("TR_OneForm006_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表6 編碼");
            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasComment("申請聯絡人1")
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasComment("申請聯絡人2")
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasComment("申請聯絡人3")
                .HasColumnName("Applicant_3");
            entity.Property(e => e.C1).HasComment("現有學制");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("增設之學年度");
            entity.Property(e => e.C3)
                .HasMaxLength(128)
                .HasComment("改名、整併學年度");
            entity.Property(e => e.C4)
                .HasMaxLength(128)
                .HasComment("改名、整併原名稱");
            entity.Property(e => e.C5)
                .HasMaxLength(128)
                .HasComment("評鑑學年度");
            entity.Property(e => e.C6)
                .HasMaxLength(128)
                .HasComment("評鑑名稱");
            entity.Property(e => e.C7)
                .HasMaxLength(128)
                .HasComment("評鑑結果");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasComment("E-mail1")
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasComment("E-mail2")
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasComment("E-mail3")
                .HasColumnName("Email_3");
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasComment("職稱/單位1")
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasComment("職稱/單位2")
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasComment("職稱/單位3")
                .HasColumnName("Job_3");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasComment("電話1")
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasComment("電話2")
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasComment("電話3")
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(128)
                .HasComment("申請案名稱");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.State011Id).HasComment("FK State011 增設/申請類別 編碼");
            entity.Property(e => e.State018Id).HasComment("FK State018 是否核定改名、整併");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm007>(entity =>
        {
            entity.ToTable("OneForm007", tb => tb.HasTrigger("TR_OneForm007_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表7 院所系科學位學程之「分組增設」、「部分學制增加分組」及「分組改名」申請清單 編碼");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("所系科分組 名稱");
            entity.Property(e => e.C10)
                .HasMaxLength(128)
                .HasComment("學年度之核定學制");
            entity.Property(e => e.C11)
                .HasMaxLength(128)
                .HasComment("分組擬 招生學制");
            entity.Property(e => e.C12).HasComment("申請理由、師資及課程規劃");
            entity.Property(e => e.C13)
                .HasMaxLength(128)
                .HasComment("所系科分組 名稱");
            entity.Property(e => e.C14)
                .HasMaxLength(128)
                .HasComment("學年度之核定學制");
            entity.Property(e => e.C15)
                .HasMaxLength(128)
                .HasComment("分組擬 招生學制");
            entity.Property(e => e.C16).HasComment("申請理由、師資及課程規劃");
            entity.Property(e => e.C17)
                .HasMaxLength(128)
                .HasComment("所系科分組 名稱");
            entity.Property(e => e.C18)
                .HasMaxLength(128)
                .HasComment("學年度之核定學制");
            entity.Property(e => e.C19)
                .HasMaxLength(128)
                .HasComment("分組擬 招生學制");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("學年度之核定學制");
            entity.Property(e => e.C20).HasComment("申請理由、師資及課程規劃");
            entity.Property(e => e.C21)
                .HasMaxLength(128)
                .HasComment("所系科分組 名稱");
            entity.Property(e => e.C22)
                .HasMaxLength(128)
                .HasComment("學年度之核定學制");
            entity.Property(e => e.C23)
                .HasMaxLength(128)
                .HasComment("分組擬 招生學制");
            entity.Property(e => e.C24).HasComment("申請理由、師資及課程規劃");
            entity.Property(e => e.C3)
                .HasMaxLength(128)
                .HasComment("分組擬 招生學制");
            entity.Property(e => e.C4).HasComment("申請理由、師資及課程規劃");
            entity.Property(e => e.C5)
                .HasMaxLength(128)
                .HasComment("所系科分組 名稱");
            entity.Property(e => e.C6)
                .HasMaxLength(128)
                .HasComment("學年度之核定學制");
            entity.Property(e => e.C7)
                .HasMaxLength(128)
                .HasComment("分組擬 招生學制");
            entity.Property(e => e.C8).HasComment("申請理由、師資及課程規劃");
            entity.Property(e => e.C9)
                .HasMaxLength(128)
                .HasComment("所系科分組 名稱");
            entity.Property(e => e.DepartmentName1)
                .HasMaxLength(128)
                .HasComment("第1案選填 所系科名稱")
                .HasColumnName("DepartmentName_1");
            entity.Property(e => e.DepartmentName2)
                .HasMaxLength(128)
                .HasComment("第2案選填 所系科名稱")
                .HasColumnName("DepartmentName_2");
            entity.Property(e => e.DepartmentName3)
                .HasMaxLength(128)
                .HasComment("第3案選填 所系科名稱")
                .HasColumnName("DepartmentName_3");
            entity.Property(e => e.DepartmentName4)
                .HasMaxLength(128)
                .HasComment("第4案選填 所系科名稱")
                .HasColumnName("DepartmentName_4");
            entity.Property(e => e.DepartmentName5)
                .HasMaxLength(128)
                .HasComment("第5案選填 所系科名稱")
                .HasColumnName("DepartmentName_5");
            entity.Property(e => e.DepartmentName6)
                .HasMaxLength(128)
                .HasComment("第6案選填 所系科名稱")
                .HasColumnName("DepartmentName_6");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.State011Id1)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_2");
            entity.Property(e => e.State011Id3)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_3");
            entity.Property(e => e.State011Id4)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_4");
            entity.Property(e => e.State011Id5)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_5");
            entity.Property(e => e.State011Id6)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_6");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm008>(entity =>
        {
            entity.ToTable("OneForm008", tb => tb.HasTrigger("TR_OneForm008_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表8 院所系科學位學程之「分組取消」及「部分學制取消分組」申請清單 編碼");
            entity.Property(e => e.C1)
                .HasMaxLength(128)
                .HasComment("分組名稱");
            entity.Property(e => e.C10)
                .HasMaxLength(128)
                .HasComment("分組名稱");
            entity.Property(e => e.C11)
                .HasMaxLength(128)
                .HasComment("取消分組之學制");
            entity.Property(e => e.C12).HasComment("申請理由及相關說明");
            entity.Property(e => e.C13)
                .HasMaxLength(128)
                .HasComment("分組名稱");
            entity.Property(e => e.C14)
                .HasMaxLength(128)
                .HasComment("取消分組之學制");
            entity.Property(e => e.C15).HasComment("申請理由及相關說明");
            entity.Property(e => e.C16)
                .HasMaxLength(128)
                .HasComment("分組名稱");
            entity.Property(e => e.C17)
                .HasMaxLength(128)
                .HasComment("取消分組之學制");
            entity.Property(e => e.C18).HasComment("申請理由及相關說明");
            entity.Property(e => e.C2)
                .HasMaxLength(128)
                .HasComment("取消分組之學制");
            entity.Property(e => e.C3).HasComment("申請理由及相關說明");
            entity.Property(e => e.C4)
                .HasMaxLength(128)
                .HasComment("分組名稱");
            entity.Property(e => e.C5)
                .HasMaxLength(128)
                .HasComment("取消分組之學制");
            entity.Property(e => e.C6).HasComment("申請理由及相關說明");
            entity.Property(e => e.C7)
                .HasMaxLength(128)
                .HasComment("分組名稱");
            entity.Property(e => e.C8)
                .HasMaxLength(128)
                .HasComment("取消分組之學制");
            entity.Property(e => e.C9).HasComment("申請理由及相關說明");
            entity.Property(e => e.DepartmentName1)
                .HasMaxLength(128)
                .HasComment("第1案必填 所系科名稱")
                .HasColumnName("DepartmentName_1");
            entity.Property(e => e.DepartmentName2)
                .HasMaxLength(128)
                .HasComment("第2案選填 所系科名稱")
                .HasColumnName("DepartmentName_2");
            entity.Property(e => e.DepartmentName3)
                .HasMaxLength(128)
                .HasComment("第3案選填 所系科名稱")
                .HasColumnName("DepartmentName_3");
            entity.Property(e => e.DepartmentName4)
                .HasMaxLength(128)
                .HasComment("第4案選填 所系科名稱")
                .HasColumnName("DepartmentName_4");
            entity.Property(e => e.DepartmentName5)
                .HasMaxLength(128)
                .HasComment("第5案選填 所系科名稱")
                .HasColumnName("DepartmentName_5");
            entity.Property(e => e.DepartmentName6)
                .HasMaxLength(128)
                .HasComment("第6案選填 所系科名稱")
                .HasColumnName("DepartmentName_6");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(50)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.State011Id1)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_2");
            entity.Property(e => e.State011Id3)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_3");
            entity.Property(e => e.State011Id4)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_4");
            entity.Property(e => e.State011Id5)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_5");
            entity.Property(e => e.State011Id6)
                .HasComment("FK State011 增設/申請類別/調整別 編碼")
                .HasColumnName("State011Id_6");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneForm009>(entity =>
        {
            entity.ToTable("OneForm009", tb => tb.HasTrigger("TR_OneForm009_Modify"));

            entity.Property(e => e.Id).HasComment("PK 表9 技專校院108學年度「非特殊項目之院系科學士學位學程之任一學制增設」申請案清單 編碼");
            entity.Property(e => e.C1).HasComment("擬增設之學制及\r\n招生名額");
            entity.Property(e => e.C2).HasComment("擬增設學制之招生名額來源\r\n或說明事項");
            entity.Property(e => e.C3)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasComment("107學年度\r\n核定學制");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(128)
                .HasComment("院系科學位學程名稱");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.OneFormUploadId)
                .HasMaxLength(128)
                .HasComment("FK 上傳pdf檔案 編碼");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneFormAnnex>(entity =>
        {
            entity.ToTable("OneFormAnnex", tb => tb.HasTrigger("TR_OneFormAnnex_Modify"));

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasComment("PK 附件&附表上傳 編碼");
            entity.Property(e => e.EditAuth001Id)
                .HasComment("FK 創建/修改者 編碼")
                .HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasComment("檔案名稱");
            entity.Property(e => e.OneForm000Id).HasComment("FK 一階表單名稱 編碼");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK 學校 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneFormState>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_FormState");

            entity.ToTable("OneFormState", tb => tb.HasTrigger("TR_OneFormState_Modify"));

            entity.Property(e => e.Id).HasComment("PK 一階表單狀態 編碼");
            entity.Property(e => e.FormStateName)
                .HasMaxLength(128)
                .HasComment("一階表單狀態 名稱");
        });

        modelBuilder.Entity<OneFormUpload>(entity =>
        {
            entity.ToTable("OneFormUpload", tb => tb.HasTrigger("TR_OneFormUpload_Modify"));

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasComment("PK 一階表單pdf上傳 編碼");
            entity.Property(e => e.EditAuth001Id)
                .HasComment("FK 創建/修改者 編碼")
                .HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasComment("檔案名稱");
            entity.Property(e => e.OneForm000Id).HasComment("FK 一階表單名稱 編碼");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK 學校 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneNformA01>(entity =>
        {
            entity.ToTable("OneNFormA01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantFax).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplicationCategory).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.CaseNameChinese).HasColumnName("CaseName_Chinese");
            entity.Property(e => e.CaseNameEnglish).HasColumnName("CaseName_English");
            entity.Property(e => e.CommitteeList).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DegreeName).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationUnit).HasMaxLength(50);
            entity.Property(e => e.EnrollmentPipeline).HasMaxLength(50);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.LastApplyCaseName).HasMaxLength(50);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OrderSerial).HasMaxLength(32);
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubField2).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.SuggestProfessoerName).HasMaxLength(50);
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherStructure).HasMaxLength(50);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformApplicaitonUpload>(entity =>
        {
            entity.ToTable("OneNFormApplicaitonUpload");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid).HasMaxLength(50);
            entity.Property(e => e.Year).HasMaxLength(32);
        });

        modelBuilder.Entity<OneNformB01>(entity =>
        {
            entity.ToTable("OneNFormB01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplyOption).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DegreeName).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Enrollment).HasMaxLength(50);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacher001).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher002).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher003).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher004).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher005).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher006).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal1).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal2).HasMaxLength(32);
            entity.Property(e => e.InServiceMasterEstablishedYear).HasMaxLength(32);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.MasterDayEstablishedYear).HasMaxLength(32);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SetUpFullYear)
                .HasMaxLength(32)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformB02>(entity =>
        {
            entity.ToTable("OneNFormB02");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplyOption).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.CaseName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment006).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DegreeName).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Enrollment).HasMaxLength(50);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacher001).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher002).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher003).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher004).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher005).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher006).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal1).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal2).HasMaxLength(32);
            entity.Property(e => e.InServiceMasterEstablishedYear).HasMaxLength(32);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.MasterDayEstablishedYear).HasMaxLength(32);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformB03>(entity =>
        {
            entity.ToTable("OneNFormB03");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人職稱");
            entity.Property(e => e.ApplicantMail)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人電子郵件");
            entity.Property(e => e.ApplicantName)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人姓名");
            entity.Property(e => e.ApplicantPhone)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人連絡電話");
            entity.Property(e => e.ApplyOption)
                .HasMaxLength(50)
                .HasComment("申請增設日間碩士班/碩士在職專班");
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName)
                .HasMaxLength(50)
                .HasComment("領域別");
            entity.Property(e => e.CaseName).HasComment("案名");
            entity.Property(e => e.College)
                .HasMaxLength(50)
                .HasComment("所屬學院");
            entity.Property(e => e.Comment001)
                .HasMaxLength(420)
                .HasComment("\"設立理由\r\n(200字)\"");
            entity.Property(e => e.Comment002)
                .HasMaxLength(420)
                .HasComment("\"發展定位\r\n(200字)\"");
            entity.Property(e => e.Comment003)
                .HasMaxLength(420)
                .HasComment("\"培育目標\r\n(200字)\"");
            entity.Property(e => e.Comment004)
                .HasMaxLength(420)
                .HasComment("\"課程規劃\r\n(200字)\"");
            entity.Property(e => e.Comment005)
                .HasMaxLength(420)
                .HasComment("\"畢業後就業方向\r\n(200字)\"");
            entity.Property(e => e.Comment006).HasComment("\"就業領域之目的事業主管機關\r\n(200字)\"");
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate)
                .HasMaxLength(50)
                .HasComment("校務會議日期");
            entity.Property(e => e.ConferenceExpectDate)
                .HasMaxLength(50)
                .HasComment("尚未經校務會議通過->預計會議日期");
            entity.Property(e => e.DegreeName)
                .HasMaxLength(50)
                .HasComment("授予學位名稱");
            entity.Property(e => e.DepartmentEstablishedTime)
                .HasMaxLength(32)
                .HasComment("系增設之學年度");
            entity.Property(e => e.DepartmentEstablishedYears)
                .HasMaxLength(32)
                .HasComment("系增設已滿滿_年");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(32)
                .HasComment("所屬系學類");
            entity.Property(e => e.EditAuth001)
                .HasComment("執行編輯之使用者id")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("執行編輯之時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Enrollment)
                .HasMaxLength(50)
                .HasComment("招生學制");
            entity.Property(e => e.EvaluationIsPassed).HasComment("是否有過評鑑結果");
            entity.Property(e => e.EvaluationName)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑名稱\"");
            entity.Property(e => e.EvaluationResult)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑結果\"");
            entity.Property(e => e.EvaluationYear)
                .HasMaxLength(32)
                .HasComment("\"評鑑成績\r\n評鑑年度\"");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName)
                .HasMaxLength(50)
                .HasComment("表單名稱");
            entity.Property(e => e.FullTimeTeacher001)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘教授");
            entity.Property(e => e.FullTimeTeacher002)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘教授");
            entity.Property(e => e.FullTimeTeacher003)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘副教授");
            entity.Property(e => e.FullTimeTeacher004)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘副教授");
            entity.Property(e => e.FullTimeTeacher005)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘助理教授");
            entity.Property(e => e.FullTimeTeacher006)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘助理教授");
            entity.Property(e => e.FullTimeTeacher007)
                .HasMaxLength(32)
                .HasComment("專任師資人數講師實聘");
            entity.Property(e => e.FullTimeTeacher008)
                .HasMaxLength(32)
                .HasComment("專任師資人數講師擬聘");
            entity.Property(e => e.FullTimeTeacherTotal1)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘合計");
            entity.Property(e => e.FullTimeTeacherTotal2)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘合計");
            entity.Property(e => e.IsFirstApply).HasComment("本案是否為第一次申請");
            entity.Property(e => e.IsPassed).HasComment("是否已經校務會議決議通過");
            entity.Property(e => e.LastApplyYear)
                .HasMaxLength(32)
                .HasComment("否>前次申請之增設學年度");
            entity.Property(e => e.MainField)
                .HasMaxLength(50)
                .HasComment("送審類別(主領域)");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位主管職稱");
            entity.Property(e => e.ManagerMail)
                .HasMaxLength(50)
                .HasComment("申請單位主管電子郵件");
            entity.Property(e => e.ManagerName)
                .HasMaxLength(50)
                .HasComment("申請單位主管姓名");
            entity.Property(e => e.ManagerPhone)
                .HasMaxLength(50)
                .HasComment("申請單位主管連絡電話");
            entity.Property(e => e.MasterDayEstablishedTime)
                .HasMaxLength(32)
                .HasComment("設立日間碩士班於_年");
            entity.Property(e => e.MasterDayEstablishedYears)
                .HasMaxLength(32)
                .HasComment("已設立滿_年");
            entity.Property(e => e.MasterDayName)
                .HasMaxLength(50)
                .HasComment("申請碩在職->已設立之日間碩士班名稱");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState)
                .HasComment("填報目前流程狀態")
                .HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum)
                .HasMaxLength(32)
                .HasComment("校務會議提案編號");
            entity.Property(e => e.RelatedDegreeData).HasComment("技專校院設有與本申請案名相關系所學位學程之參考資料");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField)
                .HasMaxLength(50)
                .HasComment("送審類別(副領域)");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001)
                .HasComment("全校日夜生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002)
                .HasComment("全校日間生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003)
                .HasComment("全校研究生生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasComment("全校專任助理教授以上師資結構(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasComment("年分")
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformB04>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneNFormB05");

            entity.ToTable("OneNFormB04");

            entity.Property(e => e.Id)
                .HasComment("")
                .HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人職稱");
            entity.Property(e => e.ApplicantMail)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人信箱");
            entity.Property(e => e.ApplicantName)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人姓名");
            entity.Property(e => e.ApplicantPhone)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人電話");
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName)
                .HasMaxLength(50)
                .HasComment("領域別");
            entity.Property(e => e.CaseName).HasComment("案名");
            entity.Property(e => e.College)
                .HasMaxLength(50)
                .HasComment("所屬學院");
            entity.Property(e => e.Comment001)
                .HasMaxLength(420)
                .HasComment("\"設立理由\r\n(200字)\"");
            entity.Property(e => e.Comment002)
                .HasMaxLength(420)
                .HasComment("\"發展定位\r\n(200字)\"");
            entity.Property(e => e.Comment003)
                .HasMaxLength(420)
                .HasComment("\"培育目標\r\n(200字)\"");
            entity.Property(e => e.Comment004)
                .HasMaxLength(420)
                .HasComment("\"課程規劃\r\n(200字)\"");
            entity.Property(e => e.Comment005)
                .HasMaxLength(420)
                .HasComment("\"畢業後就業方向\r\n(200字)\"");
            entity.Property(e => e.Comment006).HasComment("\"就業領域之目的事業主管機關\r\n(200字)\"");
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate)
                .HasMaxLength(50)
                .HasComment("校務會議日期");
            entity.Property(e => e.ConferenceExpectDate)
                .HasMaxLength(50)
                .HasComment("尚未經校務會議通過>預計會議日期");
            entity.Property(e => e.DegreeName)
                .HasMaxLength(50)
                .HasComment("授予學位名稱");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(32)
                .HasComment("所屬系學類");
            entity.Property(e => e.EditAuth001)
                .HasComment("執行編輯之使用者id")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("執行編輯之時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EmploymentAssistantProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師助理教授");
            entity.Property(e => e.EmploymentAssociateProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師副教授");
            entity.Property(e => e.EmploymentProfessor)
                .HasMaxLength(32)
                .HasComment("實聘專任教師教授");
            entity.Property(e => e.EmploymentSupportData).HasComment("實聘專任教師與實際於本碩士學位學程開課之總專任師資人數(格式:支援系所/教授Num/副教授Num/助理教授Num/合計Num)");
            entity.Property(e => e.EmploymentTotalNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師總數");
            entity.Property(e => e.Enrollment)
                .HasMaxLength(50)
                .HasComment("招生學制");
            entity.Property(e => e.EvaluationIsPassed).HasComment("是否有過評鑑結果");
            entity.Property(e => e.EvaluationName)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑名稱\"");
            entity.Property(e => e.EvaluationResult)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑結果\"");
            entity.Property(e => e.EvaluationYear)
                .HasMaxLength(32)
                .HasComment("\"評鑑成績\r\n評鑑年度\"");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName)
                .HasMaxLength(50)
                .HasComment("表單名稱");
            entity.Property(e => e.IsFirstApply).HasComment("本案是否為第一次申請");
            entity.Property(e => e.IsPassed).HasComment("是否已經校務會議決議通過");
            entity.Property(e => e.LastApplyYear)
                .HasMaxLength(32)
                .HasComment("否>前次申請之增設學年度");
            entity.Property(e => e.MainField)
                .HasMaxLength(50)
                .HasComment("送審類別(主類別)");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位主管職稱");
            entity.Property(e => e.ManagerMail)
                .HasMaxLength(50)
                .HasComment("申請單位主管電子郵件");
            entity.Property(e => e.ManagerName)
                .HasMaxLength(50)
                .HasComment("申請單位主管姓名");
            entity.Property(e => e.ManagerPhone)
                .HasMaxLength(50)
                .HasComment("申請單位主管電話");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState)
                .HasComment("填報目前流程狀態")
                .HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum)
                .HasMaxLength(32)
                .HasComment("校務會議提案編號");
            entity.Property(e => e.RelatedDegreeData).HasComment("技專校院設有與本申請案名相關系所學位學程之參考資料");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField)
                .HasMaxLength(50)
                .HasComment("送審類別(副類別)");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.SupportDepartmentData).HasComment("支援系所專任師資人數資料(格式:支援系所/教授Num/副教授Num/助理教授Num/講師Num/合計Num)");
            entity.Property(e => e.SupportDepartmentNameAndEstablishYear).HasComment("支援系所名稱與設立年度(格式:系所名稱/設立年度)");
            entity.Property(e => e.TeacherPupilPer001)
                .HasComment("全校日夜生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002)
                .HasComment("全校日間生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003)
                .HasComment("全校研究生生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasComment("全校專任助理教授以上師資結構(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasComment("年分")
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformB05>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneNFormB05_1");

            entity.ToTable("OneNFormB05");

            entity.Property(e => e.Id)
                .HasComment("")
                .HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人職稱");
            entity.Property(e => e.ApplicantMail)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人信箱");
            entity.Property(e => e.ApplicantName)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人姓名");
            entity.Property(e => e.ApplicantPhone)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人電話");
            entity.Property(e => e.ApplyOption).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName)
                .HasMaxLength(50)
                .HasComment("領域別");
            entity.Property(e => e.CaseName).HasComment("案名");
            entity.Property(e => e.College)
                .HasMaxLength(50)
                .HasComment("所屬學院");
            entity.Property(e => e.Comment001)
                .HasMaxLength(420)
                .HasComment("\"設立理由\r\n(200字)\"");
            entity.Property(e => e.Comment002)
                .HasMaxLength(420)
                .HasComment("\"發展定位\r\n(200字)\"");
            entity.Property(e => e.Comment003)
                .HasMaxLength(420)
                .HasComment("\"培育目標\r\n(200字)\"");
            entity.Property(e => e.Comment004)
                .HasMaxLength(420)
                .HasComment("\"課程規劃\r\n(200字)\"");
            entity.Property(e => e.Comment005)
                .HasMaxLength(420)
                .HasComment("\"畢業後就業方向\r\n(200字)\"");
            entity.Property(e => e.Comment006).HasComment("\"就業領域之目的事業主管機關\r\n(200字)\"");
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate)
                .HasMaxLength(50)
                .HasComment("校務會議日期");
            entity.Property(e => e.ConferenceExpectDate)
                .HasMaxLength(50)
                .HasComment("尚未經校務會議通過>預計會議日期");
            entity.Property(e => e.DegreeName)
                .HasMaxLength(50)
                .HasComment("授予學位名稱");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(32)
                .HasComment("所屬系學類");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EmploymentAssistantProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師助理教授");
            entity.Property(e => e.EmploymentAssociateProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師副教授");
            entity.Property(e => e.EmploymentLecturerNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentProfessor)
                .HasMaxLength(32)
                .HasComment("實聘專任教師教授");
            entity.Property(e => e.EmploymentTotalNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師總數");
            entity.Property(e => e.Enrollment)
                .HasMaxLength(50)
                .HasComment("招生學制");
            entity.Property(e => e.EvaluationIsPassed).HasComment("是否有過評鑑結果");
            entity.Property(e => e.EvaluationName)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑名稱\"");
            entity.Property(e => e.EvaluationResult)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑結果\"");
            entity.Property(e => e.EvaluationYear)
                .HasMaxLength(32)
                .HasComment("\"評鑑成績\r\n評鑑年度\"");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName)
                .HasMaxLength(50)
                .HasComment("表單名稱");
            entity.Property(e => e.IsFirstApply).HasComment("本案是否為第一次申請");
            entity.Property(e => e.IsPassed).HasComment("是否已經校務會議決議通過");
            entity.Property(e => e.LastApplyYear)
                .HasMaxLength(32)
                .HasComment("否>前次申請之增設學年度");
            entity.Property(e => e.MainField)
                .HasMaxLength(50)
                .HasComment("送審類別(主類別)");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位主管職稱");
            entity.Property(e => e.ManagerMail)
                .HasMaxLength(50)
                .HasComment("申請單位主管電子郵件");
            entity.Property(e => e.ManagerName)
                .HasMaxLength(50)
                .HasComment("申請單位主管姓名");
            entity.Property(e => e.ManagerPhone)
                .HasMaxLength(50)
                .HasComment("申請單位主管電話");
            entity.Property(e => e.MasterDayHaveBeenYears).HasMaxLength(32);
            entity.Property(e => e.MasterDayName).HasMaxLength(50);
            entity.Property(e => e.MasterDayYear).HasMaxLength(32);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum)
                .HasMaxLength(32)
                .HasComment("校務會議提案編號");
            entity.Property(e => e.RelatedDegreeData).HasComment("技專校院設有與本申請案名相關系所學位學程之參考資料");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField)
                .HasMaxLength(50)
                .HasComment("送審類別(副類別)");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.SupportDepartmentData).HasComment("支援系所專任師資人數資料(格式:支援系所/教授Num/副教授Num/助理教授Num/講師Num/合計Num)");
            entity.Property(e => e.SupportDepartmentNameAndEstablishYear).HasComment("支援系所名稱與設立年度(格式:系所名稱/設立年度)");
            entity.Property(e => e.TeacherPupilPer001)
                .HasComment("全校日夜生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002)
                .HasComment("全校日間生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003)
                .HasComment("全校研究生生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasComment("全校專任助理教授以上師資結構(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalFullTimeTeacherNumAssistantProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumAssociateProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumProfesser)
                .HasMaxLength(32)
                .HasComment("實聘專任教師與實際於本碩士學位學程開課之總專任師資人數(格式:支援系所/教授Num/副教授Num/助理教授Num/合計Num)");
            entity.Property(e => e.TotalFullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasComment("年分")
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC03>(entity =>
        {
            entity.ToTable("OneNFormC03");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(420);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.NewCourseCore).HasMaxLength(300);
            entity.Property(e => e.NewFosterTarget).HasMaxLength(300);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OldCourseCore).HasMaxLength(300);
            entity.Property(e => e.OldFosterTarget).HasMaxLength(300);
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC04>(entity =>
        {
            entity.ToTable("OneNFormC04");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(420);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.NewCourseCore).HasMaxLength(300);
            entity.Property(e => e.NewFosterTarget).HasMaxLength(300);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OldCourseCore).HasMaxLength(300);
            entity.Property(e => e.OldFosterTarget).HasMaxLength(300);
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC05>(entity =>
        {
            entity.ToTable("OneNFormC05");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(420);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.NewCourseCore).HasMaxLength(300);
            entity.Property(e => e.NewFosterTarget).HasMaxLength(300);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OldCourseCore).HasMaxLength(300);
            entity.Property(e => e.OldFosterTarget).HasMaxLength(300);
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC06>(entity =>
        {
            entity.ToTable("OneNFormC06");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AfterApplicationTeacherPupilPer).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.ApplicationSystemName).HasMaxLength(50);
            entity.Property(e => e.ApplicationSystemQuota).HasMaxLength(32);
            entity.Property(e => e.ApplicationSystemTemplateStudentNum).HasMaxLength(32);
            entity.Property(e => e.ApprovedEnrollmentQuota).HasMaxLength(32);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.ContinuingEducationNum).HasMaxLength(32);
            entity.Property(e => e.DailySectionNum).HasMaxLength(32);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacherNumAssistantProfessor).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumAssociateProfessor).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumNurse).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumProfessor).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.LastEvaluationName).HasMaxLength(50);
            entity.Property(e => e.LastEvaluationResult).HasMaxLength(50);
            entity.Property(e => e.LastEvaluationYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalStudentNum).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC07>(entity =>
        {
            entity.ToTable("OneNFormC07");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AfterApplicationTeacherPupilPer).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.ApplicationSystemName).HasMaxLength(50);
            entity.Property(e => e.ApplicationSystemQuota).HasMaxLength(32);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.ContinuingEducationNum).HasMaxLength(32);
            entity.Property(e => e.DailySectionNum).HasMaxLength(32);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacherNumAssistantProfessor).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumAssociateProfessor).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumNurse).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumProfessor).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.LastEvaluationName).HasMaxLength(50);
            entity.Property(e => e.LastEvaluationResult).HasMaxLength(50);
            entity.Property(e => e.LastEvaluationYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalStudentNum).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC08>(entity =>
        {
            entity.ToTable("OneNFormC08");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacher001).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher002).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher003).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher004).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher005).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher006).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher007).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher008).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal1).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal2).HasMaxLength(32);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName).HasMaxLength(50);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasDefaultValueSql("('OK')")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC09>(entity =>
        {
            entity.ToTable("OneNFormC09");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EmploymentAssistantProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentAssociateProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentLecturerNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentProfessor).HasMaxLength(32);
            entity.Property(e => e.EmploymentTotalNum).HasMaxLength(32);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName).HasMaxLength(50);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasDefaultValueSql("('OK')")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalFullTimeTeacherNumAssistantProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumAssociateProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC10>(entity =>
        {
            entity.ToTable("OneNFormC10");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(400);
            entity.Property(e => e.Comment002).HasMaxLength(400);
            entity.Property(e => e.Comment003).HasMaxLength(400);
            entity.Property(e => e.Comment004).HasMaxLength(400);
            entity.Property(e => e.Comment005).HasMaxLength(400);
            entity.Property(e => e.Comment007)
                .HasMaxLength(420)
                .HasDefaultValueSql("('OK')");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EmploymentAssistantProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentAssociateProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentLecturerNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentProfessor).HasMaxLength(32);
            entity.Property(e => e.EmploymentTotalNum).HasMaxLength(32);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName).HasMaxLength(50);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasDefaultValueSql("('OK')")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalFullTimeTeacherNumAssistantProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumAssociateProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC11>(entity =>
        {
            entity.ToTable("OneNFormC11");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment006).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacher001).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher002).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher003).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher004).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher005).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher006).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher007).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher008).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal1).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal2).HasMaxLength(32);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName).HasMaxLength(50);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC12>(entity =>
        {
            entity.ToTable("OneNFormC12");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplyOption).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DegreeName).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Enrollment).HasMaxLength(50);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacher001).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher002).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher003).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher004).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher005).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher006).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal1).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal2).HasMaxLength(32);
            entity.Property(e => e.InServiceMasterEstablishedYear).HasMaxLength(32);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.MasterDayEstablishedYear).HasMaxLength(32);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC13>(entity =>
        {
            entity.ToTable("OneNFormC13");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人職稱");
            entity.Property(e => e.ApplicantMail)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人電子郵件");
            entity.Property(e => e.ApplicantName)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人姓名");
            entity.Property(e => e.ApplicantPhone)
                .HasMaxLength(50)
                .HasComment("申請單位連絡人連絡電話");
            entity.Property(e => e.ApplyOption)
                .HasMaxLength(50)
                .HasComment("申請增設日間碩士班/碩士在職專班");
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName)
                .HasMaxLength(50)
                .HasComment("領域別");
            entity.Property(e => e.CaseName).HasComment("案名");
            entity.Property(e => e.College)
                .HasMaxLength(50)
                .HasComment("所屬學院");
            entity.Property(e => e.Comment001)
                .HasMaxLength(420)
                .HasComment("\"設立理由\r\n(200字)\"");
            entity.Property(e => e.Comment002)
                .HasMaxLength(420)
                .HasComment("\"發展定位\r\n(200字)\"");
            entity.Property(e => e.Comment003)
                .HasMaxLength(420)
                .HasComment("\"培育目標\r\n(200字)\"");
            entity.Property(e => e.Comment004)
                .HasMaxLength(420)
                .HasComment("\"課程規劃\r\n(200字)\"");
            entity.Property(e => e.Comment005)
                .HasMaxLength(420)
                .HasComment("\"畢業後就業方向\r\n(200字)\"");
            entity.Property(e => e.Comment006).HasComment("\"就業領域之目的事業主管機關\r\n(200字)\"");
            entity.Property(e => e.ConferenceDate)
                .HasMaxLength(50)
                .HasComment("校務會議日期");
            entity.Property(e => e.ConferenceExpectDate)
                .HasMaxLength(50)
                .HasComment("尚未經校務會議通過->預計會議日期");
            entity.Property(e => e.DegreeName)
                .HasMaxLength(50)
                .HasComment("授予學位名稱");
            entity.Property(e => e.DepartmentEstablishedTime)
                .HasMaxLength(32)
                .HasComment("系增設之學年度");
            entity.Property(e => e.DepartmentEstablishedYears)
                .HasMaxLength(32)
                .HasComment("系增設已滿滿_年");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(32)
                .HasComment("所屬系學類");
            entity.Property(e => e.EditAuth001)
                .HasComment("執行編輯之使用者id")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("執行編輯之時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Enrollment)
                .HasMaxLength(50)
                .HasComment("招生學制");
            entity.Property(e => e.EvaluationIsPassed).HasComment("是否有過評鑑結果");
            entity.Property(e => e.EvaluationName)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑名稱\"");
            entity.Property(e => e.EvaluationResult)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑結果\"");
            entity.Property(e => e.EvaluationYear)
                .HasMaxLength(32)
                .HasComment("\"評鑑成績\r\n評鑑年度\"");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName)
                .HasMaxLength(50)
                .HasComment("表單名稱");
            entity.Property(e => e.FullTimeTeacher001)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘教授");
            entity.Property(e => e.FullTimeTeacher002)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘教授");
            entity.Property(e => e.FullTimeTeacher003)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘副教授");
            entity.Property(e => e.FullTimeTeacher004)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘副教授");
            entity.Property(e => e.FullTimeTeacher005)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘助理教授");
            entity.Property(e => e.FullTimeTeacher006)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘助理教授");
            entity.Property(e => e.FullTimeTeacher007)
                .HasMaxLength(32)
                .HasComment("專任師資人數講師實聘");
            entity.Property(e => e.FullTimeTeacher008)
                .HasMaxLength(32)
                .HasComment("專任師資人數講師擬聘");
            entity.Property(e => e.FullTimeTeacherTotal1)
                .HasMaxLength(32)
                .HasComment("專任師資人數實聘合計");
            entity.Property(e => e.FullTimeTeacherTotal2)
                .HasMaxLength(32)
                .HasComment("專任師資人數擬聘合計");
            entity.Property(e => e.IsFirstApply).HasComment("本案是否為第一次申請");
            entity.Property(e => e.IsPassed).HasComment("是否已經校務會議決議通過");
            entity.Property(e => e.LastApplyYear)
                .HasMaxLength(32)
                .HasComment("否>前次申請之增設學年度");
            entity.Property(e => e.MainField)
                .HasMaxLength(50)
                .HasComment("送審類別(主領域)");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位主管職稱");
            entity.Property(e => e.ManagerMail)
                .HasMaxLength(50)
                .HasComment("申請單位主管電子郵件");
            entity.Property(e => e.ManagerName)
                .HasMaxLength(50)
                .HasComment("申請單位主管姓名");
            entity.Property(e => e.ManagerPhone)
                .HasMaxLength(50)
                .HasComment("申請單位主管連絡電話");
            entity.Property(e => e.MasterDayEstablishedTime)
                .HasMaxLength(32)
                .HasComment("設立日間碩士班於_年");
            entity.Property(e => e.MasterDayEstablishedYears)
                .HasMaxLength(32)
                .HasComment("已設立滿_年");
            entity.Property(e => e.MasterDayName)
                .HasMaxLength(50)
                .HasComment("申請碩在職->已設立之日間碩士班名稱");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState)
                .HasComment("填報目前流程狀態")
                .HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum)
                .HasMaxLength(32)
                .HasComment("校務會議提案編號");
            entity.Property(e => e.RelatedDegreeData).HasComment("技專校院設有與本申請案名相關系所學位學程之參考資料");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField)
                .HasMaxLength(50)
                .HasComment("送審類別(副領域)");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001)
                .HasComment("全校日夜生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002)
                .HasComment("全校日間生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003)
                .HasComment("全校研究生生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasComment("全校專任助理教授以上師資結構(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasComment("年分")
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC14>(entity =>
        {
            entity.ToTable("OneNFormC14");

            entity.Property(e => e.Id)
                .HasComment("")
                .HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人職稱");
            entity.Property(e => e.ApplicantMail)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人信箱");
            entity.Property(e => e.ApplicantName)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人姓名");
            entity.Property(e => e.ApplicantPhone)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人電話");
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName)
                .HasMaxLength(50)
                .HasComment("領域別");
            entity.Property(e => e.CaseName).HasComment("案名");
            entity.Property(e => e.College)
                .HasMaxLength(50)
                .HasComment("所屬學院");
            entity.Property(e => e.Comment001)
                .HasMaxLength(420)
                .HasComment("\"設立理由\r\n(200字)\"");
            entity.Property(e => e.Comment002)
                .HasMaxLength(420)
                .HasComment("\"發展定位\r\n(200字)\"");
            entity.Property(e => e.Comment003)
                .HasMaxLength(420)
                .HasComment("\"培育目標\r\n(200字)\"");
            entity.Property(e => e.Comment004)
                .HasMaxLength(420)
                .HasComment("\"課程規劃\r\n(200字)\"");
            entity.Property(e => e.Comment005)
                .HasMaxLength(420)
                .HasComment("\"畢業後就業方向\r\n(200字)\"");
            entity.Property(e => e.Comment006).HasComment("\"就業領域之目的事業主管機關\r\n(200字)\"");
            entity.Property(e => e.ConferenceDate)
                .HasMaxLength(50)
                .HasComment("校務會議日期");
            entity.Property(e => e.ConferenceExpectDate)
                .HasMaxLength(50)
                .HasComment("尚未經校務會議通過>預計會議日期");
            entity.Property(e => e.DegreeName)
                .HasMaxLength(50)
                .HasComment("授予學位名稱");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(32)
                .HasComment("所屬系學類");
            entity.Property(e => e.EditAuth001)
                .HasComment("執行編輯之使用者id")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("執行編輯之時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EmploymentAssistantProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師助理教授");
            entity.Property(e => e.EmploymentAssociateProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師副教授");
            entity.Property(e => e.EmploymentProfessor)
                .HasMaxLength(32)
                .HasComment("實聘專任教師教授");
            entity.Property(e => e.EmploymentSupportData).HasComment("實聘專任教師與實際於本碩士學位學程開課之總專任師資人數(格式:支援系所/教授Num/副教授Num/助理教授Num/合計Num)");
            entity.Property(e => e.EmploymentTotalNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師總數");
            entity.Property(e => e.Enrollment)
                .HasMaxLength(50)
                .HasComment("招生學制");
            entity.Property(e => e.EvaluationIsPassed).HasComment("是否有過評鑑結果");
            entity.Property(e => e.EvaluationName)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑名稱\"");
            entity.Property(e => e.EvaluationResult)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑結果\"");
            entity.Property(e => e.EvaluationYear)
                .HasMaxLength(32)
                .HasComment("\"評鑑成績\r\n評鑑年度\"");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName)
                .HasMaxLength(50)
                .HasComment("表單名稱");
            entity.Property(e => e.IsFirstApply).HasComment("本案是否為第一次申請");
            entity.Property(e => e.IsPassed).HasComment("是否已經校務會議決議通過");
            entity.Property(e => e.LastApplyYear)
                .HasMaxLength(32)
                .HasComment("否>前次申請之增設學年度");
            entity.Property(e => e.MainField)
                .HasMaxLength(50)
                .HasComment("送審類別(主類別)");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位主管職稱");
            entity.Property(e => e.ManagerMail)
                .HasMaxLength(50)
                .HasComment("申請單位主管電子郵件");
            entity.Property(e => e.ManagerName)
                .HasMaxLength(50)
                .HasComment("申請單位主管姓名");
            entity.Property(e => e.ManagerPhone)
                .HasMaxLength(50)
                .HasComment("申請單位主管電話");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState)
                .HasComment("填報目前流程狀態")
                .HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum)
                .HasMaxLength(32)
                .HasComment("校務會議提案編號");
            entity.Property(e => e.RelatedDegreeData).HasComment("技專校院設有與本申請案名相關系所學位學程之參考資料");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField)
                .HasMaxLength(50)
                .HasComment("送審類別(副類別)");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.SupportDepartmentData).HasComment("支援系所專任師資人數資料(格式:支援系所/教授Num/副教授Num/助理教授Num/講師Num/合計Num)");
            entity.Property(e => e.SupportDepartmentNameAndEstablishYear).HasComment("支援系所名稱與設立年度(格式:系所名稱/設立年度)");
            entity.Property(e => e.TeacherPupilPer001)
                .HasComment("全校日夜生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002)
                .HasComment("全校日間生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003)
                .HasComment("全校研究生生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasComment("全校專任助理教授以上師資結構(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasComment("年分")
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformC15>(entity =>
        {
            entity.ToTable("OneNFormC15");

            entity.Property(e => e.Id)
                .HasComment("")
                .HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人職稱");
            entity.Property(e => e.ApplicantMail)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人信箱");
            entity.Property(e => e.ApplicantName)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人姓名");
            entity.Property(e => e.ApplicantPhone)
                .HasMaxLength(50)
                .HasComment("申請單位聯絡人電話");
            entity.Property(e => e.ApplyOption).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName)
                .HasMaxLength(50)
                .HasComment("領域別");
            entity.Property(e => e.CaseName).HasComment("案名");
            entity.Property(e => e.College)
                .HasMaxLength(50)
                .HasComment("所屬學院");
            entity.Property(e => e.Comment001)
                .HasMaxLength(420)
                .HasComment("\"設立理由\r\n(200字)\"");
            entity.Property(e => e.Comment002)
                .HasMaxLength(420)
                .HasComment("\"發展定位\r\n(200字)\"");
            entity.Property(e => e.Comment003)
                .HasMaxLength(420)
                .HasComment("\"培育目標\r\n(200字)\"");
            entity.Property(e => e.Comment004)
                .HasMaxLength(420)
                .HasComment("\"課程規劃\r\n(200字)\"");
            entity.Property(e => e.Comment005)
                .HasMaxLength(420)
                .HasComment("\"畢業後就業方向\r\n(200字)\"");
            entity.Property(e => e.Comment006).HasComment("\"就業領域之目的事業主管機關\r\n(200字)\"");
            entity.Property(e => e.ConferenceDate)
                .HasMaxLength(50)
                .HasComment("校務會議日期");
            entity.Property(e => e.ConferenceExpectDate)
                .HasMaxLength(50)
                .HasComment("尚未經校務會議通過>預計會議日期");
            entity.Property(e => e.DegreeName)
                .HasMaxLength(50)
                .HasComment("授予學位名稱");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(32)
                .HasComment("所屬系學類");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EmploymentAssistantProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師助理教授");
            entity.Property(e => e.EmploymentAssociateProfessorNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師副教授");
            entity.Property(e => e.EmploymentLecturerNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentProfessor)
                .HasMaxLength(32)
                .HasComment("實聘專任教師教授");
            entity.Property(e => e.EmploymentTotalNum)
                .HasMaxLength(32)
                .HasComment("實聘專任教師總數");
            entity.Property(e => e.Enrollment)
                .HasMaxLength(50)
                .HasComment("招生學制");
            entity.Property(e => e.EvaluationIsPassed).HasComment("是否有過評鑑結果");
            entity.Property(e => e.EvaluationName)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑名稱\"");
            entity.Property(e => e.EvaluationResult)
                .HasMaxLength(50)
                .HasComment("\"評鑑成績\r\n評鑑結果\"");
            entity.Property(e => e.EvaluationYear)
                .HasMaxLength(32)
                .HasComment("\"評鑑成績\r\n評鑑年度\"");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName)
                .HasMaxLength(50)
                .HasComment("表單名稱");
            entity.Property(e => e.IsFirstApply).HasComment("本案是否為第一次申請");
            entity.Property(e => e.IsPassed).HasComment("是否已經校務會議決議通過");
            entity.Property(e => e.LastApplyYear)
                .HasMaxLength(32)
                .HasComment("否>前次申請之增設學年度");
            entity.Property(e => e.MainField)
                .HasMaxLength(50)
                .HasComment("送審類別(主類別)");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle)
                .HasMaxLength(50)
                .HasComment("申請單位主管職稱");
            entity.Property(e => e.ManagerMail)
                .HasMaxLength(50)
                .HasComment("申請單位主管電子郵件");
            entity.Property(e => e.ManagerName)
                .HasMaxLength(50)
                .HasComment("申請單位主管姓名");
            entity.Property(e => e.ManagerPhone)
                .HasMaxLength(50)
                .HasComment("申請單位主管電話");
            entity.Property(e => e.MasterDayHaveBeenYears).HasMaxLength(32);
            entity.Property(e => e.MasterDayName).HasMaxLength(50);
            entity.Property(e => e.MasterDayYear).HasMaxLength(32);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum)
                .HasMaxLength(32)
                .HasComment("校務會議提案編號");
            entity.Property(e => e.RelatedDegreeData).HasComment("技專校院設有與本申請案名相關系所學位學程之參考資料");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField)
                .HasMaxLength(50)
                .HasComment("送審類別(副類別)");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.SupportDepartmentData).HasComment("支援系所專任師資人數資料(格式:支援系所/教授Num/副教授Num/助理教授Num/講師Num/合計Num)");
            entity.Property(e => e.SupportDepartmentNameAndEstablishYear).HasComment("支援系所名稱與設立年度(格式:系所名稱/設立年度)");
            entity.Property(e => e.TeacherPupilPer001)
                .HasComment("全校日夜生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002)
                .HasComment("全校日間生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003)
                .HasComment("全校研究生生師比值(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasComment("全校專任助理教授以上師資結構(%)")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalFullTimeTeacherNumAssistantProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumAssociateProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumProfesser)
                .HasMaxLength(32)
                .HasComment("實聘專任教師與實際於本碩士學位學程開課之總專任師資人數(格式:支援系所/教授Num/副教授Num/助理教授Num/合計Num)");
            entity.Property(e => e.TotalFullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasComment("年分")
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformD01>(entity =>
        {
            entity.ToTable("OneNFormD01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.ApprovedSystemName).HasMaxLength(50);
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College)
                .HasMaxLength(50)
                .HasDefaultValueSql("('--')");
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment007).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EnrollmentQuota).HasMaxLength(32);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacher001).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher002).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher003).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher004).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher005).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher006).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher007).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacher008).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal1).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotal2).HasMaxLength(32);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName)
                .HasMaxLength(50)
                .HasDefaultValueSql("('無')");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasDefaultValueSql("('OK')")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformD02>(entity =>
        {
            entity.ToTable("OneNFormD02");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment007).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EmploymentAssistantProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentAssociateProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentLecturerNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentProfessor).HasMaxLength(32);
            entity.Property(e => e.EmploymentTotalNum).HasMaxLength(32);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName).HasMaxLength(50);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasDefaultValueSql("('OK')")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalFullTimeTeacherNumAssistantProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumAssociateProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformD03>(entity =>
        {
            entity.ToTable("OneNFormD03");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment007).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EmploymentAssistantProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentAssociateProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentLecturerNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentProfessor).HasMaxLength(32);
            entity.Property(e => e.EmploymentTotalNum).HasMaxLength(32);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName).HasMaxLength(50);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TeacherPupilPer001).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer002).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer003).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TeacherPupilPer004)
                .HasDefaultValueSql("('OK')")
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TotalFullTimeTeacherNumAssistantProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumAssociateProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformE01>(entity =>
        {
            entity.ToTable("OneNFormE01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(420);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.NewCourseCore).HasMaxLength(300);
            entity.Property(e => e.NewFosterTarget).HasMaxLength(300);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OldCourseCore).HasMaxLength(300);
            entity.Property(e => e.OldFosterTarget).HasMaxLength(300);
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformE02>(entity =>
        {
            entity.ToTable("OneNFormE02");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(420);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.NewCourseCore).HasMaxLength(300);
            entity.Property(e => e.NewFosterTarget).HasMaxLength(300);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OldCourseCore).HasMaxLength(300);
            entity.Property(e => e.OldFosterTarget).HasMaxLength(300);
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformE03>(entity =>
        {
            entity.ToTable("OneNFormE03");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformF01>(entity =>
        {
            entity.ToTable("OneNFormF01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.ApprovedSystemName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EnrollmentDescription).HasMaxLength(420);
            entity.Property(e => e.EnrollmentQuota).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FullTimeTeacherAssistantProfessorNum).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherAssociateProfessorNum).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherLectureNum).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherProfessorNum).HasMaxLength(32);
            entity.Property(e => e.FullTimeTeacherTotalNum).HasMaxLength(32);
            entity.Property(e => e.GraduateAbroadNum).HasMaxLength(32);
            entity.Property(e => e.GraduateAbroadPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateEmploymentNum).HasMaxLength(32);
            entity.Property(e => e.GraduateEmploymentPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateMilitaryNum).HasMaxLength(32);
            entity.Property(e => e.GraduateMilitaryPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateOthersNum).HasMaxLength(32);
            entity.Property(e => e.GraduateOthersPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateProgressionNum).HasMaxLength(32);
            entity.Property(e => e.GraduateProgressionPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateRemark).HasMaxLength(420);
            entity.Property(e => e.GraduateTotalNum).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneNFormFIle");

            entity.ToTable("OneNFormFile");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.OneNformId).HasColumnName("OneNFormId");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
        });

        modelBuilder.Entity<OneNformG01>(entity =>
        {
            entity.ToTable("OneNFormG01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedEducationSystem).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.NewApprovedEducationSystem).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformH01>(entity =>
        {
            entity.ToTable("OneNFormH01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicationReasonAndDescription).HasMaxLength(420);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentName).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.GroupName).HasMaxLength(50);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformI01>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OneNFormI01_1");

            entity.ToTable("OneNFormI01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicantJobTitle).HasMaxLength(50);
            entity.Property(e => e.ApplicantMail).HasMaxLength(50);
            entity.Property(e => e.ApplicantName).HasMaxLength(50);
            entity.Property(e => e.ApplicantPhone).HasMaxLength(50);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.College).HasMaxLength(50);
            entity.Property(e => e.Comment001).HasMaxLength(420);
            entity.Property(e => e.Comment002).HasMaxLength(420);
            entity.Property(e => e.Comment003).HasMaxLength(420);
            entity.Property(e => e.Comment004).HasMaxLength(420);
            entity.Property(e => e.Comment005).HasMaxLength(420);
            entity.Property(e => e.Comment006).HasMaxLength(420);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.DepartmentNum).HasMaxLength(32);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EducationSystemName).HasMaxLength(50);
            entity.Property(e => e.EmploymentAssistantProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentAssociateProfessorNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentLecturerNum).HasMaxLength(32);
            entity.Property(e => e.EmploymentProfessor).HasMaxLength(32);
            entity.Property(e => e.EmploymentTotalNum).HasMaxLength(32);
            entity.Property(e => e.EvaluationName).HasMaxLength(50);
            entity.Property(e => e.EvaluationResult).HasMaxLength(50);
            entity.Property(e => e.EvaluationYear).HasMaxLength(32);
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.ExtensionCategory).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.LastApplyYear).HasMaxLength(32);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.ManagerJobTitle).HasMaxLength(50);
            entity.Property(e => e.ManagerMail).HasMaxLength(50);
            entity.Property(e => e.ManagerName).HasMaxLength(50);
            entity.Property(e => e.ManagerPhone).HasMaxLength(50);
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.RelatedDepartmentName).HasMaxLength(50);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TotalFullTimeTeacherNumAssistantProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumAssociateProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumLecturer).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumProfesser).HasMaxLength(32);
            entity.Property(e => e.TotalFullTimeTeacherNumTotal).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformJ01>(entity =>
        {
            entity.ToTable("OneNFormJ01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApprovedQuota).HasMaxLength(32);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.GraduateAbroadNum).HasMaxLength(32);
            entity.Property(e => e.GraduateAbroadPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateEmploymentNum).HasMaxLength(32);
            entity.Property(e => e.GraduateEmploymentPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateMilitaryNum).HasMaxLength(32);
            entity.Property(e => e.GraduateMilitaryPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateOthersNum).HasMaxLength(32);
            entity.Property(e => e.GraduateOthersPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.GraduateProgressionNum).HasMaxLength(32);
            entity.Property(e => e.GraduateProgressionPercent).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.NotificationDate).HasMaxLength(50);
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.StopCorrespondCondition1).HasMaxLength(200);
            entity.Property(e => e.StopCorrespondCondition2).HasMaxLength(200);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.TotalGraduateNum).HasMaxLength(32);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformJ02>(entity =>
        {
            entity.ToTable("OneNFormJ02");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(600);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.CaseName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.CourseName).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformJ03>(entity =>
        {
            entity.ToTable("OneNFormJ03");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(600);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.CourseName).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformK01>(entity =>
        {
            entity.ToTable("OneNFormK01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicationConform).HasMaxLength(200);
            entity.Property(e => e.ApprovedResult).HasComment("核定最終結果");
            entity.Property(e => e.Condition).HasMaxLength(200);
            entity.Property(e => e.ContactDepartment).HasMaxLength(50);
            entity.Property(e => e.ContactMail).HasMaxLength(50);
            entity.Property(e => e.ContactName).HasMaxLength(50);
            entity.Property(e => e.ContactPhone).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineEnabled).HasComment("送審否");
            entity.Property(e => e.ExamineResultNum).HasComment("審查結果字號");
            entity.Property(e => e.ExportFileName)
                .HasMaxLength(50)
                .HasComment("匯出檔案名稱");
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.IncrementNum).HasMaxLength(50);
            entity.Property(e => e.LastThreeYearApplicateQuota1)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApplicateQuota_1");
            entity.Property(e => e.LastThreeYearApplicateQuota2)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApplicateQuota_2");
            entity.Property(e => e.LastThreeYearApplicateQuota3)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApplicateQuota_3");
            entity.Property(e => e.LastThreeYearApprovedQuota1)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApprovedQuota_1");
            entity.Property(e => e.LastThreeYearApprovedQuota2)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApprovedQuota_2");
            entity.Property(e => e.LastThreeYearApprovedQuota3)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApprovedQuota_3");
            entity.Property(e => e.LastThreeYearDecreasementQuota1)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearDecreasementQuota_1");
            entity.Property(e => e.LastThreeYearDecreasementQuota2)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearDecreasementQuota_2");
            entity.Property(e => e.LastThreeYearDecreasementQuota3)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearDecreasementQuota_3");
            entity.Property(e => e.LastThreeYearDecreasementReason1)
                .HasMaxLength(200)
                .HasColumnName("LastThreeYearDecreasementReason_1");
            entity.Property(e => e.LastThreeYearDecreasementReason2)
                .HasMaxLength(200)
                .HasColumnName("LastThreeYearDecreasementReason_2");
            entity.Property(e => e.LastThreeYearDecreasementReason3)
                .HasMaxLength(200)
                .HasColumnName("LastThreeYearDecreasementReason_3");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後主領域")
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasComment("備註");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.Remind).HasComment("提醒文字");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasComment("修正後副領域")
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<OneNformK01condition>(entity =>
        {
            entity.ToTable("OneNFormK01Condition");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ConditionName).HasMaxLength(50);
        });

        modelBuilder.Entity<OneNformK01correspond>(entity =>
        {
            entity.ToTable("OneNFormK01Correspond");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CorrespondName).HasMaxLength(50);
        });

        modelBuilder.Entity<OneNformK01decreasementReason>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("OneNFormK01DecreasementReason");

            entity.Property(e => e.DrecreasementReason).HasMaxLength(50);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<OneNformSchoolUploadFile>(entity =>
        {
            entity.ToTable("OneNFormSchoolUploadFiles");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid).HasMaxLength(50);
            entity.Property(e => e.Year).HasMaxLength(32);
        });

        modelBuilder.Entity<OneNformType>(entity =>
        {
            entity.ToTable("OneNFormType");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformType1)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
        });

        modelBuilder.Entity<OneNformUpload>(entity =>
        {
            entity.ToTable("OneNFormUpload");

            entity.Property(e => e.Id).HasComment("PK 總量一階上傳 編碼");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid)
                .HasMaxLength(50)
                .HasComment("檔案實存名稱");
            entity.Property(e => e.FileName).HasComment("檔案名稱");
            entity.Property(e => e.FilePath).HasComment("檔案路徑");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasComment("學年度");
        });

        modelBuilder.Entity<OneSchoolState>(entity =>
        {
            entity.ToTable("OneSchoolState", tb => tb.HasTrigger("TR_OneSchoolState_Modify"));

            entity.Property(e => e.Id).HasComment("PK 一階申請狀態 編碼");
            entity.Property(e => e.EditAuth001Id)
                .HasComment("FK 創建/修改者 編碼")
                .HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.OneFormStateId).HasComment("FK 申請狀態 編碼");
            entity.Property(e => e.Ps1)
                .HasComment("學校備註")
                .HasColumnName("PS1");
            entity.Property(e => e.Ps2)
                .HasComment("總量to學校備註")
                .HasColumnName("PS2");
            entity.Property(e => e.Ps3)
                .HasComment("總量備註")
                .HasColumnName("PS3");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK 學校 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(128)
                .HasComment("學年度");
        });

        modelBuilder.Entity<PasswordSmtp>(entity =>
        {
            entity.ToTable("PasswordSmtp");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreateTime).HasColumnType("datetime");
            entity.Property(e => e.MsgBody).HasColumnName("msgBody");
            entity.Property(e => e.MsgDeadLineTime)
                .HasColumnType("datetime")
                .HasColumnName("msgDeadLineTime");
            entity.Property(e => e.MsgReceiver).HasColumnName("msgReceiver");
            entity.Property(e => e.MsgSendState).HasColumnName("msgSendState");
            entity.Property(e => e.MsgTitle).HasColumnName("msgTitle");
            entity.Property(e => e.MsgValidNum)
                .HasMaxLength(8)
                .HasColumnName("msgValidNum");
            entity.Property(e => e.MsgValidState).HasColumnName("msgValidState");
            entity.Property(e => e.MsgValidUrl).HasColumnName("msgValidUrl");
        });

        modelBuilder.Entity<ResponsibleAgency>(entity =>
        {
            entity.ToTable("ResponsibleAgency");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name).HasMaxLength(50);
        });

        modelBuilder.Entity<SchoolCtrl001>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SDschool");

            entity.ToTable("SchoolCtrl001", tb => tb.HasTrigger("TR_SchoolCtrl001_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 學校建立者");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolArea)
                .HasMaxLength(50)
                .HasColumnName("schoolArea");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱")
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasComment("校基庫學校代碼")
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasComment("學校總量編碼")
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<SchoolCtrl001002>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SchoolCtrl001_002");

            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<SchoolCtrl001Auth001>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SchoolCtrl001_Auth001");

            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolArea)
                .HasMaxLength(50)
                .HasColumnName("schoolArea");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<SchoolCtrl002>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SDcollege");

            entity.ToTable("SchoolCtrl002", tb => tb.HasTrigger("TR_SchoolCtrl002_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 學院建立者");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasComment("學院名稱")
                .HasColumnName("collegeName");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("學院建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校代碼");
        });

        modelBuilder.Entity<SchoolCtrl003>(entity =>
        {
            entity.ToTable("SchoolCtrl003", tb => tb.HasTrigger("TR_SchoolCtrl003_Modify"));

            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 系科所狀態建立者ID");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<SchoolCtrl004>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SD_ShuoBoShrBan");

            entity.ToTable("SchoolCtrl004", tb => tb.HasTrigger("TR_SchoolCtrl004_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 碩博班建立者");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasComment("類別名稱")
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分班')")
                .HasComment("班別名稱")
                .HasColumnName("className");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("校基庫系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("碩博班建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分組')")
                .HasComment("組別名稱")
                .HasColumnName("groupName");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolCtrl002Id).HasComment("FK SchoolCtrl002 學院ID");
            entity.Property(e => e.SchoolCtrl003Id).HasComment("FK SchoolCtrl003 教育部領域別ID");
            entity.Property(e => e.ShuoBoShrBanName)
                .HasMaxLength(128)
                .HasComment("碩博士班名稱 (3階 表一)");
            entity.Property(e => e.State005Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State005 管制類ID");
            entity.Property(e => e.State009Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK State009 護理農業化工及土木領域ID");
            entity.Property(e => e.State010Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State010 總量統計用領域別ID");
            entity.Property(e => e.TotalDepartmentCode).HasMaxLength(50);
        });

        modelBuilder.Entity<SchoolCtrl005>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SD_DaShiueBu");

            entity.ToTable("SchoolCtrl005", tb => tb.HasTrigger("TR_SchoolCtrl005_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 大學部建立者ID");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasComment("大學部類別名稱")
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分班')")
                .HasComment("大學部班名稱")
                .HasColumnName("className");
            entity.Property(e => e.DaShiueBuName)
                .HasMaxLength(128)
                .HasComment("大學部系所名稱");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("校基庫系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("大學部建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分組')")
                .HasComment("大學部組名稱")
                .HasColumnName("groupName");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolCtrl002Id).HasComment("FK SchoolCtrl002 院代碼");
            entity.Property(e => e.SchoolCtrl003Id).HasComment("FK SchoolCtrl003 領域別ID");
            entity.Property(e => e.State005Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State005 管制類ID");
            entity.Property(e => e.State009Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK State009 護理農業化工及土木領域ID");
            entity.Property(e => e.State010Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State010 總量統計用領域別ID");
            entity.Property(e => e.TotalDepartmentCode).HasMaxLength(50);
        });

        modelBuilder.Entity<SchoolCtrl006Old>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SD_GauJungBu");

            entity.ToTable("SchoolCtrl006_Old");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 高中申請建立者");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasComment("高中申請類別(未用)")
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分班')")
                .HasComment("高中申請班別名稱")
                .HasColumnName("className");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("校基庫系所代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("高中申請建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJungBuName)
                .HasMaxLength(128)
                .HasComment("高中申請系名稱");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分組')")
                .HasComment("高中申請群別名稱")
                .HasColumnName("groupName");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校代碼");
            entity.Property(e => e.SchoolCtrl003Id).HasComment("FK SchoolCtrl003 領域別ID");
            entity.Property(e => e.State005Id).HasComment("FK State005 管制類ID");
        });

        modelBuilder.Entity<SchoolCtrl007>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SD_JuanKeBu");

            entity.ToTable("SchoolCtrl007", tb => tb.HasTrigger("TR_SchoolCtrl007_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 專科招生建立者ID");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasComment("專科招生類別名稱")
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分班')")
                .HasComment("專科招生班別名稱")
                .HasColumnName("className");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("專科招生校基庫系科代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("專科招生建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分組')")
                .HasComment("專科招生群別名稱")
                .HasColumnName("groupName");
            entity.Property(e => e.JuanKeBuName)
                .HasMaxLength(128)
                .HasComment("專科招生系科名稱");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 專科招生學校 ID");
            entity.Property(e => e.SchoolCtrl003Id).HasComment("FK SchoolCtrl003 領域別ID");
            entity.Property(e => e.State005Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State005 管制類ID");
            entity.Property(e => e.State009Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK State009 護理農業化工及土木領域ID");
            entity.Property(e => e.State010Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State010 總量統計用領域別ID");
            entity.Property(e => e.TotalDepartmentCode).HasMaxLength(50);
        });

        modelBuilder.Entity<SchoolCtrl008>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SD_GauJrBu");

            entity.ToTable("SchoolCtrl008", tb => tb.HasTrigger("TR_SchoolCtrl008_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 高職部招生建立者ID");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasComment("高職部招生類別名稱")
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分班')")
                .HasComment("高職部招生班別名稱")
                .HasColumnName("className");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasComment("高職部招生校基庫代碼")
                .HasColumnName("departmentNum");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("高職部招生建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrGuoJungGuoShiauBuName)
                .HasMaxLength(128)
                .HasComment("高職招生系所名稱");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分組')")
                .HasComment("高職部招生群別名稱")
                .HasColumnName("groupName");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 高職招生學校 ID");
            entity.Property(e => e.SchoolCtrl003Id).HasComment("FK SchoolCtrl003 領域別ID");
            entity.Property(e => e.State005Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State005 管制類ID");
            entity.Property(e => e.State009Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK State009 護理農業化工及土木領域ID");
            entity.Property(e => e.State010Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK State010 總量統計用領域別ID");
        });

        modelBuilder.Entity<SchoolCtrl009>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HS_ShuoBoShrBan");

            entity.ToTable("SchoolCtrl009", tb => tb.HasTrigger("TR_SchoolCtrl009_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK Auth001 專科招生建立者ID");
            entity.Property(e => e.BoShiBanCw)
                .HasComment("博士班可填報(0:否,1:是)")
                .HasColumnName("BoShiBanCW");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("碩博班狀態建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.NewSchoolCtrl004Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK SchoolCtrl004 新碩博士班 ID")
                .HasColumnName("newSchoolCtrl004Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分班')")
                .HasComment("舊班名稱")
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分組')")
                .HasComment("舊組名稱")
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldSchoolCtrl004Id)
                .HasComment("FK SchoolCtrl004 舊碩博士班 ID")
                .HasColumnName("oldSchoolCtrl004Id");
            entity.Property(e => e.OldShuoBoShrBanName)
                .HasMaxLength(128)
                .HasComment("舊碩博班系所名稱")
                .HasColumnName("oldShuoBoShrBanName");
            entity.Property(e => e.ShuoShiBanCw)
                .HasComment("碩士班可填報 can write")
                .HasColumnName("ShuoShiBanCW");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanCw)
                .HasComment("碩士在職專班可填報")
                .HasColumnName("ShuoShiZaiZhiZhuanBanCW");
            entity.Property(e => e.State002Id).HasComment("FK State002 系科所狀態 ID");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("碩博班狀態改變年度")
                .HasColumnName("year");
        });

        modelBuilder.Entity<SchoolCtrl010>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HS_DaShiueBu");

            entity.ToTable("SchoolCtrl010", tb => tb.HasTrigger("TR_SchoolCtrl010_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK Auth001 大學部狀態改變者 ID");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("大學部狀態改變時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErJiJinXiuBuCw)
                .HasComment("二技進修部")
                .HasColumnName("ErJiJinXiuBuCW");
            entity.Property(e => e.ErJiJinXiuXueYuanCw)
                .HasComment("進修學院能寫?")
                .HasColumnName("ErJiJinXiuXueYuanCW");
            entity.Property(e => e.ErJiRiJianBuCw)
                .HasComment("二技日間部")
                .HasColumnName("ErJiRiJianBuCW");
            entity.Property(e => e.GauJrShengAcw)
                .HasComment("高中生_A")
                .HasColumnName("GauJrSheng_ACW");
            entity.Property(e => e.GauJungShengHuLiLeiB3cw)
                .HasComment("護理類_B3")
                .HasColumnName("GauJungShengHuLiLei_B3CW");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiB1cw)
                .HasComment("化工土木建築類_B1")
                .HasColumnName("GauJungShengHuaGungTuMuJianJuLei_B1CW");
            entity.Property(e => e.GauJungShengWuGauJrDueiYingLeiB2cw)
                .HasComment("無高職對應類科_B2")
                .HasColumnName("GauJungShengWuGauJrDueiYingLei_B2CW");
            entity.Property(e => e.GauJungShengYaoXueYuWenLeiB4cw)
                .HasComment("藥學語文類_B4")
                .HasColumnName("GauJungShengYaoXueYuWenLei_B4CW");
            entity.Property(e => e.JuanKeWaiJiaMingAC2cw)
                .HasComment("外加專班_C2")
                .HasColumnName("JuanKeWaiJiaMingA_C2CW");
            entity.Property(e => e.NewSchoolCtrl005Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK SchoolCtrl005 新大學部 ID")
                .HasColumnName("newSchoolCtrl005Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分班')")
                .HasComment("舊班名稱")
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldDaShiueBuName)
                .HasMaxLength(128)
                .HasComment("舊大學部系所名稱")
                .HasColumnName("oldDaShiueBuName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasDefaultValueSql("(N'不分組')")
                .HasComment("舊組名稱")
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldSchoolCtrl005Id)
                .HasComment("FK SchoolCtrl005 舊大學部 ID")
                .HasColumnName("oldSchoolCtrl005Id");
            entity.Property(e => e.SiJiJinXiuBuCw)
                .HasComment("四技進修部")
                .HasColumnName("SiJiJinXiuBuCW");
            entity.Property(e => e.SiJiZaiZhiZhuanBanCw)
                .HasComment("四技在職專班")
                .HasColumnName("SiJiZaiZhiZhuanBanCW");
            entity.Property(e => e.State002Id).HasComment("FK State002 系科所狀態 ID");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("大學部狀態改變年度")
                .HasColumnName("year");
            entity.Property(e => e.YiBanWaiJiaMingAC1cw)
                .HasComment("外加一般_C1")
                .HasColumnName("YiBanWaiJiaMingA_C1CW");
        });

        modelBuilder.Entity<SchoolCtrl011Old>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HS_GauJungBu");

            entity.ToTable("SchoolCtrl011_Old");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Auth001Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK Auth001 大學部狀態改變者 ID");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("狀態改變時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.NewSchoolCtrl005Id)
                .HasComment("FK SchoolCtrl005 新高中生 ID")
                .HasColumnName("newSchoolCtrl005Id");
            entity.Property(e => e.OldGauJungBuName)
                .HasMaxLength(128)
                .HasComment("舊高中生系所名稱")
                .HasColumnName("oldGauJungBuName");
            entity.Property(e => e.OldSchoolCtrl005Id)
                .HasComment("FK SchoolCtrl005 舊高中生 ID")
                .HasColumnName("oldSchoolCtrl005Id");
            entity.Property(e => e.State002Id).HasComment("FK State002 系科所狀態 ID");
            entity.Property(e => e.StopGauJrShengJqsA)
                .HasComment("是否停招招收「高職生」之名額A")
                .HasColumnName("stopGauJrShengJQS_A");
            entity.Property(e => e.StopGauJungShengHuLiLeiB3)
                .HasComment("是否停招無高職對應類科")
                .HasColumnName("stopGauJungShengHuLiLei_B3");
            entity.Property(e => e.StopGauJungShengHuaGungTuMuJianJuLeiJosB1)
                .HasComment("是否停招農業化工土木建築類B1")
                .HasColumnName("stopGauJungShengHuaGungTuMuJianJuLeiJOS_B1");
            entity.Property(e => e.StopGauJungShengWuGauJrDueiYingLeiB2)
                .HasComment("是否停招護理類B2")
                .HasColumnName("stopGauJungShengWuGauJrDueiYingLei_B2");
            entity.Property(e => e.StopGauJungShengYaoXueYuWenLeiB4)
                .HasComment("是否停招護理類")
                .HasColumnName("stopGauJungShengYaoXueYuWenLei_B4");
            entity.Property(e => e.StopJuanKeWaiJiaMingAjqsC2)
                .HasComment("是否停招一般外加名額")
                .HasColumnName("stopJuanKeWaiJiaMingAJQS_C2");
            entity.Property(e => e.StopYiBanWaiJiaMingAjqsC1)
                .HasComment("是否停招藥學語文類")
                .HasColumnName("stopYiBanWaiJiaMingAJQS_C1");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("高中生狀態改變年度")
                .HasColumnName("year");
        });

        modelBuilder.Entity<SchoolCtrl012>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HS_JuanKeBu");

            entity.ToTable("SchoolCtrl012", tb => tb.HasTrigger("TR_SchoolCtrl012_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK Auth001 大學部狀態改變者 ID");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("狀態改變時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoCw)
                .HasComment("進修專校")
                .HasColumnName("ErZhuanJinXiuZhuanXiaoCW");
            entity.Property(e => e.ErZhuanRiJianBuCw)
                .HasComment("二專日間部")
                .HasColumnName("ErZhuanRiJianBuCW");
            entity.Property(e => e.ErZhuanYeJianBuCw)
                .HasComment("二專夜間部")
                .HasColumnName("ErZhuanYeJianBuCW");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanCw)
                .HasComment("二專在職專班")
                .HasColumnName("ErZhuanZaiZhiZhuanBanCW");
            entity.Property(e => e.NewSchoolCtrl007Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK SchoolCtrl007 新專科 ID")
                .HasColumnName("newSchoolCtrl007Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasComment("舊班別名稱")
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasComment("舊組別名稱")
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldJuanKeBuName)
                .HasMaxLength(128)
                .HasComment("舊專科系所名稱")
                .HasColumnName("oldJuanKeBuName");
            entity.Property(e => e.OldSchoolCtrl007Id)
                .HasComment("FK SchoolCtrl007 舊專科 ID")
                .HasColumnName("oldSchoolCtrl007Id");
            entity.Property(e => e.State002Id).HasComment("FK State002 系科所狀態 ID");
            entity.Property(e => e.WuZhuanCw)
                .HasComment("五專能寫?")
                .HasColumnName("WuZhuanCW");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("專科狀態改變年度")
                .HasColumnName("year");
        });

        modelBuilder.Entity<SchoolCtrl013>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HS_GauJrGuoJungGuoShiauBu");

            entity.ToTable("SchoolCtrl013", tb => tb.HasTrigger("TR_SchoolCtrl013_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.ApprovedUnit).HasMaxLength(50);
            entity.Property(e => e.Auth001Id)
                .HasDefaultValueSql("((1))")
                .HasComment("FK Auth001 大學部狀態改變者 ID");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("狀態改變時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.GauJrShengCw)
                .HasComment("高職")
                .HasColumnName("GauJrShengCW");
            entity.Property(e => e.GuoJungShengCw)
                .HasComment("國中")
                .HasColumnName("GuoJungShengCW");
            entity.Property(e => e.GuoShiauShengCw)
                .HasComment("國小")
                .HasColumnName("GuoShiauShengCW");
            entity.Property(e => e.NewSchoolCtrl008Id)
                .HasDefaultValueSql("((0))")
                .HasComment("FK SchoolCtrl007 新高職、國中、國小 ID")
                .HasColumnName("newSchoolCtrl008Id");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OldClassName)
                .HasMaxLength(128)
                .HasComment("舊班別名稱")
                .HasColumnName("oldClassName");
            entity.Property(e => e.OldGauJrGuoJungGuoShiauBuName)
                .HasMaxLength(128)
                .HasComment("舊高職、國中、國小系所名稱")
                .HasColumnName("oldGauJrGuoJungGuoShiauBuName");
            entity.Property(e => e.OldGroupName)
                .HasMaxLength(128)
                .HasComment("舊組別名稱")
                .HasColumnName("oldGroupName");
            entity.Property(e => e.OldSchoolCtrl008Id)
                .HasComment("FK SchoolCtrl007 舊高職、國中、國小 ID")
                .HasColumnName("oldSchoolCtrl008Id");
            entity.Property(e => e.State002Id).HasComment("FK State002 系科所狀態 ID");
            entity.Property(e => e.Year)
                .HasMaxLength(16)
                .HasComment("高職、國中、國小狀態改變年度")
                .HasColumnName("year");
        });

        modelBuilder.Entity<SchoolCtrl014>(entity =>
        {
            entity.ToTable("SchoolCtrl014");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Conditions)
                .HasMaxLength(128)
                .HasComment("適用條件(A,B,C)");
            entity.Property(e => e.NewEnrollment)
                .HasMaxLength(128)
                .HasComment("104學年度全校新生註冊率");
            entity.Property(e => e.Note).HasComment("備註");
            entity.Property(e => e.OldEnrollment)
                .HasMaxLength(128)
                .HasComment("103學年度全校新生註冊率");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 Id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasComment("學校名稱");
            entity.Property(e => e.SchoolNum).HasComment("學校校基庫代碼");
            entity.Property(e => e.TotalNum).HasComment("總量代碼");
        });

        modelBuilder.Entity<SchoolFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Persons__3214EC275A4F643B");

            entity.ToTable("SchoolFile");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<State001>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_F_State");

            entity.ToTable("State001", tb => tb.HasTrigger("TR_State001_Modify"));

            entity.Property(e => e.Id)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.StateName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.StatePhase)
                .HasMaxLength(128)
                .IsUnicode(false);
        });

        modelBuilder.Entity<State002>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SDadjust");

            entity.ToTable("State002", tb => tb.HasTrigger("TR_State002_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.AdjustName)
                .HasMaxLength(128)
                .HasComment("系科所狀態名稱")
                .HasColumnName("adjustName");
            entity.Property(e => e.Auth001Id).HasComment("FK Auth001 系科所狀態建立者ID");
            entity.Property(e => e.EditTime)
                .HasDefaultValueSql("(getdate())")
                .HasComment("系科所狀態建立時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<State003>(entity =>
        {
            entity.ToTable("State003", tb => tb.HasTrigger("TR_State003_Modify"));

            entity.Property(e => e.Degree).HasMaxLength(128);
        });

        modelBuilder.Entity<State004>(entity =>
        {
            entity.ToTable("State004", tb => tb.HasTrigger("TR_State004_Modify"));

            entity.Property(e => e.Category).HasMaxLength(16);
            entity.Property(e => e.CategoryName).HasMaxLength(256);
            entity.Property(e => e.Ps).HasColumnName("PS");
        });

        modelBuilder.Entity<State005>(entity =>
        {
            entity.ToTable("State005", tb => tb.HasTrigger("TR_State005_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.GuanKongLeiName)
                .HasMaxLength(128)
                .HasComment("管制類名稱");
        });

        modelBuilder.Entity<State006>(entity =>
        {
            entity.ToTable("State006", tb => tb.HasTrigger("TR_State006_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.StateName)
                .HasMaxLength(128)
                .HasComment("狀態名稱");
        });

        modelBuilder.Entity<State007>(entity =>
        {
            entity.ToTable("State007", tb => tb.HasTrigger("TR_State007_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.ItemValue)
                .HasMaxLength(3)
                .HasComment("SelectItem Value");
            entity.Property(e => e.ViewName)
                .HasMaxLength(30)
                .HasComment("View程式名稱");
        });

        modelBuilder.Entity<State007003>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("State007_003");

            entity.Property(e => e.Degree).HasMaxLength(128);
            entity.Property(e => e.ItemValue).HasMaxLength(3);
            entity.Property(e => e.ViewName).HasMaxLength(30);
        });

        modelBuilder.Entity<State008>(entity =>
        {
            entity.ToTable("State008", tb => tb.HasTrigger("TR_State008_Modify"));

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasComment("PK");
            entity.Property(e => e.FormRule).HasComment("檢核規則文字顯示");
            entity.Property(e => e.State004Id).HasComment("FK State004 表B 學制調整 ID");
        });

        modelBuilder.Entity<State008State004>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("State008_State004");

            entity.Property(e => e.Category).HasMaxLength(16);
            entity.Property(e => e.CategoryName).HasMaxLength(256);
            entity.Property(e => e.FormRule).HasColumnType("text");
            entity.Property(e => e.Ps)
                .HasColumnType("text")
                .HasColumnName("PS");
        });

        modelBuilder.Entity<State009>(entity =>
        {
            entity.ToTable("State009", tb => tb.HasTrigger("TR_State009_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Area)
                .HasMaxLength(30)
                .HasComment("護理農業化工及土木領域");
            entity.Property(e => e.Field)
                .HasMaxLength(30)
                .HasComment("用途名稱(當群組使用)");
        });

        modelBuilder.Entity<State010>(entity =>
        {
            entity.ToTable("State010");

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasComment("統計群別名稱")
                .HasColumnName("departmentAreaName");
        });

        modelBuilder.Entity<State011>(entity =>
        {
            entity.ToTable("State011");

            entity.Property(e => e.Id).HasComment("PK 增設類別 編碼");
            entity.Property(e => e.OneForm000Id).HasComment("FK 一階表單名稱 編碼");
            entity.Property(e => e.State011Name)
                .HasMaxLength(128)
                .HasComment("增設類別名稱");
        });

        modelBuilder.Entity<State012>(entity =>
        {
            entity.ToTable("State012");

            entity.Property(e => e.Id).HasComment("PK 招生學制  編碼");
            entity.Property(e => e.OneForm000Id).HasComment("FK 一階表單名稱 編碼");
            entity.Property(e => e.State012Name)
                .HasMaxLength(128)
                .HasComment("招生學制 名稱");
        });

        modelBuilder.Entity<State013>(entity =>
        {
            entity.ToTable("State013");

            entity.Property(e => e.Id).HasComment("PK 建議送審類別 編碼");
            entity.Property(e => e.State013Name)
                .HasMaxLength(128)
                .HasComment("建議送審類別");
        });

        modelBuilder.Entity<State013A01>(entity =>
        {
            entity.ToTable("State013A01");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.State013NameA01)
                .HasMaxLength(50)
                .HasComment("建議送審類別(博士班)");
        });

        modelBuilder.Entity<State014>(entity =>
        {
            entity.ToTable("State014");

            entity.Property(e => e.Id).HasComment("PK 本案是否申請過 編碼");
            entity.Property(e => e.State014Name)
                .HasMaxLength(128)
                .HasComment("本案是否申請過");
        });

        modelBuilder.Entity<State015>(entity =>
        {
            entity.ToTable("State015");

            entity.Property(e => e.Id).HasComment("PK 增設別 編碼");
            entity.Property(e => e.OneForm000Id).HasComment("FK 一階表單名稱 編碼");
            entity.Property(e => e.State015Name)
                .HasMaxLength(128)
                .HasComment("增設別名稱");
        });

        modelBuilder.Entity<State016>(entity =>
        {
            entity.ToTable("State016");

            entity.Property(e => e.Id).HasComment("PK 評鑑成績 編碼");
            entity.Property(e => e.State016Name)
                .HasMaxLength(128)
                .HasComment("評鑑成績名稱");
        });

        modelBuilder.Entity<State017>(entity =>
        {
            entity.ToTable("State017");

            entity.Property(e => e.Id).HasComment("PK 設立年限 編碼");
            entity.Property(e => e.State017Name)
                .HasMaxLength(128)
                .HasComment("設立年限名稱");
        });

        modelBuilder.Entity<State018>(entity =>
        {
            entity.ToTable("State018");

            entity.Property(e => e.Id).HasComment("PK 是/否 編碼");
            entity.Property(e => e.State018Name)
                .HasMaxLength(128)
                .HasComment("是/否");
        });

        modelBuilder.Entity<State019>(entity =>
        {
            entity.ToTable("State019");

            entity.Property(e => e.AreaName).HasMaxLength(50);
        });

        modelBuilder.Entity<State022>(entity =>
        {
            entity.ToTable("State022");

            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
        });

        modelBuilder.Entity<State023>(entity =>
        {
            entity.ToTable("State023");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicationCategory)
                .HasMaxLength(50)
                .HasComment("博士班申請類別");
        });

        modelBuilder.Entity<State024>(entity =>
        {
            entity.ToTable("State024");

            entity.Property(e => e.DepartmentName).HasMaxLength(50);
        });

        modelBuilder.Entity<Statistics007>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("Statistics007");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.RowId).HasColumnName("rowId");
            entity.Property(e => e.學年度).HasMaxLength(16);
            entity.Property(e => e.學校代碼).HasMaxLength(16);
            entity.Property(e => e.學校名稱).HasMaxLength(128);
            entity.Property(e => e.招生類別)
                .HasMaxLength(23)
                .IsUnicode(false);
            entity.Property(e => e.系所名稱).HasMaxLength(384);
            entity.Property(e => e.系所類別).HasMaxLength(128);
            entity.Property(e => e.院名稱).HasMaxLength(128);
        });

        modelBuilder.Entity<SysCtrl001>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Menu");

            entity.ToTable("SysCtrl001", tb => tb.HasTrigger("TR_SysCtrl001_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.Action)
                .HasMaxLength(128)
                .HasComment("程式的Action名稱");
            entity.Property(e => e.Area).HasMaxLength(128);
            entity.Property(e => e.Controller)
                .HasMaxLength(128)
                .HasComment("程式的control名稱");
            entity.Property(e => e.EndTime)
                .HasComment("menu 停止使用時間")
                .HasColumnType("datetime")
                .HasColumnName("endTime");
            entity.Property(e => e.MenuName)
                .HasMaxLength(128)
                .HasComment("menu名稱")
                .HasColumnName("menuName");
            entity.Property(e => e.OrderSerial)
                .HasMaxLength(128)
                .HasComment("子menu順序(1最小)")
                .HasColumnName("orderSerial");
            entity.Property(e => e.ParentId)
                .HasComment("FK  自己 Id")
                .HasColumnName("parentId");
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasComment("可使用此menu的角色 SysCtrl002 的roleRange")
                .HasColumnName("roleRange");
            entity.Property(e => e.RouteValues)
                .HasMaxLength(128)
                .HasComment("目前沒用到")
                .HasColumnName("routeValues");
            entity.Property(e => e.StartTime)
                .HasComment("menu 可執行時間")
                .HasColumnType("datetime")
                .HasColumnName("startTime");
            entity.Property(e => e.State)
                .HasMaxLength(128)
                .HasComment("menu 狀態 (開啟,關閉)");
            entity.Property(e => e.Url)
                .HasMaxLength(128)
                .HasComment("menu 的 url 位置");
        });

        modelBuilder.Entity<SysCtrl002>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Role");

            entity.ToTable("SysCtrl002", tb => tb.HasTrigger("TR_SysCtrl002_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.HaveMenu)
                .HasMaxLength(128)
                .HasComment("使用者可用menu")
                .HasColumnName("haveMenu");
            entity.Property(e => e.HaveRange)
                .HasMaxLength(128)
                .HasComment("使用者可管理的角色代碼")
                .HasColumnName("haveRange");
            entity.Property(e => e.RoleName)
                .HasMaxLength(128)
                .HasComment("使用者角色名稱")
                .HasColumnName("roleName");
            entity.Property(e => e.RoleRange)
                .HasMaxLength(128)
                .HasComment("使用者角色代碼")
                .HasColumnName("roleRange");
        });

        modelBuilder.Entity<SysCtrl003>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_nowYear");

            entity.ToTable("SysCtrl003", tb => tb.HasTrigger("TR_SysCtrl003_Modify"));

            entity.Property(e => e.Id).HasComment("PK");
            entity.Property(e => e.LasteditTime)
                .HasColumnType("datetime")
                .HasColumnName("lasteditTime");
            entity.Property(e => e.VarName)
                .HasMaxLength(32)
                .HasColumnName("varName");
            entity.Property(e => e.VarValue)
                .HasMaxLength(16)
                .HasColumnName("varValue");
        });

        modelBuilder.Entity<SysCtrl004>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_NForm001");

            entity.ToTable("SysCtrl004", tb => tb.HasTrigger("TR_SysCtrl004_Modify"));

            entity.Property(e => e.Ps)
                .HasMaxLength(256)
                .HasColumnName("PS");
        });

        modelBuilder.Entity<SysCtrl004State003004>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SysCtrl004_State003_004");

            entity.Property(e => e.Category).HasMaxLength(16);
            entity.Property(e => e.CategoryName).HasMaxLength(256);
            entity.Property(e => e.InDegree).HasMaxLength(128);
            entity.Property(e => e.OutDegree).HasMaxLength(128);
            entity.Property(e => e.Ps)
                .HasMaxLength(256)
                .HasColumnName("PS");
        });

        modelBuilder.Entity<TeacherCourseDept>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Teacher_CourseDept");

            entity.Property(e => e.CourseCode).HasMaxLength(30);
            entity.Property(e => e.DepartmentName).HasMaxLength(50);
            entity.Property(e => e.DepartmentTypeCode).HasMaxLength(2);
            entity.Property(e => e.DepartmentTypeName).HasMaxLength(20);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolSystemCode).HasMaxLength(5);
            entity.Property(e => e.SchoolSystemName).HasMaxLength(20);
            entity.Property(e => e.Semester).HasMaxLength(2);
            entity.Property(e => e.TvedbschoolCode).HasColumnName("TVEDBSchoolCode");
        });

        modelBuilder.Entity<TeacherCourseProfile>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Teacher_CourseProfile");

            entity.Property(e => e.BreakType).HasMaxLength(2);
            entity.Property(e => e.CourseCategory).HasMaxLength(50);
            entity.Property(e => e.CourseCode).HasMaxLength(20);
            entity.Property(e => e.CourseHours).HasColumnType("decimal(6, 3)");
            entity.Property(e => e.CourseName).HasMaxLength(100);
            entity.Property(e => e.CourseType).HasMaxLength(5);
            entity.Property(e => e.CourseTypeName).HasMaxLength(50);
            entity.Property(e => e.Credits).HasColumnType("decimal(6, 3)");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Language).HasMaxLength(20);
            entity.Property(e => e.PraticalHours).HasColumnType("decimal(6, 3)");
            entity.Property(e => e.SchoolName).HasMaxLength(100);
            entity.Property(e => e.Semester).HasMaxLength(2);
            entity.Property(e => e.TvedbschoolCode).HasColumnName("TVEDBSchoolCode");
        });

        modelBuilder.Entity<TeacherCourseTeacher>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Teacher_CourseTeacher");

            entity.Property(e => e.CourseCode).HasMaxLength(20);
            entity.Property(e => e.HashId)
                .HasMaxLength(40)
                .HasColumnName("HashID");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Semester).HasMaxLength(2);
            entity.Property(e => e.TeacherId).HasColumnName("TeacherID");
            entity.Property(e => e.TeacherName).HasMaxLength(50);
            entity.Property(e => e.TvedbschoolCode).HasColumnName("TVEDBSchoolCode");
            entity.Property(e => e.WorkHours).HasColumnType("decimal(6, 3)");
        });

        modelBuilder.Entity<TeacherDepartmentList>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Teacher_DepartmentList");

            entity.Property(e => e.BelongDepartmentName).HasMaxLength(50);
            entity.Property(e => e.BelongDepartmentTypeCode).HasMaxLength(2);
            entity.Property(e => e.DepartmentName).HasMaxLength(100);
            entity.Property(e => e.DepartmentTypeCode).HasMaxLength(2);
            entity.Property(e => e.DepartmentTypeName).HasMaxLength(10);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.MaxStudyYearLimit).HasColumnType("decimal(3, 1)");
            entity.Property(e => e.MoeadepartmentCode)
                .HasMaxLength(20)
                .HasColumnName("MOEADepartmentCode");
            entity.Property(e => e.MoeaschoolCode)
                .HasMaxLength(5)
                .HasColumnName("MOEASchoolCode");
            entity.Property(e => e.NormalStudyYearLimit).HasColumnType("decimal(3, 1)");
            entity.Property(e => e.SchoolName).HasMaxLength(100);
            entity.Property(e => e.SchoolSystemCode).HasMaxLength(5);
            entity.Property(e => e.SchoolSystemName).HasMaxLength(20);
            entity.Property(e => e.SpecialClassTypeName).HasMaxLength(20);
        });

        modelBuilder.Entity<TeacherTeacherProfile>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Teacher_TeacherProfile");

            entity.Property(e => e.AdminstrationJobName).HasMaxLength(100);
            entity.Property(e => e.AppointmentLevel).HasMaxLength(10);
            entity.Property(e => e.AppointmentNo).HasMaxLength(50);
            entity.Property(e => e.AppointmentType).HasMaxLength(2);
            entity.Property(e => e.CertificateLevel).HasMaxLength(5);
            entity.Property(e => e.CertificateNo).HasMaxLength(50);
            entity.Property(e => e.ChineseName).HasMaxLength(50);
            entity.Property(e => e.DepartmentTypeCode).HasMaxLength(2);
            entity.Property(e => e.DepartmentTypeName).HasMaxLength(10);
            entity.Property(e => e.Division).HasMaxLength(2);
            entity.Property(e => e.Education).HasMaxLength(100);
            entity.Property(e => e.EducationDept).HasMaxLength(100);
            entity.Property(e => e.EducationSchoolName).HasMaxLength(100);
            entity.Property(e => e.Expertise).HasMaxLength(500);
            entity.Property(e => e.HashId)
                .HasMaxLength(40)
                .HasColumnName("Hash_ID");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.IdentityType).HasMaxLength(3);
            entity.Property(e => e.JobType).HasMaxLength(10);
            entity.Property(e => e.MainDepartmentName).HasMaxLength(50);
            entity.Property(e => e.SchoolName).HasMaxLength(100);
            entity.Property(e => e.Semister).HasMaxLength(2);
            entity.Property(e => e.Status).HasMaxLength(50);
            entity.Property(e => e.TeacherCategory).HasMaxLength(20);
            entity.Property(e => e.TeacherId).HasColumnName("TeacherID");
            entity.Property(e => e.TvedbschoolCode).HasColumnName("TVEDBSchoolCode");
            entity.Property(e => e.WorkHoursPerWeek).HasColumnType("decimal(6, 3)");
        });

        modelBuilder.Entity<TlcTable115Original>(entity =>
        {
            entity.ToTable("TLC_TABLE1_15_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable11Original>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TLC_TABLE4_1_1_ORIGINAL");

            entity.ToTable("TLC_TABLE1_1_ORIGINAL");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.兼任教師每周授課時數每週2小時含以上).HasColumnType("decimal(28, 2)");
        });

        modelBuilder.Entity<TlcTable122Original>(entity =>
        {
            entity.ToTable("TLC_TABLE1_2_2_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable14Original>(entity =>
        {
            entity.ToTable("TLC_TABLE1_4_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.進修時數).HasColumnType("decimal(10, 3)");
        });

        modelBuilder.Entity<TlcTable15Original>(entity =>
        {
            entity.ToTable("TLC_TABLE1_5_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable16Original>(entity =>
        {
            entity.ToTable("TLC_TABLE1_6_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.每件簽約回饋金).HasColumnType("decimal(18, 3)");
            entity.Property(e => e.每件簽約時數).HasColumnType("decimal(10, 3)");
        });

        modelBuilder.Entity<TlcTable19Original>(entity =>
        {
            entity.ToTable("TLC_TABLE1_9_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable212Original>(entity =>
        {
            entity.ToTable("TLC_TABLE2_1_2_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable213Original>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TLC_TABLE2_1_3ORIGINAL");

            entity.ToTable("TLC_TABLE2_1_3_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable27Original>(entity =>
        {
            entity.ToTable("TLC_TABLE2_7_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable31Original>(entity =>
        {
            entity.ToTable("TLC_TABLE3_1_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.其他畢業學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校內必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校內選修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校外必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校外選修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業專業必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業專業選修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業通識共同必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業通識共同選修學分數).HasColumnType("decimal(6, 1)");
        });

        modelBuilder.Entity<TlcTable35Original>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TCL_TABLE3_5_ORIGINAL");

            entity.ToTable("TLC_TABLE3_5_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.實習時數).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.授課時數).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.課程時數).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.開課學分數).HasColumnType("decimal(5, 2)");
        });

        modelBuilder.Entity<TlcTable412Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_1_2_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.畢業生女).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.畢業生男).HasColumnType("decimal(5, 0)");
        });

        modelBuilder.Entity<TlcTable41Original>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("TLC_TABLE_4_1_ORIGINAL_pk")
                .IsClustered(false);

            entity.ToTable("TLC_TABLE_4_1_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.原住民畢業生女).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.原住民畢業生男).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.畢業生女).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.畢業生男).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.輔系畢業生女).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.輔系畢業生男).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.雙主修畢業生女).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.雙主修畢業生男).HasColumnType("decimal(5, 0)");
        });

        modelBuilder.Entity<TlcTable423Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_2_3_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女)
                .HasComputedColumnSql("((([依就學辦法入學男]+[依就學辦法入學女])+[依一般身分入學男])+[依一般身分入學女])", false)
                .HasColumnName("男+女");
        });

        modelBuilder.Entity<TlcTable425Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_2_5_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable427Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_2_7_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女)
                .HasComputedColumnSql("([全學年均於國外之學生總人數本國籍男]+[全學年均於國外之學生總人數本國籍女])", false)
                .HasColumnName("男+女");
        });

        modelBuilder.Entity<TlcTable428Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_2_8_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable429Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_2_9_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
        });

        modelBuilder.Entity<TlcTable42Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_2_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女)
                .HasComputedColumnSql("([男]+[女])", false)
                .HasColumnName("男+女");
        });

        modelBuilder.Entity<TlcTable472Original>(entity =>
        {
            entity.ToTable("TLC_TABLE4_7_2_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女)
                .HasComputedColumnSql("(([全學年全部學分總人數男]+[全學年全部學分總人數女])-([外籍生人數男]+[外籍生人數女]))", false)
                .HasColumnName("男+女");
        });

        modelBuilder.Entity<TlcTable81Original>(entity =>
        {
            entity.ToTable("TLC_TABLE8_1_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.使用執照之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.使用執照之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("使用執照之樓地板面積(不含地下室)");
            entity.Property(e => e.使用執照取得情形).HasComment("文字：是，否");
            entity.Property(e => e.使用執照總面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.僅需申請雜項執照之地上改良物).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.其他提供予正式學籍學生活動教學研究之使用校舍建築)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("其他提供予正式學籍學生活動、教學、研究之使用校舍建築");
            entity.Property(e => e.其他面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.出租借情況)
                .HasComment("文字：自行使用，部份面積出租(借)給其他(校外)單位使用，全部出租(借)給其他(校外)單位使用")
                .HasColumnName("出租(借)情況");
            entity.Property(e => e.學期).HasComment("文字：上，下");
            entity.Property(e => e.學校附屬機構).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.學生宿舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.專供推廣教育使用).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.對外營業者).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.建物安全鑑定通過情形).HasComment("文字：1、1, 2、2、--");
            entity.Property(e => e.建築樓層數地下樓層).HasColumnName("建築樓層數 (地下樓層)");
            entity.Property(e => e.建築樓層數扣除地下樓層).HasColumnName("建築樓層數 (扣除地下樓層)");
            entity.Property(e => e.所有權狀之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.所有權狀之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("所有權狀之樓地板面積(不含地下室)");
            entity.Property(e => e.所有權狀面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.教職員宿舍包含教職員宿舍學人宿舍校長宿舍等)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("教職員宿舍(包含教職員宿舍、學人宿舍、校長宿舍等)");
            entity.Property(e => e.明顯與學生活動教學研究無關者)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("明顯與學生活動、教學、研究無關者");
            entity.Property(e => e.校區).HasComment("文字：分部，校本部，實習農場、附設醫院及附設實習會館、旅館");
            entity.Property(e => e.權屬別).HasComment("文字：自有，租賃");
            entity.Property(e => e.無須申請建築執照之房舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.租賃宿舍是否符合土地使用分區管制規定).HasComment("文字：是，-");
            entity.Property(e => e.興建狀況).HasComment("文字：已完成，興建中，未發包");
        });

        modelBuilder.Entity<TlcTable83Original>(entity =>
        {
            entity.ToTable("TLC_TABLE8_3_ORIGINAL");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.RuleYnCn).HasColumnName("rule_yn_cn");
            entity.Property(e => e.使用執照面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.床位數女).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.床位數男).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.所有權狀面積).HasColumnType("decimal(8, 2)");
            entity.Property(e => e.收費標準最低).HasColumnType("decimal(6, 0)");
            entity.Property(e => e.收費標準最高).HasColumnType("decimal(6, 0)");
            entity.Property(e => e.機構或公司業主).HasColumnName("機構(或公司/業主)");
            entity.Property(e => e.租金平均標準女).HasColumnType("decimal(8, 0)");
            entity.Property(e => e.租金平均標準男).HasColumnType("decimal(8, 0)");
        });

        modelBuilder.Entity<TotalAdminSubmitNform000>(entity =>
        {
            entity.ToTable("TotalAdminSubmitNForm000");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Note).HasMaxLength(400);
            entity.Property(e => e.Year).HasMaxLength(50);
        });

        modelBuilder.Entity<TwoFormSchoolUploadFile>(entity =>
        {
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid).HasMaxLength(50);
            entity.Property(e => e.Year).HasMaxLength(32);
        });

        modelBuilder.Entity<TwoNformUpload>(entity =>
        {
            entity.ToTable("TwoNFormUpload");

            entity.Property(e => e.Id).HasComment("PK 總量二階上傳 編碼");
            entity.Property(e => e.EditAuth001)
                .HasComment("創建/修改者")
                .HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasComment("創建/修改時間")
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid)
                .HasMaxLength(50)
                .HasComment("檔案實存名稱");
            entity.Property(e => e.FileName).HasComment("檔案名稱");
            entity.Property(e => e.FilePath).HasComment("檔案路徑");
            entity.Property(e => e.SchoolCtrl001Id).HasComment("FK SchoolCtrl001 學校 編碼");
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasComment("學年度");
        });

        modelBuilder.Entity<ViewBoardPublish>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewBoardPublish");

            entity.Property(e => e.BoardTime).HasColumnName("boardTime");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(50)
                .HasColumnName("categoryName");
            entity.Property(e => e.Contents).HasColumnName("contents");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime).HasColumnName("editTime");
            entity.Property(e => e.FileEditAuth001Id).HasColumnName("fileEditAuth001Id");
            entity.Property(e => e.FileEditTime).HasColumnName("fileEditTime");
            entity.Property(e => e.FileGuid)
                .HasMaxLength(50)
                .HasColumnName("fileGuid");
            entity.Property(e => e.FileId).HasColumnName("fileId");
            entity.Property(e => e.FileName)
                .HasMaxLength(50)
                .HasColumnName("fileName");
            entity.Property(e => e.FilePath)
                .HasMaxLength(300)
                .HasColumnName("filePath");
            entity.Property(e => e.Title).HasColumnName("title");
        });

        modelBuilder.Entity<ViewExamineWriterResultExport>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewExamineWriterResult_Export");

            entity.Property(e => e.Adjustment).HasMaxLength(50);
            entity.Property(e => e.Content1).HasColumnName("content1");
            entity.Property(e => e.Content2).HasColumnName("content2");
            entity.Property(e => e.Content3).HasColumnName("content3");
            entity.Property(e => e.Content4).HasColumnName("content4");
            entity.Property(e => e.Content5).HasColumnName("content5");
            entity.Property(e => e.Content6).HasColumnName("content6");
            entity.Property(e => e.Content7).HasColumnName("content7");
            entity.Property(e => e.ContentResult).HasMaxLength(50);
            entity.Property(e => e.ContentTotal).HasColumnName("contentTotal");
            entity.Property(e => e.Fpk)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasColumnName("FPK");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.WriterName).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewNform004Test>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("View_NForm004_Test");

            entity.Property(e => e.BoShiBanJqs).HasColumnName("BoShiBanJQS");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<ViewOneExamine001List>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine001List");

            entity.Property(e => e.E01Name)
                .HasMaxLength(128)
                .HasColumnName("e01Name");
            entity.Property(e => e.E02Name)
                .HasMaxLength(128)
                .HasColumnName("e02Name");
            entity.Property(e => e.E03Name)
                .HasMaxLength(128)
                .HasColumnName("e03Name");
            entity.Property(e => e.E04Name)
                .HasMaxLength(128)
                .HasColumnName("e04Name");
            entity.Property(e => e.E05Name)
                .HasMaxLength(128)
                .HasColumnName("e05Name");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Examine01ExamineState).HasMaxLength(50);
            entity.Property(e => e.Examine02ExamineState).HasMaxLength(50);
            entity.Property(e => e.Examine03ExamineState).HasMaxLength(50);
            entity.Property(e => e.Examine04ExamineState).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformId).HasColumnName("OneNFormId");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.RcName)
                .HasMaxLength(128)
                .HasColumnName("rcName");
            entity.Property(e => e.RecruitExamineState).HasMaxLength(50);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SerialName).HasMaxLength(200);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<ViewOneExamine002Auth001>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine002_Auth001");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExamineContent11).HasColumnName("ExamineContent1_1");
            entity.Property(e => e.ExamineContent12).HasColumnName("ExamineContent1_2");
            entity.Property(e => e.ExamineContent13).HasColumnName("ExamineContent1_3");
            entity.Property(e => e.ExamineContent14).HasColumnName("ExamineContent1_4");
            entity.Property(e => e.ExamineContent15).HasColumnName("ExamineContent1_5");
            entity.Property(e => e.ExamineContent21).HasColumnName("ExamineContent2_1");
            entity.Property(e => e.ExamineContent22).HasColumnName("ExamineContent2_2");
            entity.Property(e => e.ExamineContent23).HasColumnName("ExamineContent2_3");
            entity.Property(e => e.ExamineContent24).HasColumnName("ExamineContent2_4");
            entity.Property(e => e.ExamineContent25).HasColumnName("ExamineContent2_5");
            entity.Property(e => e.ExamineContent31).HasColumnName("ExamineContent3_1");
            entity.Property(e => e.ExamineContent32).HasColumnName("ExamineContent3_2");
            entity.Property(e => e.ExamineContent33).HasColumnName("ExamineContent3_3");
            entity.Property(e => e.ExamineContent34).HasColumnName("ExamineContent3_4");
            entity.Property(e => e.ExamineContent35).HasColumnName("ExamineContent3_5");
            entity.Property(e => e.ExamineContent41).HasColumnName("ExamineContent4_1");
            entity.Property(e => e.ExamineContent42).HasColumnName("ExamineContent4_2");
            entity.Property(e => e.ExamineContent43).HasColumnName("ExamineContent4_3");
            entity.Property(e => e.ExamineContent44).HasColumnName("ExamineContent4_4");
            entity.Property(e => e.ExamineContent45).HasColumnName("ExamineContent4_5");
            entity.Property(e => e.ExamineContent51).HasColumnName("ExamineContent5_1");
            entity.Property(e => e.ExamineContent52).HasColumnName("ExamineContent5_2");
            entity.Property(e => e.ExamineContent53).HasColumnName("ExamineContent5_3");
            entity.Property(e => e.ExamineContent54).HasColumnName("ExamineContent5_4");
            entity.Property(e => e.ExamineContent55).HasColumnName("ExamineContent5_5");
            entity.Property(e => e.ExamineContent61).HasColumnName("ExamineContent6_1");
            entity.Property(e => e.ExamineContent62).HasColumnName("ExamineContent6_2");
            entity.Property(e => e.ExamineContent63).HasColumnName("ExamineContent6_3");
            entity.Property(e => e.ExamineContent64).HasColumnName("ExamineContent6_4");
            entity.Property(e => e.ExamineContent65).HasColumnName("ExamineContent6_5");
            entity.Property(e => e.ExamineContent71).HasColumnName("ExamineContent7_1");
            entity.Property(e => e.ExamineContent72).HasColumnName("ExamineContent7_2");
            entity.Property(e => e.ExamineContent73).HasColumnName("ExamineContent7_3");
            entity.Property(e => e.ExamineContent74).HasColumnName("ExamineContent7_4");
            entity.Property(e => e.ExamineContent75).HasColumnName("ExamineContent7_5");
            entity.Property(e => e.ExamineContentResult).HasMaxLength(50);
            entity.Property(e => e.ExamineContentTotal1).HasColumnName("ExamineContentTotal_1");
            entity.Property(e => e.ExamineContentTotal2).HasColumnName("ExamineContentTotal_2");
            entity.Property(e => e.ExamineContentTotal3).HasColumnName("ExamineContentTotal_3");
            entity.Property(e => e.ExamineContentTotal4).HasColumnName("ExamineContentTotal_4");
            entity.Property(e => e.ExamineContentTotal5).HasColumnName("ExamineContentTotal_5");
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.Name).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneExamine002TotalView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine002TotalView");

            entity.Property(e => e.A1C11).HasColumnName("a1C1_1");
            entity.Property(e => e.A1C12).HasColumnName("a1C1_2");
            entity.Property(e => e.A1C13).HasColumnName("a1C1_3");
            entity.Property(e => e.A1C14).HasColumnName("a1C1_4");
            entity.Property(e => e.A1C15).HasColumnName("a1C1_5");
            entity.Property(e => e.A1C21).HasColumnName("a1C2_1");
            entity.Property(e => e.A1C22).HasColumnName("a1C2_2");
            entity.Property(e => e.A1C23).HasColumnName("a1C2_3");
            entity.Property(e => e.A1C24).HasColumnName("a1C2_4");
            entity.Property(e => e.A1C25).HasColumnName("a1C2_5");
            entity.Property(e => e.A1C31).HasColumnName("a1C3_1");
            entity.Property(e => e.A1C32).HasColumnName("a1C3_2");
            entity.Property(e => e.A1C33).HasColumnName("a1C3_3");
            entity.Property(e => e.A1C34).HasColumnName("a1C3_4");
            entity.Property(e => e.A1C35).HasColumnName("a1C3_5");
            entity.Property(e => e.A1C41).HasColumnName("a1C4_1");
            entity.Property(e => e.A1C42).HasColumnName("a1C4_2");
            entity.Property(e => e.A1C43).HasColumnName("a1C4_3");
            entity.Property(e => e.A1C44).HasColumnName("a1C4_4");
            entity.Property(e => e.A1C45).HasColumnName("a1C4_5");
            entity.Property(e => e.A1C51).HasColumnName("a1C5_1");
            entity.Property(e => e.A1C52).HasColumnName("a1C5_2");
            entity.Property(e => e.A1C53).HasColumnName("a1C5_3");
            entity.Property(e => e.A1C54).HasColumnName("a1C5_4");
            entity.Property(e => e.A1C55).HasColumnName("a1C5_5");
            entity.Property(e => e.A1C61).HasColumnName("a1C6_1");
            entity.Property(e => e.A1C62).HasColumnName("a1C6_2");
            entity.Property(e => e.A1C63).HasColumnName("a1C6_3");
            entity.Property(e => e.A1C64).HasColumnName("a1C6_4");
            entity.Property(e => e.A1C65).HasColumnName("a1C6_5");
            entity.Property(e => e.A1C71).HasColumnName("a1C7_1");
            entity.Property(e => e.A1C72).HasColumnName("a1C7_2");
            entity.Property(e => e.A1C73).HasColumnName("a1C7_3");
            entity.Property(e => e.A1C74).HasColumnName("a1C7_4");
            entity.Property(e => e.A1C75).HasColumnName("a1C7_5");
            entity.Property(e => e.A1Cresult)
                .HasMaxLength(50)
                .HasColumnName("a1CResult");
            entity.Property(e => e.A1Ctotal1).HasColumnName("a1CTotal_1");
            entity.Property(e => e.A1Ctotal2).HasColumnName("a1CTotal_2");
            entity.Property(e => e.A1Ctotal3).HasColumnName("a1CTotal_3");
            entity.Property(e => e.A1Ctotal4).HasColumnName("a1CTotal_4");
            entity.Property(e => e.A1Ctotal5).HasColumnName("a1CTotal_5");
            entity.Property(e => e.A1Name)
                .HasMaxLength(128)
                .HasColumnName("a1Name");
            entity.Property(e => e.A1State002).HasColumnName("a1State002");
            entity.Property(e => e.A2C11).HasColumnName("a2C1_1");
            entity.Property(e => e.A2C12).HasColumnName("a2C1_2");
            entity.Property(e => e.A2C13).HasColumnName("a2C1_3");
            entity.Property(e => e.A2C14).HasColumnName("a2C1_4");
            entity.Property(e => e.A2C15).HasColumnName("a2C1_5");
            entity.Property(e => e.A2C21).HasColumnName("a2C2_1");
            entity.Property(e => e.A2C22).HasColumnName("a2C2_2");
            entity.Property(e => e.A2C23).HasColumnName("a2C2_3");
            entity.Property(e => e.A2C24).HasColumnName("a2C2_4");
            entity.Property(e => e.A2C25).HasColumnName("a2C2_5");
            entity.Property(e => e.A2C31).HasColumnName("a2C3_1");
            entity.Property(e => e.A2C32).HasColumnName("a2C3_2");
            entity.Property(e => e.A2C33).HasColumnName("a2C3_3");
            entity.Property(e => e.A2C34).HasColumnName("a2C3_4");
            entity.Property(e => e.A2C35).HasColumnName("a2C3_5");
            entity.Property(e => e.A2C41).HasColumnName("a2C4_1");
            entity.Property(e => e.A2C42).HasColumnName("a2C4_2");
            entity.Property(e => e.A2C43).HasColumnName("a2C4_3");
            entity.Property(e => e.A2C44).HasColumnName("a2C4_4");
            entity.Property(e => e.A2C45).HasColumnName("a2C4_5");
            entity.Property(e => e.A2C51).HasColumnName("a2C5_1");
            entity.Property(e => e.A2C52).HasColumnName("a2C5_2");
            entity.Property(e => e.A2C53).HasColumnName("a2C5_3");
            entity.Property(e => e.A2C54).HasColumnName("a2C5_4");
            entity.Property(e => e.A2C55).HasColumnName("a2C5_5");
            entity.Property(e => e.A2C61).HasColumnName("a2C6_1");
            entity.Property(e => e.A2C62).HasColumnName("a2C6_2");
            entity.Property(e => e.A2C63).HasColumnName("a2C6_3");
            entity.Property(e => e.A2C64).HasColumnName("a2C6_4");
            entity.Property(e => e.A2C65).HasColumnName("a2C6_5");
            entity.Property(e => e.A2C71).HasColumnName("a2C7_1");
            entity.Property(e => e.A2C72).HasColumnName("a2C7_2");
            entity.Property(e => e.A2C73).HasColumnName("a2C7_3");
            entity.Property(e => e.A2C74).HasColumnName("a2C7_4");
            entity.Property(e => e.A2C75).HasColumnName("a2C7_5");
            entity.Property(e => e.A2Cresult)
                .HasMaxLength(50)
                .HasColumnName("a2CResult");
            entity.Property(e => e.A2Ctotal1).HasColumnName("a2CTotal_1");
            entity.Property(e => e.A2Ctotal2).HasColumnName("a2CTotal_2");
            entity.Property(e => e.A2Ctotal3).HasColumnName("a2CTotal_3");
            entity.Property(e => e.A2Ctotal4).HasColumnName("a2CTotal_4");
            entity.Property(e => e.A2Ctotal5).HasColumnName("a2CTotal_5");
            entity.Property(e => e.A2Name)
                .HasMaxLength(128)
                .HasColumnName("a2Name");
            entity.Property(e => e.A2State002).HasColumnName("a2State002");
            entity.Property(e => e.A3C11).HasColumnName("a3C1_1");
            entity.Property(e => e.A3C12).HasColumnName("a3C1_2");
            entity.Property(e => e.A3C13).HasColumnName("a3C1_3");
            entity.Property(e => e.A3C14).HasColumnName("a3C1_4");
            entity.Property(e => e.A3C15).HasColumnName("a3C1_5");
            entity.Property(e => e.A3C21).HasColumnName("a3C2_1");
            entity.Property(e => e.A3C22).HasColumnName("a3C2_2");
            entity.Property(e => e.A3C23).HasColumnName("a3C2_3");
            entity.Property(e => e.A3C24).HasColumnName("a3C2_4");
            entity.Property(e => e.A3C25).HasColumnName("a3C2_5");
            entity.Property(e => e.A3C31).HasColumnName("a3C3_1");
            entity.Property(e => e.A3C32).HasColumnName("a3C3_2");
            entity.Property(e => e.A3C33).HasColumnName("a3C3_3");
            entity.Property(e => e.A3C34).HasColumnName("a3C3_4");
            entity.Property(e => e.A3C35).HasColumnName("a3C3_5");
            entity.Property(e => e.A3C41).HasColumnName("a3C4_1");
            entity.Property(e => e.A3C42).HasColumnName("a3C4_2");
            entity.Property(e => e.A3C43).HasColumnName("a3C4_3");
            entity.Property(e => e.A3C44).HasColumnName("a3C4_4");
            entity.Property(e => e.A3C45).HasColumnName("a3C4_5");
            entity.Property(e => e.A3C51).HasColumnName("a3C5_1");
            entity.Property(e => e.A3C52).HasColumnName("a3C5_2");
            entity.Property(e => e.A3C53).HasColumnName("a3C5_3");
            entity.Property(e => e.A3C54).HasColumnName("a3C5_4");
            entity.Property(e => e.A3C55).HasColumnName("a3C5_5");
            entity.Property(e => e.A3C61).HasColumnName("a3C6_1");
            entity.Property(e => e.A3C62).HasColumnName("a3C6_2");
            entity.Property(e => e.A3C63).HasColumnName("a3C6_3");
            entity.Property(e => e.A3C64).HasColumnName("a3C6_4");
            entity.Property(e => e.A3C65).HasColumnName("a3C6_5");
            entity.Property(e => e.A3C71).HasColumnName("a3C7_1");
            entity.Property(e => e.A3C72).HasColumnName("a3C7_2");
            entity.Property(e => e.A3C73).HasColumnName("a3C7_3");
            entity.Property(e => e.A3C74).HasColumnName("a3C7_4");
            entity.Property(e => e.A3C75).HasColumnName("a3C7_5");
            entity.Property(e => e.A3Cresult)
                .HasMaxLength(50)
                .HasColumnName("a3CResult");
            entity.Property(e => e.A3Ctotal1).HasColumnName("a3CTotal_1");
            entity.Property(e => e.A3Ctotal2).HasColumnName("a3CTotal_2");
            entity.Property(e => e.A3Ctotal3).HasColumnName("a3CTotal_3");
            entity.Property(e => e.A3Ctotal4).HasColumnName("a3CTotal_4");
            entity.Property(e => e.A3Ctotal5).HasColumnName("a3CTotal_5");
            entity.Property(e => e.A3Name)
                .HasMaxLength(128)
                .HasColumnName("a3Name");
            entity.Property(e => e.A3State002).HasColumnName("a3State002");
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineDeadLineA1)
                .HasMaxLength(32)
                .HasColumnName("ExamineDeadLine_a1");
            entity.Property(e => e.ExamineDeadLineA2)
                .HasMaxLength(32)
                .HasColumnName("ExamineDeadLine_a2");
            entity.Property(e => e.ExamineDeadLineA3)
                .HasMaxLength(32)
                .HasColumnName("ExamineDeadLine_a3");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneNformId).HasColumnName("OneNFormId");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.Rc11).HasColumnName("RC1_1");
            entity.Property(e => e.Rc12).HasColumnName("RC1_2");
            entity.Property(e => e.Rc13).HasColumnName("RC1_3");
            entity.Property(e => e.Rc14).HasColumnName("RC1_4");
            entity.Property(e => e.Rc15).HasColumnName("RC1_5");
            entity.Property(e => e.Rc21).HasColumnName("RC2_1");
            entity.Property(e => e.Rc22).HasColumnName("RC2_2");
            entity.Property(e => e.Rc23).HasColumnName("RC2_3");
            entity.Property(e => e.Rc24).HasColumnName("RC2_4");
            entity.Property(e => e.Rc25).HasColumnName("RC2_5");
            entity.Property(e => e.Rc31).HasColumnName("RC3_1");
            entity.Property(e => e.Rc32).HasColumnName("RC3_2");
            entity.Property(e => e.Rc33).HasColumnName("RC3_3");
            entity.Property(e => e.Rc34).HasColumnName("RC3_4");
            entity.Property(e => e.Rc35).HasColumnName("RC3_5");
            entity.Property(e => e.Rc41).HasColumnName("RC4_1");
            entity.Property(e => e.Rc42).HasColumnName("RC4_2");
            entity.Property(e => e.Rc43).HasColumnName("RC4_3");
            entity.Property(e => e.Rc44).HasColumnName("RC4_4");
            entity.Property(e => e.Rc45).HasColumnName("RC4_5");
            entity.Property(e => e.Rc51).HasColumnName("RC5_1");
            entity.Property(e => e.Rc52).HasColumnName("RC5_2");
            entity.Property(e => e.Rc53).HasColumnName("RC5_3");
            entity.Property(e => e.Rc54).HasColumnName("RC5_4");
            entity.Property(e => e.Rc55).HasColumnName("RC5_5");
            entity.Property(e => e.Rc61).HasColumnName("RC6_1");
            entity.Property(e => e.Rc62).HasColumnName("RC6_2");
            entity.Property(e => e.Rc63).HasColumnName("RC6_3");
            entity.Property(e => e.Rc64).HasColumnName("RC6_4");
            entity.Property(e => e.Rc65).HasColumnName("RC6_5");
            entity.Property(e => e.Rc71).HasColumnName("RC7_1");
            entity.Property(e => e.Rc72).HasColumnName("RC7_2");
            entity.Property(e => e.Rc73).HasColumnName("RC7_3");
            entity.Property(e => e.Rc74).HasColumnName("RC7_4");
            entity.Property(e => e.Rc75).HasColumnName("RC7_5");
            entity.Property(e => e.Rcresult)
                .HasMaxLength(50)
                .HasColumnName("RCResult");
            entity.Property(e => e.Rctotal1).HasColumnName("RCTotal_1");
            entity.Property(e => e.Rctotal2).HasColumnName("RCTotal_2");
            entity.Property(e => e.Rctotal3).HasColumnName("RCTotal_3");
            entity.Property(e => e.Rctotal4).HasColumnName("RCTotal_4");
            entity.Property(e => e.Rctotal5).HasColumnName("RCTotal_5");
            entity.Property(e => e.Rname)
                .HasMaxLength(128)
                .HasColumnName("RName");
            entity.Property(e => e.Rstate002).HasColumnName("RState002");
            entity.Property(e => e.SerialName).HasMaxLength(200);
        });

        modelBuilder.Entity<ViewOneExamineB01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB01Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B01_Medical");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B02");

            entity.Property(e => e.CaseName).HasMaxLength(50);
            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(50);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B03");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB03Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B03_Medical");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB04>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B04");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB04Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B04_Medical");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB05>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B05");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineB05Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_B05_Medical");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C03");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC04>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C04");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC05>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C05");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC06>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C06");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC07>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C07");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC08>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C08");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC09>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C09");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC10>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C10");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC11>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C11");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC12>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C12");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC13>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C13");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC14>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C14");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineC15>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_C15");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineD01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_D01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineD01Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_D01_Medical");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineD02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_D02");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineD02Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_D02_Medical");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineD03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_D03");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineD03Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_D03_Medical");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineE01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_E01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineE02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_E02");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineE03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_E03");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineF01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_F01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineG01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_G01");

            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineH01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_H01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineI01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_I01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineJ01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_J01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineJ02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_J02");

            entity.Property(e => e.CaseName).HasMaxLength(50);
            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineJ03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_J03");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamineK01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine_K01");

            entity.Property(e => e.CaseNum).HasMaxLength(179);
            entity.Property(e => e.ExamineDeadLine).HasMaxLength(32);
            entity.Property(e => e.ExamineFinishDate).HasMaxLength(32);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.OneExamineStateName).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneExamine填報內容List>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneExamine填報內容LIST");

            entity.Property(e => e.ExamineContent11).HasColumnName("ExamineContent1_1");
            entity.Property(e => e.ExamineContent12).HasColumnName("ExamineContent1_2");
            entity.Property(e => e.ExamineContent13).HasColumnName("ExamineContent1_3");
            entity.Property(e => e.ExamineContent14).HasColumnName("ExamineContent1_4");
            entity.Property(e => e.ExamineContent15).HasColumnName("ExamineContent1_5");
            entity.Property(e => e.ExamineContent21).HasColumnName("ExamineContent2_1");
            entity.Property(e => e.ExamineContent22).HasColumnName("ExamineContent2_2");
            entity.Property(e => e.ExamineContent23).HasColumnName("ExamineContent2_3");
            entity.Property(e => e.ExamineContent24).HasColumnName("ExamineContent2_4");
            entity.Property(e => e.ExamineContent25).HasColumnName("ExamineContent2_5");
            entity.Property(e => e.ExamineContent31).HasColumnName("ExamineContent3_1");
            entity.Property(e => e.ExamineContent32).HasColumnName("ExamineContent3_2");
            entity.Property(e => e.ExamineContent33).HasColumnName("ExamineContent3_3");
            entity.Property(e => e.ExamineContent34).HasColumnName("ExamineContent3_4");
            entity.Property(e => e.ExamineContent35).HasColumnName("ExamineContent3_5");
            entity.Property(e => e.ExamineContent41).HasColumnName("ExamineContent4_1");
            entity.Property(e => e.ExamineContent42).HasColumnName("ExamineContent4_2");
            entity.Property(e => e.ExamineContent43).HasColumnName("ExamineContent4_3");
            entity.Property(e => e.ExamineContent44).HasColumnName("ExamineContent4_4");
            entity.Property(e => e.ExamineContent45).HasColumnName("ExamineContent4_5");
            entity.Property(e => e.ExamineContent51).HasColumnName("ExamineContent5_1");
            entity.Property(e => e.ExamineContent52).HasColumnName("ExamineContent5_2");
            entity.Property(e => e.ExamineContent53).HasColumnName("ExamineContent5_3");
            entity.Property(e => e.ExamineContent54).HasColumnName("ExamineContent5_4");
            entity.Property(e => e.ExamineContent55).HasColumnName("ExamineContent5_5");
            entity.Property(e => e.ExamineContent61).HasColumnName("ExamineContent6_1");
            entity.Property(e => e.ExamineContent62).HasColumnName("ExamineContent6_2");
            entity.Property(e => e.ExamineContent63).HasColumnName("ExamineContent6_3");
            entity.Property(e => e.ExamineContent64).HasColumnName("ExamineContent6_4");
            entity.Property(e => e.ExamineContent65).HasColumnName("ExamineContent6_5");
            entity.Property(e => e.ExamineContent71).HasColumnName("ExamineContent7_1");
            entity.Property(e => e.ExamineContent72).HasColumnName("ExamineContent7_2");
            entity.Property(e => e.ExamineContent73).HasColumnName("ExamineContent7_3");
            entity.Property(e => e.ExamineContent74).HasColumnName("ExamineContent7_4");
            entity.Property(e => e.ExamineContent75).HasColumnName("ExamineContent7_5");
            entity.Property(e => e.ExamineContentTotal1).HasColumnName("ExamineContentTotal_1");
            entity.Property(e => e.ExamineContentTotal2).HasColumnName("ExamineContentTotal_2");
            entity.Property(e => e.ExamineContentTotal3).HasColumnName("ExamineContentTotal_3");
            entity.Property(e => e.ExamineContentTotal4).HasColumnName("ExamineContentTotal_4");
            entity.Property(e => e.ExamineContentTotal5).HasColumnName("ExamineContentTotal_5");
            entity.Property(e => e.Name).HasMaxLength(4000);
            entity.Property(e => e.SerialName).HasMaxLength(4000);
            entity.Property(e => e.修改人id).HasColumnName("修改人ID");
            entity.Property(e => e.修改時間).HasColumnType("datetime");
            entity.Property(e => e.填寫人id).HasColumnName("填寫人ID");
            entity.Property(e => e.審查完成時間).HasMaxLength(32);
            entity.Property(e => e.審查截止時間).HasMaxLength(32);
            entity.Property(e => e.審查結果).HasMaxLength(50);
        });

        modelBuilder.Entity<ViewOneForm001>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm001");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FileUploadTime).HasColumnType("datetime");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State012Name).HasMaxLength(128);
            entity.Property(e => e.State013Name).HasMaxLength(128);
            entity.Property(e => e.State014Name).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.State015Name).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm0011>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm001_1");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.F1c1)
                .HasMaxLength(128)
                .HasColumnName("F1C1");
            entity.Property(e => e.F1c2)
                .HasMaxLength(128)
                .HasColumnName("F1C2");
            entity.Property(e => e.F1c3)
                .HasMaxLength(128)
                .HasColumnName("F1C3");
            entity.Property(e => e.F1c4).HasColumnName("F1C4");
            entity.Property(e => e.F1c5).HasColumnName("F1C5");
            entity.Property(e => e.F1c6).HasColumnName("F1C6");
            entity.Property(e => e.F1id).HasColumnName("F1Id");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State012Name).HasMaxLength(128);
            entity.Property(e => e.State013Name).HasMaxLength(128);
            entity.Property(e => e.State014Name).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.State015Name).HasMaxLength(128);
            entity.Property(e => e.State016Name).HasMaxLength(128);
            entity.Property(e => e.State017Name).HasMaxLength(128);
            entity.Property(e => e.State018Name).HasMaxLength(128);
            entity.Property(e => e.State018Year).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm0012>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm001_2");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.F2c1)
                .HasMaxLength(128)
                .HasColumnName("F2C1");
            entity.Property(e => e.F2c10).HasColumnName("F2C10");
            entity.Property(e => e.F2c2)
                .HasMaxLength(128)
                .HasColumnName("F2C2");
            entity.Property(e => e.F2c3)
                .HasMaxLength(128)
                .HasColumnName("F2C3");
            entity.Property(e => e.F2c4)
                .HasMaxLength(128)
                .HasColumnName("F2C4");
            entity.Property(e => e.F2c5)
                .HasMaxLength(128)
                .HasColumnName("F2C5");
            entity.Property(e => e.F2c6)
                .HasMaxLength(128)
                .HasColumnName("F2C6");
            entity.Property(e => e.F2c7).HasColumnName("F2C7");
            entity.Property(e => e.F2c8).HasColumnName("F2C8");
            entity.Property(e => e.F2c9).HasColumnName("F2C9");
            entity.Property(e => e.F2id).HasColumnName("F2Id");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State012Name).HasMaxLength(128);
            entity.Property(e => e.State013Name).HasMaxLength(128);
            entity.Property(e => e.State014Name).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.State015Name).HasMaxLength(128);
            entity.Property(e => e.State016Name).HasMaxLength(128);
            entity.Property(e => e.State017Name).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm0013>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm001_3");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.F3c1).HasColumnName("F3C1");
            entity.Property(e => e.F3c2).HasColumnName("F3C2");
            entity.Property(e => e.F3c3).HasColumnName("F3C3");
            entity.Property(e => e.F3c4).HasColumnName("F3C4");
            entity.Property(e => e.F3id).HasColumnName("F3Id");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State012Name).HasMaxLength(128);
            entity.Property(e => e.State013Name).HasMaxLength(128);
            entity.Property(e => e.State014Name).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.State015Name).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm00131>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm001_3_S");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.F3c1).HasColumnName("F3C1");
            entity.Property(e => e.F3c2).HasColumnName("F3C2");
            entity.Property(e => e.F3c3).HasColumnName("F3C3");
            entity.Property(e => e.F3c4).HasColumnName("F3C4");
            entity.Property(e => e.F3id).HasColumnName("F3Id");
            entity.Property(e => e.F3sc1)
                .HasMaxLength(128)
                .HasColumnName("F3SC1");
            entity.Property(e => e.F3sc2)
                .HasMaxLength(128)
                .HasColumnName("F3SC2");
            entity.Property(e => e.F3sc3)
                .HasMaxLength(128)
                .HasColumnName("F3SC3");
            entity.Property(e => e.F3sc4).HasColumnName("F3SC4");
            entity.Property(e => e.F3sc5).HasColumnName("F3SC5");
            entity.Property(e => e.F3sc6).HasColumnName("F3SC6");
            entity.Property(e => e.F3sc7).HasColumnName("F3SC7");
            entity.Property(e => e.F3sid).HasColumnName("F3SId");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(128);
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State012Name).HasMaxLength(128);
            entity.Property(e => e.State013Name).HasMaxLength(128);
            entity.Property(e => e.State014Name).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.State015Name).HasMaxLength(128);
            entity.Property(e => e.State016Name).HasMaxLength(128);
            entity.Property(e => e.State017Name).HasMaxLength(128);
            entity.Property(e => e.State017Year).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm0014>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm001_4");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.F4c1).HasColumnName("F4C1");
            entity.Property(e => e.F4c2).HasColumnName("F4C2");
            entity.Property(e => e.F4c3).HasColumnName("F4C3");
            entity.Property(e => e.F4c4).HasColumnName("F4C4");
            entity.Property(e => e.F4c5).HasColumnName("F4C5");
            entity.Property(e => e.F4c6).HasColumnName("F4C6");
            entity.Property(e => e.F4c7).HasColumnName("F4C7");
            entity.Property(e => e.F4c8).HasColumnName("F4C8");
            entity.Property(e => e.F4id).HasColumnName("F4Id");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State012Name).HasMaxLength(128);
            entity.Property(e => e.State013Name).HasMaxLength(128);
            entity.Property(e => e.State014Name).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.State015Name).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm00141>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm001_4_S");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DegreeName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.F4c1).HasColumnName("F4C1");
            entity.Property(e => e.F4c2).HasColumnName("F4C2");
            entity.Property(e => e.F4c3).HasColumnName("F4C3");
            entity.Property(e => e.F4c4).HasColumnName("F4C4");
            entity.Property(e => e.F4c5).HasColumnName("F4C5");
            entity.Property(e => e.F4c6).HasColumnName("F4C6");
            entity.Property(e => e.F4c7).HasColumnName("F4C7");
            entity.Property(e => e.F4c8).HasColumnName("F4C8");
            entity.Property(e => e.F4id).HasColumnName("F4Id");
            entity.Property(e => e.F4sc1)
                .HasMaxLength(128)
                .HasColumnName("F4SC1");
            entity.Property(e => e.F4sc2)
                .HasMaxLength(128)
                .HasColumnName("F4SC2");
            entity.Property(e => e.F4sc3)
                .HasMaxLength(128)
                .HasColumnName("F4SC3");
            entity.Property(e => e.F4sid).HasColumnName("F4SId");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(128);
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State012Name).HasMaxLength(128);
            entity.Property(e => e.State013Name).HasMaxLength(128);
            entity.Property(e => e.State014Name).HasMaxLength(128);
            entity.Property(e => e.State014Year).HasMaxLength(128);
            entity.Property(e => e.State015Name).HasMaxLength(128);
            entity.Property(e => e.State016Name).HasMaxLength(128);
            entity.Property(e => e.State017Name).HasMaxLength(128);
            entity.Property(e => e.State017Year).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm002>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm002");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C4).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C6).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FileUploadTime).HasColumnType("datetime");
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State018Name).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm003>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm003");

            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FileUploadTime).HasColumnType("datetime");
            entity.Property(e => e.J1).HasMaxLength(128);
            entity.Property(e => e.J2).HasMaxLength(128);
            entity.Property(e => e.J3).HasMaxLength(128);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name1)
                .HasMaxLength(128)
                .HasColumnName("State011Name_1");
            entity.Property(e => e.State011Name2)
                .HasMaxLength(128)
                .HasColumnName("State011Name_2");
            entity.Property(e => e.State012Name1)
                .HasMaxLength(128)
                .HasColumnName("State012Name_1");
            entity.Property(e => e.State012Name4)
                .HasMaxLength(128)
                .HasColumnName("State012Name_4");
            entity.Property(e => e.State012Name5)
                .HasMaxLength(128)
                .HasColumnName("State012Name_5");
            entity.Property(e => e.State012Name6)
                .HasMaxLength(128)
                .HasColumnName("State012Name_6");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm004>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm004");

            entity.Property(e => e.C32).HasColumnType("datetime");
            entity.Property(e => e.C9).HasColumnType("datetime");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FileUploadTime).HasColumnType("datetime");
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.ProjectName).HasMaxLength(512);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State012Id1)
                .HasMaxLength(128)
                .HasColumnName("State012Id_1");
            entity.Property(e => e.State012Id2)
                .HasMaxLength(128)
                .HasColumnName("State012Id_2");
            entity.Property(e => e.State012Id3)
                .HasMaxLength(128)
                .HasColumnName("State012Id_3");
            entity.Property(e => e.State012Name1)
                .HasMaxLength(128)
                .HasColumnName("State012Name_1");
            entity.Property(e => e.State012Name2)
                .HasMaxLength(128)
                .HasColumnName("State012Name_2");
            entity.Property(e => e.State012Name3)
                .HasMaxLength(128)
                .HasColumnName("State012Name_3");
            entity.Property(e => e.State018Id1).HasColumnName("State018Id_1");
            entity.Property(e => e.State018Id2).HasColumnName("State018Id_2");
            entity.Property(e => e.State018Name1)
                .HasMaxLength(128)
                .HasColumnName("State018Name_1");
            entity.Property(e => e.State018Name2)
                .HasMaxLength(128)
                .HasColumnName("State018Name_2");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm005>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm005");

            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FileUploadTime).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State018Name).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm006>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm006");

            entity.Property(e => e.Applicant1)
                .HasMaxLength(128)
                .HasColumnName("Applicant_1");
            entity.Property(e => e.Applicant2)
                .HasMaxLength(128)
                .HasColumnName("Applicant_2");
            entity.Property(e => e.Applicant3)
                .HasMaxLength(128)
                .HasColumnName("Applicant_3");
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C4).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C6).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.Email1)
                .HasMaxLength(128)
                .HasColumnName("Email_1");
            entity.Property(e => e.Email2)
                .HasMaxLength(128)
                .HasColumnName("Email_2");
            entity.Property(e => e.Email3)
                .HasMaxLength(128)
                .HasColumnName("Email_3");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FileUploadTime).HasColumnType("datetime");
            entity.Property(e => e.Job1)
                .HasMaxLength(128)
                .HasColumnName("Job_1");
            entity.Property(e => e.Job2)
                .HasMaxLength(128)
                .HasColumnName("Job_2");
            entity.Property(e => e.Job3)
                .HasMaxLength(128)
                .HasColumnName("Job_3");
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.Phone1)
                .HasMaxLength(128)
                .HasColumnName("Phone_1");
            entity.Property(e => e.Phone2)
                .HasMaxLength(128)
                .HasColumnName("Phone_2");
            entity.Property(e => e.Phone3)
                .HasMaxLength(128)
                .HasColumnName("Phone_3");
            entity.Property(e => e.ProjectName).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State011Name).HasMaxLength(128);
            entity.Property(e => e.State018Name).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm007>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm007");

            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C10).HasMaxLength(128);
            entity.Property(e => e.C11).HasMaxLength(128);
            entity.Property(e => e.C13).HasMaxLength(128);
            entity.Property(e => e.C14).HasMaxLength(128);
            entity.Property(e => e.C15).HasMaxLength(128);
            entity.Property(e => e.C17).HasMaxLength(128);
            entity.Property(e => e.C18).HasMaxLength(128);
            entity.Property(e => e.C19).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C21).HasMaxLength(128);
            entity.Property(e => e.C22).HasMaxLength(128);
            entity.Property(e => e.C23).HasMaxLength(128);
            entity.Property(e => e.C3).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C6).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.C9).HasMaxLength(128);
            entity.Property(e => e.DepartmentName1)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_1");
            entity.Property(e => e.DepartmentName2)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_2");
            entity.Property(e => e.DepartmentName3)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_3");
            entity.Property(e => e.DepartmentName4)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_4");
            entity.Property(e => e.DepartmentName5)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_5");
            entity.Property(e => e.DepartmentName6)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_6");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.OneFormUploadTime).HasColumnType("datetime");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State0111name)
                .HasMaxLength(128)
                .HasColumnName("State011_1Name");
            entity.Property(e => e.State0112name)
                .HasMaxLength(128)
                .HasColumnName("State011_2Name");
            entity.Property(e => e.State0113name)
                .HasMaxLength(128)
                .HasColumnName("State011_3Name");
            entity.Property(e => e.State0114name)
                .HasMaxLength(128)
                .HasColumnName("State011_4Name");
            entity.Property(e => e.State0115name)
                .HasMaxLength(128)
                .HasColumnName("State011_5Name");
            entity.Property(e => e.State0116name)
                .HasMaxLength(128)
                .HasColumnName("State011_6Name");
            entity.Property(e => e.State011Id1).HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2).HasColumnName("State011Id_2");
            entity.Property(e => e.State011Id3).HasColumnName("State011Id_3");
            entity.Property(e => e.State011Id4).HasColumnName("State011Id_4");
            entity.Property(e => e.State011Id5).HasColumnName("State011Id_5");
            entity.Property(e => e.State011Id6).HasColumnName("State011Id_6");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm008>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm008");

            entity.Property(e => e.C1).HasMaxLength(128);
            entity.Property(e => e.C10).HasMaxLength(128);
            entity.Property(e => e.C11).HasMaxLength(128);
            entity.Property(e => e.C13).HasMaxLength(128);
            entity.Property(e => e.C14).HasMaxLength(128);
            entity.Property(e => e.C16).HasMaxLength(128);
            entity.Property(e => e.C17).HasMaxLength(128);
            entity.Property(e => e.C2).HasMaxLength(128);
            entity.Property(e => e.C4).HasMaxLength(128);
            entity.Property(e => e.C5).HasMaxLength(128);
            entity.Property(e => e.C7).HasMaxLength(128);
            entity.Property(e => e.C8).HasMaxLength(128);
            entity.Property(e => e.DepartmentName1)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_1");
            entity.Property(e => e.DepartmentName2)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_2");
            entity.Property(e => e.DepartmentName3)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_3");
            entity.Property(e => e.DepartmentName4)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_4");
            entity.Property(e => e.DepartmentName5)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_5");
            entity.Property(e => e.DepartmentName6)
                .HasMaxLength(128)
                .HasColumnName("DepartmentName_6");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(50);
            entity.Property(e => e.OneFormUploadTime).HasColumnType("datetime");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.State0111name)
                .HasMaxLength(128)
                .HasColumnName("State011_1Name");
            entity.Property(e => e.State0112name)
                .HasMaxLength(128)
                .HasColumnName("State011_2Name");
            entity.Property(e => e.State0113name)
                .HasMaxLength(128)
                .HasColumnName("State011_3Name");
            entity.Property(e => e.State0114name)
                .HasMaxLength(128)
                .HasColumnName("State011_4Name");
            entity.Property(e => e.State0115name)
                .HasMaxLength(128)
                .HasColumnName("State011_5Name");
            entity.Property(e => e.State0116name)
                .HasMaxLength(128)
                .HasColumnName("State011_6Name");
            entity.Property(e => e.State011Id1).HasColumnName("State011Id_1");
            entity.Property(e => e.State011Id2).HasColumnName("State011Id_2");
            entity.Property(e => e.State011Id3).HasColumnName("State011Id_3");
            entity.Property(e => e.State011Id4).HasColumnName("State011Id_4");
            entity.Property(e => e.State011Id5).HasColumnName("State011Id_5");
            entity.Property(e => e.State011Id6).HasColumnName("State011Id_6");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneForm009>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneForm009");

            entity.Property(e => e.C3)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadId).HasMaxLength(128);
            entity.Property(e => e.OneFormUploadTime).HasColumnType("datetime");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewOneFormAnnex>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneFormAnnex");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FormFileNum).HasMaxLength(256);
            entity.Property(e => e.FormName).HasMaxLength(256);
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(32);
        });

        modelBuilder.Entity<ViewOneFormUpload>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneFormUpload");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.FormFileNum).HasMaxLength(256);
            entity.Property(e => e.FormName).HasMaxLength(256);
            entity.Property(e => e.Id).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(32);
        });

        modelBuilder.Entity<ViewOneNformA01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormA01");

            entity.Property(e => e.CaseNameChinese)
                .HasMaxLength(50)
                .HasColumnName("CaseName_Chinese");
            entity.Property(e => e.CaseNameEnglish)
                .HasMaxLength(50)
                .HasColumnName("CaseName_English");
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB01");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB01Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB01_Medical");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB02");

            entity.Property(e => e.CaseName).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB03");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB03Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB03_Medical");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB04>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB04");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB04Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB04_Medical");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB05>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB05");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformB05Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormB05_Medical");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC03");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC04>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC04");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC05>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC05");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC06>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC06");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC07>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC07");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC08>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC08");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC09>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC09");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC10>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC10");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC11>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC11");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC12>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC12");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC13>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC13");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC14>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC14");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformC15>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormC15");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformCaseNameListNoteRecord>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNForm_CaseNameList_NoteRecord");

            entity.Property(e => e.ApprovedResults).HasMaxLength(50);
            entity.Property(e => e.ExResultNum).HasMaxLength(200);
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformId).HasColumnName("OneNFormId");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.RemindText).HasMaxLength(600);
            entity.Property(e => e.Remork).HasMaxLength(400);
            entity.Property(e => e.SchoolCtrl001Id).HasColumnName("schoolCtrl001Id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformD01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormD01");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformD01Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormD01_Medical");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformD02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormD02");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformD02Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormD02_Medical");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformD03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormD03");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformD03Medical>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormD03_Medical");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformE01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormE01");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformE02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormE02");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformE03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormE03");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformExamineFormRelation>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNForm_ExamineFormRelation");

            entity.Property(e => e.ExamineFormat).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.RecruitFormat).HasMaxLength(50);
        });

        modelBuilder.Entity<ViewOneNformF01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormF01");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformFile>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormFile");

            entity.Property(e => e.OneNformId).HasColumnName("OneNFormId");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.SchoolCtrl001Id).HasColumnName("schoolCtrl001Id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformG01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormG01");

            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(32)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformH01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormH01");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformI01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormI01");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(50)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubField).HasMaxLength(50);
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformJ01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormJ01");

            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainField).HasMaxLength(50);
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformJ02>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormJ02");

            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(600);
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.CaseName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.CourseName).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.SchoolArea)
                .HasMaxLength(50)
                .HasColumnName("schoolArea");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformJ03>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormJ03");

            entity.Property(e => e.AdjustmentName).HasMaxLength(50);
            entity.Property(e => e.ApplicationReason).HasMaxLength(600);
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.AreaName).HasMaxLength(50);
            entity.Property(e => e.ConferenceDate).HasMaxLength(50);
            entity.Property(e => e.ConferenceExpectDate).HasMaxLength(50);
            entity.Property(e => e.CourseName).HasMaxLength(50);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.ProposalNum).HasMaxLength(32);
            entity.Property(e => e.SchoolArea)
                .HasMaxLength(50)
                .HasColumnName("schoolArea");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneNformK01>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneNFormK01");

            entity.Property(e => e.ApplicationConform).HasMaxLength(200);
            entity.Property(e => e.ApprovedNum).HasMaxLength(50);
            entity.Property(e => e.Condition).HasMaxLength(200);
            entity.Property(e => e.EditAuth001).HasColumnName("editAuth001");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.ExportFileName).HasMaxLength(50);
            entity.Property(e => e.FileGuid1).HasMaxLength(50);
            entity.Property(e => e.FileGuid2).HasMaxLength(50);
            entity.Property(e => e.FileGuid3).HasMaxLength(50);
            entity.Property(e => e.FileGuid4).HasMaxLength(50);
            entity.Property(e => e.FormName).HasMaxLength(50);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IncrementNum).HasMaxLength(50);
            entity.Property(e => e.LastThreeYearApplicateQuota1)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApplicateQuota_1");
            entity.Property(e => e.LastThreeYearApplicateQuota2)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApplicateQuota_2");
            entity.Property(e => e.LastThreeYearApplicateQuota3)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApplicateQuota_3");
            entity.Property(e => e.LastThreeYearApprovedQuota1)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApprovedQuota_1");
            entity.Property(e => e.LastThreeYearApprovedQuota2)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApprovedQuota_2");
            entity.Property(e => e.LastThreeYearApprovedQuota3)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearApprovedQuota_3");
            entity.Property(e => e.LastThreeYearDecreasementQuota1)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearDecreasementQuota_1");
            entity.Property(e => e.LastThreeYearDecreasementQuota2)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearDecreasementQuota_2");
            entity.Property(e => e.LastThreeYearDecreasementQuota3)
                .HasMaxLength(50)
                .HasColumnName("LastThreeYearDecreasementQuota_3");
            entity.Property(e => e.LastThreeYearDecreasementReason1)
                .HasMaxLength(200)
                .HasColumnName("LastThreeYearDecreasementReason_1");
            entity.Property(e => e.LastThreeYearDecreasementReason2)
                .HasMaxLength(200)
                .HasColumnName("LastThreeYearDecreasementReason_2");
            entity.Property(e => e.LastThreeYearDecreasementReason3)
                .HasMaxLength(200)
                .HasColumnName("LastThreeYearDecreasementReason_3");
            entity.Property(e => e.MainFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("MainField_Edited");
            entity.Property(e => e.Notes).HasMaxLength(50);
            entity.Property(e => e.OneNformAdjustment)
                .HasMaxLength(128)
                .HasColumnName("OneNFormAdjustment");
            entity.Property(e => e.OneNformFileId).HasColumnName("OneNFormFileId");
            entity.Property(e => e.OneNformState).HasColumnName("OneNFormState");
            entity.Property(e => e.OneNformType)
                .HasMaxLength(128)
                .HasColumnName("OneNFormType");
            entity.Property(e => e.OneNformTypeId).HasColumnName("OneNFormTypeId");
            entity.Property(e => e.OneNformTypeName)
                .HasMaxLength(128)
                .HasColumnName("OneNFormTypeName");
            entity.Property(e => e.SchoolArea)
                .HasMaxLength(50)
                .HasColumnName("schoolArea");
            entity.Property(e => e.SchoolCtrl001id).HasColumnName("schoolCtrl001id");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.SubFieldEdited)
                .HasMaxLength(50)
                .HasColumnName("SubField_Edited");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year)
                .HasMaxLength(50)
                .HasColumnName("year");
        });

        modelBuilder.Entity<ViewOneSchoolCtrl004>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneSchoolCtrl004");

            entity.Property(e => e.CategoryName)
                .HasMaxLength(128)
                .HasColumnName("categoryName");
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.ShuoBoShrBanName).HasMaxLength(128);
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
        });

        modelBuilder.Entity<ViewOneSchoolState>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewOneSchoolState");

            entity.Property(e => e.Cellphone).HasMaxLength(128);
            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditName)
                .HasMaxLength(128)
                .HasColumnName("editName");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.EditUsername)
                .HasMaxLength(128)
                .HasColumnName("editUsername");
            entity.Property(e => e.Email).HasMaxLength(128);
            entity.Property(e => e.FormStateName).HasMaxLength(128);
            entity.Property(e => e.Name).HasMaxLength(128);
            entity.Property(e => e.Phone).HasMaxLength(128);
            entity.Property(e => e.Ps1).HasColumnName("PS1");
            entity.Property(e => e.Ps2).HasColumnName("PS2");
            entity.Property(e => e.Ps3).HasColumnName("PS3");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.Username).HasMaxLength(128);
            entity.Property(e => e.Year).HasMaxLength(128);
        });

        modelBuilder.Entity<ViewStatistics001Export>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("View_Statistics001Export");

            entity.Property(e => e.ClassGroupCode).HasMaxLength(50);
            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.Degree)
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.DepartmentName).HasMaxLength(128);
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.Fpk)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasColumnName("FPK");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.Jqs).HasColumnName("JQS");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum)
                .HasMaxLength(16)
                .HasColumnName("schoolNum");
            entity.Property(e => e.Tclnum)
                .HasMaxLength(16)
                .HasColumnName("TCLNum");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
            entity.Property(e => e.Year).HasMaxLength(16);
        });

        modelBuilder.Entity<ViewTt1111>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_1_1");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.兼任教師每周授課時數每週2小時含以上).HasColumnType("decimal(28, 2)");
        });

        modelBuilder.Entity<ViewTt1112>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_1_2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.兼任教師每周授課時數每週2小時含以上).HasColumnType("decimal(28, 2)");
        });

        modelBuilder.Entity<ViewTt1121>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_2_1");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.兼任教師每周授課時數每週2小時含以上).HasColumnType("decimal(28, 2)");
        });

        modelBuilder.Entity<ViewTt1122>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_2_2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.兼任教師每周授課時數每週2小時含以上).HasColumnType("decimal(28, 2)");
        });

        modelBuilder.Entity<ViewTt1131>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_3_1");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.兼任教師每周授課時數每週2小時含以上).HasColumnType("decimal(28, 2)");
            entity.Property(e => e.統稱).IsUnicode(false);
            entity.Property(e => e.職稱).IsUnicode(false);
            entity.Property(e => e.類別).IsUnicode(false);
        });

        modelBuilder.Entity<ViewTt1132>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_3_2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.兼任教師每周授課時數每週2小時含以上).HasColumnType("decimal(28, 2)");
            entity.Property(e => e.統稱).IsUnicode(false);
            entity.Property(e => e.職稱).IsUnicode(false);
            entity.Property(e => e.類別).IsUnicode(false);
        });

        modelBuilder.Entity<ViewTt1141>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_4_1");

            entity.Property(e => e.一般教師講客座教授).HasColumnName("一般教師講/客座教授");
        });

        modelBuilder.Entity<ViewTt1142>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_4_2");
        });

        modelBuilder.Entity<ViewTt1143>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT1_1_4_3");

            entity.Property(e => e.一般教師講客座教授).HasColumnName("一般教師講/客座教授");
            entity.Property(e => e.全校專任助理教授以上之教師人數專科學校).HasColumnName("全校專任助理教授以上之教師人數(專科學校)");
            entity.Property(e => e.兼任教師可列計數).HasColumnType("numeric(22, 6)");
            entity.Property(e => e.可列計之總師資人數).HasColumnType("numeric(23, 6)");
            entity.Property(e => e.可列計之總師資人數專科學校)
                .HasColumnType("numeric(24, 6)")
                .HasColumnName("可列計之總師資人數(專科學校)");
            entity.Property(e => e.專業技術教師可列計數).HasColumnType("numeric(22, 6)");
        });

        modelBuilder.Entity<ViewTt31>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT3_1");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.其他畢業學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校內必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校內選修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校外必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業實習校外選修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業專業必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業專業選修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業總學分數).HasColumnType("decimal(13, 1)");
            entity.Property(e => e.畢業通識共同必修學分數).HasColumnType("decimal(6, 1)");
            entity.Property(e => e.畢業通識共同選修學分數).HasColumnType("decimal(6, 1)");
        });

        modelBuilder.Entity<ViewTt42>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_2");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt423>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_2_3");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt423特例>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_2_3特例");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt427>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_2_7");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
            entity.Property(e => e.計算時領域類型).HasMaxLength(255);
        });

        modelBuilder.Entity<ViewTt427特例>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_2_7特例");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt428>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_2_8");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.計算時領域類型).HasMaxLength(255);
        });

        modelBuilder.Entity<ViewTt42特例>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_2特例");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt472全學年校外實習學生數一般生採計>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_全學年校外實習學生數一般生採計");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt472全學年校外實習學生數一般生採計特例>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_全學年校外實習學生數一般生採計_特例");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt472全學年校外實習學生數延畢生採計>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_全學年校外實習學生數延畢生採計");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt472學校附屬機構實習一般生採計>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_學校附屬機構實習一般生採計");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt472學校附屬機構實習一般生採計特例>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_學校附屬機構實習一般生採計_特例");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt472學校附屬機構實習延畢生採計>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_學校附屬機構實習延畢生採計");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女");
        });

        modelBuilder.Entity<ViewTt472部分學分校外實習學生數一般生採計>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_部分學分校外實習學生數一般生採計");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女          ");
        });

        modelBuilder.Entity<ViewTt472部分學分校外實習學生數一般生採計特例>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_部分學分校外實習學生數一般生採計_特例");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女                     ");
        });

        modelBuilder.Entity<ViewTt472部分學分校外實習學生數延畢生採計>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT4_7_2_部分學分校外實習學生數延畢生採計");

            entity.Property(e => e.EditAuth001Id).HasColumnName("editAuth001Id");
            entity.Property(e => e.EditTime)
                .HasColumnType("datetime")
                .HasColumnName("editTime");
            entity.Property(e => e.男女).HasColumnName("男+女          ");
        });

        modelBuilder.Entity<ViewTt811>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT8_1_1");

            entity.Property(e => e.使用執照之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.使用執照之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("使用執照之樓地板面積(不含地下室)");
            entity.Property(e => e.使用執照總面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.僅需申請雜項執照之地上改良物).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.其他提供予正式學籍學生活動教學研究之使用校舍建築)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("其他提供予正式學籍學生活動、教學、研究之使用校舍建築");
            entity.Property(e => e.其他面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.出租借情況).HasColumnName("出租(借)情況");
            entity.Property(e => e.學校附屬機構).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.學生宿舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.專供推廣教育使用).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.對外營業者).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.建築樓層數地下樓層).HasColumnName("建築樓層數 (地下樓層)");
            entity.Property(e => e.建築樓層數扣除地下樓層).HasColumnName("建築樓層數 (扣除地下樓層)");
            entity.Property(e => e.所有權狀之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.所有權狀之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("所有權狀之樓地板面積(不含地下室)");
            entity.Property(e => e.所有權狀面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.教職員宿舍包含教職員宿舍學人宿舍校長宿舍等)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("教職員宿舍(包含教職員宿舍、學人宿舍、校長宿舍等)");
            entity.Property(e => e.明顯與學生活動教學研究無關者)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("明顯與學生活動、教學、研究無關者");
            entity.Property(e => e.無須申請建築執照之房舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.面積數採計).HasColumnType("decimal(18, 0)");
        });

        modelBuilder.Entity<ViewTt812>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT8_1_2");

            entity.Property(e => e.使用執照之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.使用執照之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("使用執照之樓地板面積(不含地下室)");
            entity.Property(e => e.使用執照總面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.僅需申請雜項執照之地上改良物).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.其他提供予正式學籍學生活動教學研究之使用校舍建築)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("其他提供予正式學籍學生活動、教學、研究之使用校舍建築");
            entity.Property(e => e.其他面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.出租借情況).HasColumnName("出租(借)情況");
            entity.Property(e => e.學校附屬機構).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.學生宿舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.專供推廣教育使用).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.對外營業者).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.建築樓層數地下樓層).HasColumnName("建築樓層數 (地下樓層)");
            entity.Property(e => e.建築樓層數扣除地下樓層).HasColumnName("建築樓層數 (扣除地下樓層)");
            entity.Property(e => e.所有權狀之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.所有權狀之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("所有權狀之樓地板面積(不含地下室)");
            entity.Property(e => e.所有權狀面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.教職員宿舍包含教職員宿舍學人宿舍校長宿舍等)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("教職員宿舍(包含教職員宿舍、學人宿舍、校長宿舍等)");
            entity.Property(e => e.明顯與學生活動教學研究無關者)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("明顯與學生活動、教學、研究無關者");
            entity.Property(e => e.無須申請建築執照之房舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.面積數採計).HasColumnType("decimal(18, 0)");
        });

        modelBuilder.Entity<ViewTt813>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT8_1_3");

            entity.Property(e => e.使用執照之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.使用執照之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("使用執照之樓地板面積(不含地下室)");
            entity.Property(e => e.使用執照總面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.僅需申請雜項執照之地上改良物).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.其他提供予正式學籍學生活動教學研究之使用校舍建築)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("其他提供予正式學籍學生活動、教學、研究之使用校舍建築");
            entity.Property(e => e.其他面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.出租借情況).HasColumnName("出租(借)情況");
            entity.Property(e => e.學校附屬機構).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.學生宿舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.專供推廣教育使用).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.對外營業者).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.建築樓層數地下樓層).HasColumnName("建築樓層數 (地下樓層)");
            entity.Property(e => e.建築樓層數扣除地下樓層).HasColumnName("建築樓層數 (扣除地下樓層)");
            entity.Property(e => e.所有權狀之地下室樓地板面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.所有權狀之樓地板面積不含地下室)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("所有權狀之樓地板面積(不含地下室)");
            entity.Property(e => e.所有權狀面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.教職員宿舍包含教職員宿舍學人宿舍校長宿舍等)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("教職員宿舍(包含教職員宿舍、學人宿舍、校長宿舍等)");
            entity.Property(e => e.明顯與學生活動教學研究無關者)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("明顯與學生活動、教學、研究無關者");
            entity.Property(e => e.無須申請建築執照之房舍).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.面積數採計).HasColumnType("decimal(18, 0)");
        });

        modelBuilder.Entity<ViewTt83>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ViewTT8_3");

            entity.Property(e => e.RuleYnCn).HasColumnName("rule_yn_cn");
            entity.Property(e => e.使用執照面積).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.床位數女).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.床位數男).HasColumnType("decimal(5, 0)");
            entity.Property(e => e.所有權狀面積).HasColumnType("decimal(8, 2)");
            entity.Property(e => e.收費標準最低).HasColumnType("decimal(6, 0)");
            entity.Property(e => e.收費標準最高).HasColumnType("decimal(6, 0)");
            entity.Property(e => e.機構或公司業主).HasColumnName("機構(或公司/業主)");
            entity.Property(e => e.租金平均標準女).HasColumnType("decimal(8, 0)");
            entity.Property(e => e.租金平均標準男).HasColumnType("decimal(8, 0)");
            entity.Property(e => e.面積數採計).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<ZSchool20180628>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("zSchool-20180628");

            entity.Property(e => e.學年度)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學期)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學校代碼)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學校名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.年級)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所代碼)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所名稱)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.系所類別)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所類別名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ZSchool20180628DepTeacher>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("zSchool_20180628_depTeacher");

            entity.Property(e => e.DbNum).HasMaxLength(32);
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(512)
                .HasColumnName("departmentName");
            entity.Property(e => e.DepartmentNum)
                .HasMaxLength(16)
                .HasColumnName("departmentNum");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(512)
                .HasColumnName("schoolName");
            entity.Property(e => e.SchoolNum).HasMaxLength(32);
            entity.Property(e => e.Tnum).HasColumnName("tnum");
        });

        modelBuilder.Entity<ZSchool20180628Teacher>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("zSchool_20180628_Teacher");

            entity.Property(e => e.AllTeacherStudentRatioActual)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DayDivisionTeacherStudentRatioActual)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DbNum).HasMaxLength(32);
            entity.Property(e => e.MasterTeacherStudentRatioActual)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.NewTime).HasMaxLength(128);
            entity.Property(e => e.SchoolName).HasMaxLength(128);
            entity.Property(e => e.SchoolNum).HasMaxLength(16);
            entity.Property(e => e.Semester).HasMaxLength(16);
            entity.Property(e => e.Tos)
                .HasMaxLength(128)
                .HasColumnName("TOS");
            entity.Property(e => e.全校教師數).HasColumnType("numeric(24, 6)");
            entity.Property(e => e.日間教師數).HasColumnType("numeric(24, 6)");
        });

        modelBuilder.Entity<ZSchool20180628校基庫teacher>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("zSchool_20180628_校基庫Teacher");

            entity.Property(e => e.Teacherid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TEACHERID");
            entity.Property(e => e.借調否)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.借調目的地)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.共聘系所)
                .HasMaxLength(800)
                .IsUnicode(false);
            entity.Property(e => e.兼任教師授課時數)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.分類)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學年度)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學期)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學校代碼)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學校名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.專兼任)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.教師分類)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.教師姓名)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.是否為全時進修教師)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所代碼)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所名稱)
                .HasMaxLength(800)
                .IsUnicode(false);
            entity.Property(e => e.編制內外)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.聘任日期)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.聘書職級)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.證書字號)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.證書職級)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<_109nform21>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("109NForm2_1");

            entity.Property(e => e.ClassName)
                .HasMaxLength(128)
                .HasColumnName("className");
            entity.Property(e => e.CollegeName)
                .HasMaxLength(128)
                .HasColumnName("collegeName");
            entity.Property(e => e.DaShiueBuName).HasMaxLength(128);
            entity.Property(e => e.DepartmentAreaName)
                .HasMaxLength(128)
                .HasColumnName("departmentAreaName");
            entity.Property(e => e.GauJrShengAstate)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJrSheng_AState");
            entity.Property(e => e.GauJungShengHuLiLeiB3state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengHuLiLei_B3State");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiB1state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengHuaGungTuMuJianJuLei_B1State");
            entity.Property(e => e.GauJungShengWuGauJrDueiYingLeiB2state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengWuGauJrDueiYingLei_B2State");
            entity.Property(e => e.GauJungShengYaoXueYuWenLeiB4state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("GauJungShengYaoXueYuWenLei_B4State");
            entity.Property(e => e.GroupName)
                .HasMaxLength(128)
                .HasColumnName("groupName");
            entity.Property(e => e.JuanKeWaiJiaMingAjqsC2state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("JuanKeWaiJiaMingAJQS_C2State");
            entity.Property(e => e.NewGauJrShengAdeposit).HasColumnName("newGauJrSheng_ADeposit");
            entity.Property(e => e.NewGauJrShengAdepositRecover).HasColumnName("newGauJrSheng_ADepositRecover");
            entity.Property(e => e.NewGauJrShengJqsA).HasColumnName("newGauJrShengJQS_A");
            entity.Property(e => e.NewGauJungShengHuLiLeiB3).HasColumnName("newGauJungShengHuLiLei_B3");
            entity.Property(e => e.NewGauJungShengHuLiLeiB3deposit).HasColumnName("newGauJungShengHuLiLei_B3Deposit");
            entity.Property(e => e.NewGauJungShengHuLiLeiB3depositRecover).HasColumnName("newGauJungShengHuLiLei_B3DepositRecover");
            entity.Property(e => e.NewGauJungShengHuaGungTuMuJianJuLeiB1deposit).HasColumnName("newGauJungShengHuaGungTuMuJianJuLei_B1Deposit");
            entity.Property(e => e.NewGauJungShengHuaGungTuMuJianJuLeiB1depositRecover).HasColumnName("newGauJungShengHuaGungTuMuJianJuLei_B1DepositRecover");
            entity.Property(e => e.NewGauJungShengHuaGungTuMuJianJuLeiJosB1).HasColumnName("newGauJungShengHuaGungTuMuJianJuLeiJOS_B1");
            entity.Property(e => e.NewGauJungShengWuGauJrDueiYingLeiB2).HasColumnName("newGauJungShengWuGauJrDueiYingLei_B2");
            entity.Property(e => e.NewGauJungShengWuGauJrDueiYingLeiB2deposit).HasColumnName("newGauJungShengWuGauJrDueiYingLei_B2Deposit");
            entity.Property(e => e.NewGauJungShengWuGauJrDueiYingLeiB2depositRecover).HasColumnName("newGauJungShengWuGauJrDueiYingLei_B2DepositRecover");
            entity.Property(e => e.NewGauJungShengYaoXueYuWenLeiB4).HasColumnName("newGauJungShengYaoXueYuWenLei_B4");
            entity.Property(e => e.NewGauJungShengYaoXueYuWenLeiB4deposit).HasColumnName("newGauJungShengYaoXueYuWenLei_B4Deposit");
            entity.Property(e => e.NewGauJungShengYaoXueYuWenLeiB4depositRecover).HasColumnName("newGauJungShengYaoXueYuWenLei_B4DepositRecover");
            entity.Property(e => e.NewJuanKeWaiJiaMingAC2deposit).HasColumnName("newJuanKeWaiJiaMingA_C2Deposit");
            entity.Property(e => e.NewJuanKeWaiJiaMingAC2depositRecover).HasColumnName("newJuanKeWaiJiaMingA_C2DepositRecover");
            entity.Property(e => e.NewJuanKeWaiJiaMingAjqsC2).HasColumnName("newJuanKeWaiJiaMingAJQS_C2");
            entity.Property(e => e.NewYiBanWaiJiaMingAC1deposit).HasColumnName("newYiBanWaiJiaMingA_C1Deposit");
            entity.Property(e => e.NewYiBanWaiJiaMingAC1depositRecover).HasColumnName("newYiBanWaiJiaMingA_C1DepositRecover");
            entity.Property(e => e.NewYiBanWaiJiaMingAjqsC1).HasColumnName("newYiBanWaiJiaMingAJQS_C1");
            entity.Property(e => e.OldGauJrShengJqsA).HasColumnName("oldGauJrShengJQS_A");
            entity.Property(e => e.OldGauJungShengHuLiLeiB3).HasColumnName("oldGauJungShengHuLiLei_B3");
            entity.Property(e => e.OldGauJungShengHuaGungTuMuJianJuLeiJosB1).HasColumnName("oldGauJungShengHuaGungTuMuJianJuLeiJOS_B1");
            entity.Property(e => e.OldGauJungShengWuGauJrDueiYingLeiB2).HasColumnName("oldGauJungShengWuGauJrDueiYingLei_B2");
            entity.Property(e => e.OldGauJungShengYaoXueYuWenLeiB4).HasColumnName("oldGauJungShengYaoXueYuWenLei_B4");
            entity.Property(e => e.OldJuanKeWaiJiaMingAjqsC2).HasColumnName("oldJuanKeWaiJiaMingAJQS_C2");
            entity.Property(e => e.OldYiBanWaiJiaMingAjqsC1).HasColumnName("oldYiBanWaiJiaMingAJQS_C1");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(128)
                .HasColumnName("schoolName");
            entity.Property(e => e.SumGauJrShengAdeposit).HasColumnName("sumGauJrSheng_ADeposit");
            entity.Property(e => e.SumGauJungShengHuLiLeiB3deposit).HasColumnName("sumGauJungShengHuLiLei_B3Deposit");
            entity.Property(e => e.SumGauJungShengHuaGungTuMuJianJuLeiB1deposit).HasColumnName("sumGauJungShengHuaGungTuMuJianJuLei_B1Deposit");
            entity.Property(e => e.SumGauJungShengWuGauJrDueiYingLeiB2deposit).HasColumnName("sumGauJungShengWuGauJrDueiYingLei_B2Deposit");
            entity.Property(e => e.SumGauJungShengYaoXueYuWenLeiB4deposit).HasColumnName("sumGauJungShengYaoXueYuWenLei_B4Deposit");
            entity.Property(e => e.SumJuanKeWaiJiaMingAC2deposit).HasColumnName("sumJuanKeWaiJiaMingA_C2Deposit");
            entity.Property(e => e.SumYiBanWaiJiaMingAC1deposit).HasColumnName("sumYiBanWaiJiaMingA_C1Deposit");
            entity.Property(e => e.TotalName)
                .HasMaxLength(384)
                .HasColumnName("totalName");
            entity.Property(e => e.YiBanWaiJiaMingAjqsC1state)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("YiBanWaiJiaMingAJQS_C1State");
        });

        modelBuilder.Entity<學制修業年限>(entity =>
        {
            entity.ToTable("學制修業年限");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<學制填報限制>(entity =>
        {
            entity.ToTable("學制填報限制");

            entity.Property(e => e.BoShiBanCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("BoShiBanCW_Enabled");
            entity.Property(e => e.ErJiJinXiuBuCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ErJiJinXiuBuCW_Enabled");
            entity.Property(e => e.ErJiJinXiuXueYuanCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ErJiJinXiuXueYuanCW_Enabled");
            entity.Property(e => e.ErJiRiJianBuCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ErJiRiJianBuCW_Enabled");
            entity.Property(e => e.ErZhuanJinXiuZhuanXiaoCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ErZhuanJinXiuZhuanXiaoCW_Enabled");
            entity.Property(e => e.ErZhuanRiJianBuCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ErZhuanRiJianBuCW_Enabled");
            entity.Property(e => e.ErZhuanYeJianBuCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ErZhuanYeJianBuCW_Enabled");
            entity.Property(e => e.ErZhuanZaiZhiZhuanBanCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ErZhuanZaiZhiZhuanBanCW_Enabled");
            entity.Property(e => e.GauJrShengAcwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("GauJrSheng_ACW_Enabled");
            entity.Property(e => e.GauJungShengHuLiLeiB3cwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("GauJungShengHuLiLei_B3CW_Enabled");
            entity.Property(e => e.GauJungShengHuaGungTuMuJianJuLeiB1cwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("GauJungShengHuaGungTuMuJianJuLei_B1CW_Enabled");
            entity.Property(e => e.GauJungShengWuGauJrDueiYingLeiB2cwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("GauJungShengWuGauJrDueiYingLei_B2CW_Enabled");
            entity.Property(e => e.GauJungShengYaoXueYuWenLeiB4cwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("GauJungShengYaoXueYuWenLei_B4CW_Enabled");
            entity.Property(e => e.JuanKeWaiJiaMingAC2cwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("JuanKeWaiJiaMingA_C2CW_Enabled");
            entity.Property(e => e.ShuoShiBanCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ShuoShiBanCW_Enabled");
            entity.Property(e => e.ShuoShiZaiZhiZhuanBanCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ShuoShiZaiZhiZhuanBanCW_Enabled");
            entity.Property(e => e.SiJiJinXiuBuCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("SiJiJinXiuBuCW_Enabled");
            entity.Property(e => e.SiJiZaiZhiZhuanBanCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("SiJiZaiZhiZhuanBanCW_Enabled");
            entity.Property(e => e.WuZhuanCwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("WuZhuanCW_Enabled");
            entity.Property(e => e.YiBanWaiJiaMingAC1cwEnabled)
                .HasDefaultValueSql("((0))")
                .HasColumnName("YiBanWaiJiaMingA_C1CW_Enabled");
        });

        modelBuilder.Entity<學生數>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("學生數$");

            entity.Property(e => e.F10).HasMaxLength(255);
            entity.Property(e => e.F11).HasMaxLength(255);
            entity.Property(e => e.F12).HasMaxLength(255);
            entity.Property(e => e.F13).HasMaxLength(255);
            entity.Property(e => e.F14).HasMaxLength(255);
            entity.Property(e => e.F16).HasMaxLength(255);
            entity.Property(e => e.F17).HasMaxLength(255);
            entity.Property(e => e.F18).HasMaxLength(255);
            entity.Property(e => e.F19).HasMaxLength(255);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F20).HasMaxLength(255);
            entity.Property(e => e.F21).HasMaxLength(255);
            entity.Property(e => e.F22).HasMaxLength(255);
            entity.Property(e => e.F23).HasMaxLength(255);
            entity.Property(e => e.F24).HasMaxLength(255);
            entity.Property(e => e.F25).HasMaxLength(255);
            entity.Property(e => e.F26).HasMaxLength(255);
            entity.Property(e => e.F27).HasMaxLength(255);
            entity.Property(e => e.F28).HasMaxLength(255);
            entity.Property(e => e.F29).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F30).HasMaxLength(255);
            entity.Property(e => e.F31).HasMaxLength(255);
            entity.Property(e => e.F32).HasMaxLength(255);
            entity.Property(e => e.F33).HasMaxLength(255);
            entity.Property(e => e.F34).HasMaxLength(255);
            entity.Property(e => e.F35).HasMaxLength(255);
            entity.Property(e => e.F36).HasMaxLength(255);
            entity.Property(e => e.F37).HasMaxLength(255);
            entity.Property(e => e.F38).HasMaxLength(255);
            entity.Property(e => e.F39).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F40).HasMaxLength(255);
            entity.Property(e => e.F41).HasMaxLength(255);
            entity.Property(e => e.F42).HasMaxLength(255);
            entity.Property(e => e.F43).HasMaxLength(255);
            entity.Property(e => e.F44).HasMaxLength(255);
            entity.Property(e => e.F45).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.F7).HasMaxLength(255);
            entity.Property(e => e.F8).HasMaxLength(255);
            entity.Property(e => e.F9).HasMaxLength(255);
            entity.Property(e => e._104學年度學生人數試算表)
                .HasMaxLength(255)
                .HasColumnName("104學年度學生人數試算表");
            entity.Property(e => e.校碼校名)
                .HasMaxLength(255)
                .HasColumnName("校碼 / 校名：");
        });

        modelBuilder.Entity<工作表1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("工作表1$");

            entity.Property(e => e.一般電話).HasMaxLength(255);
            entity.Property(e => e.使用者名稱).HasMaxLength(255);
            entity.Property(e => e.信箱).HasMaxLength(255);
            entity.Property(e => e.傳真).HasMaxLength(255);
            entity.Property(e => e.密碼).HasMaxLength(255);
            entity.Property(e => e.帳號).HasMaxLength(255);
            entity.Property(e => e.建立時間).HasMaxLength(255);
            entity.Property(e => e.手機).HasMaxLength(255);
            entity.Property(e => e.角色權限).HasMaxLength(255);
            entity.Property(e => e.辦公室電話).HasMaxLength(255);
        });

        modelBuilder.Entity<師資狀況>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("師資狀況$");

            entity.Property(e => e.F1).HasMaxLength(255);
            entity.Property(e => e.F10).HasMaxLength(255);
            entity.Property(e => e.F11).HasMaxLength(255);
            entity.Property(e => e.F12).HasMaxLength(255);
            entity.Property(e => e.F13).HasMaxLength(255);
            entity.Property(e => e.F14).HasMaxLength(255);
            entity.Property(e => e.F15).HasMaxLength(255);
            entity.Property(e => e.F16).HasMaxLength(255);
            entity.Property(e => e.F17).HasMaxLength(255);
            entity.Property(e => e.F18).HasMaxLength(255);
            entity.Property(e => e.F19).HasMaxLength(255);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F20).HasMaxLength(255);
            entity.Property(e => e.F21).HasMaxLength(255);
            entity.Property(e => e.F22).HasMaxLength(255);
            entity.Property(e => e.F23).HasMaxLength(255);
            entity.Property(e => e.F24).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.F7).HasMaxLength(255);
            entity.Property(e => e.F8).HasMaxLength(255);
            entity.Property(e => e._104學年度師資狀況試算表)
                .HasMaxLength(255)
                .HasColumnName("104學年度師資狀況試算表");
        });

        modelBuilder.Entity<採計職級對照表>(entity =>
        {
            entity.ToTable("採計職級對照表");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Tt1121).HasColumnName("TT1_1_2_1");
            entity.Property(e => e.Tt1122).HasColumnName("TT1_1_2_2");
            entity.Property(e => e.專兼任).HasColumnName("專、兼任");
        });

        modelBuilder.Entity<教師類別與職稱對照表>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("教師類別與職稱對照表_pk")
                .IsClustered(false);

            entity.ToTable("教師類別與職稱對照表");

            entity.HasIndex(e => e.Id, "教師類別與職稱對照表_id_uindex").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Tt1131).HasColumnName("TT1_1_3_1");
            entity.Property(e => e.Tt1132).HasColumnName("TT1_1_3_2");
            entity.Property(e => e.任職狀態).IsUnicode(false);
            entity.Property(e => e.列計職級).IsUnicode(false);
            entity.Property(e => e.專兼任).IsUnicode(false);
            entity.Property(e => e.教師分類).IsUnicode(false);
            entity.Property(e => e.統稱).IsUnicode(false);
            entity.Property(e => e.職稱).IsUnicode(false);
            entity.Property(e => e.類別).IsUnicode(false);
        });

        modelBuilder.Entity<校基庫原始檔複製>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("校基庫原始檔 - 複製");

            entity.Property(e => e.全學年全部學分實習之延畢生人數二專在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數二專夜間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數二專日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數二技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數二技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數博士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數四技在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數四技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數四技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數日間五專)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數日間碩士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數碩士在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數進修學院)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習之延畢生人數進修專校)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數二專在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數二專夜間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數二專日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數二技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數二技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數博士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數四技在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數四技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數四技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數日間五專)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數日間碩士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數碩士在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數進修學院)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.全學年全部學分實習學生人數進修專校)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生二專在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生二專夜間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生二專日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生二技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生二技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生博士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生四技在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生四技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生四技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生日間五專)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生日間碩士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生碩士在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生進修學院)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.在學學生進修專校)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生二專在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生二專夜間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生二專日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生二技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生二技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生博士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生四技在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生四技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生四技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生日間五專)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生日間碩士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生碩士在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生進修學院)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.境外生進修專校)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學年度)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學期)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學校代碼)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.學校名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.年級)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生二專在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生二專夜間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生二專日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生二技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生二技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生博士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生四技在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生四技日間部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生四技進修部)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生日間五專)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生日間碩士班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生碩士在職專班)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生進修學院)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.延畢生進修專校)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所代碼)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所名稱)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.系所類別)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.系所類別名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<校舍面積>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("校舍面積$");

            entity.Property(e => e.F12).HasMaxLength(255);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e._104學年度校舍建築面積試算表)
                .HasMaxLength(255)
                .HasColumnName("104學年度校舍建築面積試算表");
        });

        modelBuilder.Entity<特例>(entity =>
        {
            entity.ToTable("特例");

            entity.Property(e => e.篩選結果)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasComment("篩選結果須為\"1\"");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
